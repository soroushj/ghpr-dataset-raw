{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "#### Overview of the Issue\r\n\r\nIn a generic tarball, `mysql_install_db` will be located in the `scripts/` directory:\r\n```\r\nmorgo@ryzen:~/Downloads$ tar --gzip --list --verbose --file=mysql-5.6.44-linux-glibc2.12-x86_64.tar.gz  | grep mysql_install_db\r\n-rw-r--r-- pb2user/common   14339 2019-03-15 01:55 mysql-5.6.44-linux-glibc2.12-x86_64/man/man1/mysql_install_db.1\r\n-rwxr-xr-x pb2user/common   34558 2019-03-15 09:37 mysql-5.6.44-linux-glibc2.12-x86_64/scripts/mysql_install_db\r\n```\r\n\r\nIn `./go/vt/mysqlctl/mysqld.go` the binary is searched for with `binaryPath`:\r\n```\r\n  cmdPath, err := binaryPath(mysqlRoot, \"mysql_install_db\")\r\n  if err != nil {\r\n    return err\r\n  }\r\n  if _, _, err = execCmd(cmdPath, args, nil, mysqlRoot, nil); err != nil {\r\n    log.Errorf(\"mysql_install_db failed: %v\", err)\r\n    return err\r\n  }\r\n```\r\nThis function lists a set of subdirs to search, of which scripts should be included:\r\n```\r\n// binaryPath does a limited path lookup for a command,\r\n// searching only within sbin and bin in the given root.\r\nfunc binaryPath(root, binary string) (string, error) {\r\n  subdirs := []string{\"sbin\", \"bin\", \"libexec\"}\r\n  for _, subdir := range subdirs {\r\n    binPath := path.Join(root, subdir, binary)\r\n    if _, err := os.Stat(binPath); err == nil {\r\n      return binPath, nil\r\n    }\r\n  }\r\n  return \"\", fmt.Errorf(\"%s not found in any of %s/{%s}\",\r\n    binary, root, strings.Join(subdirs, \",\"))\r\n}\r\n```\r\n\r\n#### Reproduction Steps\r\n\r\nSteps to reproduce this issue, example:\r\n\r\n```\r\nsource ./dev.env\r\n\r\npgrep -f -l '(vtdataroot|VTDATAROOT)' # list Vitess processes\r\npkill -f '(vtdataroot|VTDATAROOT)' # kill Vitess processes\r\n\r\nsleep 1\r\n\r\nfor process in `pgrep -f '(vtdataroot|VTDATAROOT)'`; do\r\n kill -9 $process\r\ndone;\r\n\r\nexport VT_MYSQL_ROOT=/usr/local/mysql\r\nexport VTDATAROOT=/tmp/vtdataroot\r\nrm -rf /tmp/vtdataroot\r\n\r\ncd examples/local/\r\n./101_initial_cluster.sh\r\n```\r\n\r\nErrors with:\r\n```\r\nStarting MySQL for tablet zone1-0000000102...\r\nE0702 11:48:24.391879   22619 mysqlctl.go:254] failed init mysql: mysql_install_db not found in any of /usr/local/mysql/{sbin,bin,libexec}\r\nE0702 11:48:24.392027   22618 mysqlctl.go:254] failed init mysql: mysql_install_db not found in any of /usr/local/mysql/{sbin,bin,libexec}\r\nE0702 11:48:24.392044   22620 mysqlctl.go:254] failed init mysql: mysql_install_db not found in any of /usr/local/mysql/{sbin,bin,libexec}\r\n```\r\n\r\nIt's an easy fix:\r\n```\r\nmorgo@ryzen:~/go/src/github.com/vitessio/src/vitess.io/vitess$ git diff ./go/vt/mysqlctl/mysqld.go\r\ndiff --git a/go/vt/mysqlctl/mysqld.go b/go/vt/mysqlctl/mysqld.go\r\nindex 029586d1c..c4f9e5380 100644\r\n--- a/go/vt/mysqlctl/mysqld.go\r\n+++ b/go/vt/mysqlctl/mysqld.go\r\n@@ -453,7 +453,7 @@ func execCmd(name string, args, env []string, dir string, input io.Reader) (cmd\r\n // binaryPath does a limited path lookup for a command,\r\n // searching only within sbin and bin in the given root.\r\n func binaryPath(root, binary string) (string, error) {\r\n-       subdirs := []string{\"sbin\", \"bin\", \"libexec\"}\r\n+       subdirs := []string{\"sbin\", \"bin\", \"libexec\", \"scripts\"}\r\n        for _, subdir := range subdirs {\r\n                binPath := path.Join(root, subdir, binary)\r\n                if _, err := os.Stat(binPath); err == nil {\r\n\r\n```\r\n\r\n\r\n#### Version\r\n\r\nBuilt from master.",
  "closed_at": "2019-07-15T05:37:43Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/589370?v=4",
    "events_url": "https://api.github.com/users/sougou/events{/privacy}",
    "followers_url": "https://api.github.com/users/sougou/followers",
    "following_url": "https://api.github.com/users/sougou/following{/other_user}",
    "gists_url": "https://api.github.com/users/sougou/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sougou",
    "id": 589370,
    "login": "sougou",
    "node_id": "MDQ6VXNlcjU4OTM3MA==",
    "organizations_url": "https://api.github.com/users/sougou/orgs",
    "received_events_url": "https://api.github.com/users/sougou/received_events",
    "repos_url": "https://api.github.com/users/sougou/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sougou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sougou/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sougou"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/vitessio/vitess/issues/4975/comments",
  "created_at": "2019-07-02T17:52:47Z",
  "events_url": "https://api.github.com/repos/vitessio/vitess/issues/4975/events",
  "html_url": "https://github.com/vitessio/vitess/issues/4975",
  "id": 463359554,
  "labels": [],
  "labels_url": "https://api.github.com/repos/vitessio/vitess/issues/4975/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NjMzNTk1NTQ=",
  "number": 4975,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/vitessio/vitess",
  "state": "closed",
  "title": "mysqlctl does not find mysql_install_db in generic tarballs",
  "updated_at": "2019-07-15T05:37:43Z",
  "url": "https://api.github.com/repos/vitessio/vitess/issues/4975",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/57982?v=4",
    "events_url": "https://api.github.com/users/morgo/events{/privacy}",
    "followers_url": "https://api.github.com/users/morgo/followers",
    "following_url": "https://api.github.com/users/morgo/following{/other_user}",
    "gists_url": "https://api.github.com/users/morgo/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/morgo",
    "id": 57982,
    "login": "morgo",
    "node_id": "MDQ6VXNlcjU3OTgy",
    "organizations_url": "https://api.github.com/users/morgo/orgs",
    "received_events_url": "https://api.github.com/users/morgo/received_events",
    "repos_url": "https://api.github.com/users/morgo/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/morgo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/morgo/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/morgo"
  }
}