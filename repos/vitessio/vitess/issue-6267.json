{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "This is an extension to #4886 .\r\n\r\n## Feature Description\r\n\r\nWith current PITR support in vitess, it is possible to restore to the last backup timestamp. But if we want to go back to the exact time for the restore, it is not possible to apply that delta change. For e.g. say we have last backup at 12:00 AM and it is required to restore upto 3:15 AM. As of now, we can restore the backup upto 12 AM. With current change, it is possible to restore the data till 3:15 AM.\r\n\r\n## Use cases\r\nThis remains still the same as part-1(#4886). Here is the following use case.\r\n - accidental deletion of data\r\n - corruption of data due to application bugs\r\n\r\n## Precondition\r\n - There should be regular backup taken, just so that we don\u2019t have to replay all the binlogs from the start.\r\n- There should be binlogs available till the required point.\r\n- All preconditions of part-1 RFC should be met.\r\n\r\n## Proposed Design\r\n\r\n![Screenshot from 2020-06-04 12-00-09](https://user-images.githubusercontent.com/8344391/83722639-f96a9280-a65a-11ea-967f-bedfa0238043.png)\r\n\r\nThere will be a binlog server which will connect to the mysql server of the master tablet. In a sharded cluster with n shards, there would be n binlog servers.\r\nThere is scheduled backup available at regular intervals.\r\nSay we have to recover the data to 6:15 AM, then we will create a restore keyspace from 6 AM backup and it will connect with the binlog server to get the incremental data for the last 15 min.\r\n\r\n### Binlog server\r\nThere should be a binlog server which uses a reliable file storage system. It should be highly available so that we don\u2019t miss any binlogs. For a sharded environment, we need to run separate binlog servers for each shard. For binlog server, mysql-ripple can be used. The lifecycle of a binlog server has to be managed independently. \r\n\r\n### Applying binlogs\r\nWhile creating the recovery keyspace, we accept a timestamp. Using that information, we will extract the required GTID up to which the binlog will be applied to restored backup. The recovered replica will replicate from binlog server to apply the binlogs needed to get to the required GTID using the mysql replication command(START SLAVE  UNTIL SQL_BEFORE_GTIDS = \u2018xxxx-xx-xx:y-z\u2019)\r\n\r\nNote: we will choose the last GTID _before_ the provided recovery timestamp.\r\n\r\n### Getting GTID from timestamp\r\n\r\nWhile creating the recovery keyspace, we have got the required timestamp(#Ref) to restore up to. Also we have the GTID of the last recent backup (the time closer to the required time) E.g. for PITR for 6:15AM, the last recent backup is 6 AM ( considering we have 6 hr scheduled backup). Then we will connect with binlog server as replica, asking that start_pos = current_GTID of last backup and we will read all event sequentially till the timestamp of event is less than or equal to the requested timestamp(#Ref), once we reach here, we will note the GTID.\r\n\r\n### Getting the data till desired point of time.\r\n\r\nAt this point we have got the following things.\r\n- Last available backup.\r\n- GTID till which we need to replicate from the binlog (the incremental data)\r\n\r\nFirst, we will restore to the last available backup. Then we will connect to the binlog server as a replica with START SLAVE  UNTIL SQL_BEFORE_GTIDS = \u2018xxxx-xx-xx:y-z\u2019 option, which will apply the incremental data till desired point of time. \r\n\r\n## FAQ\r\n\r\n### New configuration\r\nWhile restoring the tablet, you have to specify the binlog server details as the command line argument of the vttablet process.\r\n\r\nIf we have multiple shards in keyspace, then you need to spawn multiple binlog servers and while doing recovery (of particular shard/shards), pass that information in the cmd line arguments.\r\n\r\n### Binlog server and its state management\r\n\r\nAs of now, there will be no binlog server provided out of box in vitess. You will have to spawn the binlog server yourself and connect it with the master tablet\u2019s database. Since the master tablet can be changed via reparenting/other ways, you have to change the binlog server to point to the new master. Also the binlog server needs to be highly available as the binlog files are critical for the restore. If you have a sharded database, then you will need multiple binlog servers for each master of shard.\r\n\r\n",
  "closed_at": "2020-07-18T20:28:57Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/388311?v=4",
    "events_url": "https://api.github.com/users/deepthi/events{/privacy}",
    "followers_url": "https://api.github.com/users/deepthi/followers",
    "following_url": "https://api.github.com/users/deepthi/following{/other_user}",
    "gists_url": "https://api.github.com/users/deepthi/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/deepthi",
    "id": 388311,
    "login": "deepthi",
    "node_id": "MDQ6VXNlcjM4ODMxMQ==",
    "organizations_url": "https://api.github.com/users/deepthi/orgs",
    "received_events_url": "https://api.github.com/users/deepthi/received_events",
    "repos_url": "https://api.github.com/users/deepthi/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/deepthi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/deepthi/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/deepthi"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/vitessio/vitess/issues/6267/comments",
  "created_at": "2020-06-04T06:32:36Z",
  "events_url": "https://api.github.com/repos/vitessio/vitess/issues/6267/events",
  "html_url": "https://github.com/vitessio/vitess/issues/6267",
  "id": 630549094,
  "labels": [],
  "labels_url": "https://api.github.com/repos/vitessio/vitess/issues/6267/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2020-07-29T13:14:02Z",
    "closed_issues": 235,
    "created_at": "2020-05-28T15:27:29Z",
    "creator": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/57982?v=4",
      "events_url": "https://api.github.com/users/morgo/events{/privacy}",
      "followers_url": "https://api.github.com/users/morgo/followers",
      "following_url": "https://api.github.com/users/morgo/following{/other_user}",
      "gists_url": "https://api.github.com/users/morgo/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/morgo",
      "id": 57982,
      "login": "morgo",
      "node_id": "MDQ6VXNlcjU3OTgy",
      "organizations_url": "https://api.github.com/users/morgo/orgs",
      "received_events_url": "https://api.github.com/users/morgo/received_events",
      "repos_url": "https://api.github.com/users/morgo/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/morgo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morgo/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/morgo"
    },
    "description": "7.0 Release GA",
    "due_on": "2020-07-28T07:00:00Z",
    "html_url": "https://github.com/vitessio/vitess/milestone/8",
    "id": 5474182,
    "labels_url": "https://api.github.com/repos/vitessio/vitess/milestones/8/labels",
    "node_id": "MDk6TWlsZXN0b25lNTQ3NDE4Mg==",
    "number": 8,
    "open_issues": 1,
    "state": "closed",
    "title": "v7.0",
    "updated_at": "2020-10-06T19:53:21Z",
    "url": "https://api.github.com/repos/vitessio/vitess/milestones/8"
  },
  "node_id": "MDU6SXNzdWU2MzA1NDkwOTQ=",
  "number": 6267,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/vitessio/vitess",
  "state": "closed",
  "title": "RFC: Point in time recovery (PITR) Part 2",
  "updated_at": "2020-07-18T20:28:57Z",
  "url": "https://api.github.com/repos/vitessio/vitess/issues/6267",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8344391?v=4",
    "events_url": "https://api.github.com/users/arindamnayak/events{/privacy}",
    "followers_url": "https://api.github.com/users/arindamnayak/followers",
    "following_url": "https://api.github.com/users/arindamnayak/following{/other_user}",
    "gists_url": "https://api.github.com/users/arindamnayak/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/arindamnayak",
    "id": 8344391,
    "login": "arindamnayak",
    "node_id": "MDQ6VXNlcjgzNDQzOTE=",
    "organizations_url": "https://api.github.com/users/arindamnayak/orgs",
    "received_events_url": "https://api.github.com/users/arindamnayak/received_events",
    "repos_url": "https://api.github.com/users/arindamnayak/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/arindamnayak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arindamnayak/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/arindamnayak"
  }
}