{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "The MySQL protocol supports sending multiple statements in a single query (see https://dev.mysql.com/doc/internals/en/multi-statement.html).  Vitess supports this, but the behavior of vtgate seems to be different from MySQL server itself.\r\n\r\nMySQL behavior:\r\n  * For a multi-statement sequence, when an error is seen, the server will return the result of the statements successfully executed, plus the error, and then **stop the sequence execution at that point**\r\n\r\nVitess behavior:\r\n  * For a multi-statement sequence, when an error is seen, the server will return the error, but then **continue execution of the multi statement sequence**, returning those results as well.\r\n\r\nUnfortunately, this behavior is not explicitly documented anywhere, but the MySQL client C API documents seem to infer that the client should stop after an error is seen;  so it makes sense for the server to stop executing the multi-statement sequence upon error.  This seems the way that many clients were written, and it seems that some (like the C# connector) will react badly and emit an error like:\r\n\r\n```\r\nMySqlConnector.MySqlProtocolException : Packet received out-of-order. Expected 1; got 2\r\n```\r\n\r\nOther connectors, like the Python MySQL connector from Oracle, seems not to care;  and do not raise an error other than the error produced.  This connector will not, however, return any of the results seen from the server after the error.\r\n\r\n\r\nHere is a simple repro, using the MySQL Python connector and the Vitess local examples (`101_initial_cluster.sh`):\r\n\r\n  * Connecting directly to the MySQL instance, allow login from localhost port 17100 and activate the general log for this instance:\r\n```\r\n$ mysql -S ~/go/vtdataroot/vt_0000000100/mysql.sock -u root -A\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\n.\r\n.\r\nmysql> create user root@'127.0.0.1' identified by 'root';\r\nQuery OK, 0 rows affected (0.00 sec)\r\nmysql> grant all privileges on *.* to root@'127.0.0.1';\r\nQuery OK, 0 rows affected (0.00 sec)\r\nmysql> flush privileges;\r\nQuery OK, 0 rows affected (0.00 sec)\r\nmysql> set global general_log=1;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n```\r\n\r\n  * Now, run the following test program against Vitess, while tailing the MySQL instance general log:\r\n\r\n```\r\n$ cat test_vitess.py \r\nimport mysql.connector\r\n\r\ncnx = mysql.connector.Connect(host='localhost', port=15306,\r\n      database='commerce', user='root', password=\"root\",\r\n      get_warnings=True, autocommit=True)\r\ncursor = cnx.cursor()\r\n\r\nstmt = '''SELECT * from foo; SELECT * from product;'''\r\niterator = cursor.execute(stmt, multi=True)\r\ntry:\r\n  for i in iterator:\r\n    print(i.fetchall())\r\nexcept Exception:\r\n  print(\"Encountered error\")\r\n  pass\r\n\r\ncnx.close()\r\n\r\n$ python test_vitess.py \r\nEncountered error\r\n\r\nThe general log shows:\r\n\r\n2020-09-18T21:01:42.935530Z      1098 Query     select * from foo where 1 != 1\r\n2020-09-18T21:01:42.938324Z      1142 Query     select * from product limit 10001\r\n```\r\n\r\n  * Note this shows that both queries were executed, even though the first query is in error (table `foo` does not exist)\r\n\r\n  * Now, run the same program, modified to run directly against the MySQL on port 17100:\r\n\r\n```\r\n$ cat test_mysql.py \r\nimport mysql.connector\r\n\r\ncnx = mysql.connector.Connect(host='localhost', port=17100,\r\n      database='vt_commerce', user='root', password=\"root\",\r\n      get_warnings=True, autocommit=True)\r\ncursor = cnx.cursor()\r\n\r\nstmt = '''SELECT * from foo; SELECT * from product;'''\r\niterator = cursor.execute(stmt, multi=True)\r\ntry:\r\n  for i in iterator:\r\n    print(i.fetchall())\r\nexcept Exception:\r\n  print(\"Encountered error\")\r\n  pass\r\n\r\ncnx.close()\r\n\r\n$ python test_mysql.py \r\nEncountered error\r\n\r\nThe general log shows:\r\n\r\n2020-09-18T21:03:55.250390Z      1562 Query     SELECT * from foo;\r\n2020-09-18T21:03:55.251502Z      1562 Quit\r\n```\r\n\r\n * Note this proves that after the error, the server does not execute the 2nd statement in the multi-statement query.",
  "closed_at": "2020-10-02T20:09:58Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/388311?v=4",
    "events_url": "https://api.github.com/users/deepthi/events{/privacy}",
    "followers_url": "https://api.github.com/users/deepthi/followers",
    "following_url": "https://api.github.com/users/deepthi/following{/other_user}",
    "gists_url": "https://api.github.com/users/deepthi/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/deepthi",
    "id": 388311,
    "login": "deepthi",
    "node_id": "MDQ6VXNlcjM4ODMxMQ==",
    "organizations_url": "https://api.github.com/users/deepthi/orgs",
    "received_events_url": "https://api.github.com/users/deepthi/received_events",
    "repos_url": "https://api.github.com/users/deepthi/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/deepthi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/deepthi/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/deepthi"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/vitessio/vitess/issues/6747/comments",
  "created_at": "2020-09-18T21:05:33Z",
  "events_url": "https://api.github.com/repos/vitessio/vitess/issues/6747/events",
  "html_url": "https://github.com/vitessio/vitess/issues/6747",
  "id": 704657220,
  "labels": [],
  "labels_url": "https://api.github.com/repos/vitessio/vitess/issues/6747/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": null,
    "closed_issues": 238,
    "created_at": "2020-06-26T19:14:19Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/388311?v=4",
      "events_url": "https://api.github.com/users/deepthi/events{/privacy}",
      "followers_url": "https://api.github.com/users/deepthi/followers",
      "following_url": "https://api.github.com/users/deepthi/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepthi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/deepthi",
      "id": 388311,
      "login": "deepthi",
      "node_id": "MDQ6VXNlcjM4ODMxMQ==",
      "organizations_url": "https://api.github.com/users/deepthi/orgs",
      "received_events_url": "https://api.github.com/users/deepthi/received_events",
      "repos_url": "https://api.github.com/users/deepthi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/deepthi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepthi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/deepthi"
    },
    "description": "",
    "due_on": "2020-10-27T07:00:00Z",
    "html_url": "https://github.com/vitessio/vitess/milestone/10",
    "id": 5587645,
    "labels_url": "https://api.github.com/repos/vitessio/vitess/milestones/10/labels",
    "node_id": "MDk6TWlsZXN0b25lNTU4NzY0NQ==",
    "number": 10,
    "open_issues": 9,
    "state": "open",
    "title": "v8.0",
    "updated_at": "2020-10-27T11:28:05Z",
    "url": "https://api.github.com/repos/vitessio/vitess/milestones/10"
  },
  "node_id": "MDU6SXNzdWU3MDQ2NTcyMjA=",
  "number": 6747,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/vitessio/vitess",
  "state": "closed",
  "title": "Errors in multi-statement queries not fatal to statement sequence",
  "updated_at": "2020-10-06T11:53:50Z",
  "url": "https://api.github.com/repos/vitessio/vitess/issues/6747",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/772642?v=4",
    "events_url": "https://api.github.com/users/aquarapid/events{/privacy}",
    "followers_url": "https://api.github.com/users/aquarapid/followers",
    "following_url": "https://api.github.com/users/aquarapid/following{/other_user}",
    "gists_url": "https://api.github.com/users/aquarapid/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/aquarapid",
    "id": 772642,
    "login": "aquarapid",
    "node_id": "MDQ6VXNlcjc3MjY0Mg==",
    "organizations_url": "https://api.github.com/users/aquarapid/orgs",
    "received_events_url": "https://api.github.com/users/aquarapid/received_events",
    "repos_url": "https://api.github.com/users/aquarapid/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/aquarapid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aquarapid/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/aquarapid"
  }
}