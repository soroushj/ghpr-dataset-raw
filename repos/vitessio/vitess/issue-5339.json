{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "Use schema.sql:\r\n\r\n```\r\ncreate table if not exists account(\r\n        account_id bigint not null auto_increment, \r\n        primary key(account_id)\r\n);\r\n```\r\n\r\nUse vschema.sql:\r\n\r\n```\r\n{\r\n    \"sharded\": true,\r\n    \"tables\": {\r\n        \"account\": {\r\n            \"auto_increment\": {\r\n                \"column\": \"account_id\",\r\n                \"sequence\": \"account_seq_does_not_exist\"\r\n            },\r\n            \"column_vindexes\": [\r\n                {\r\n                    \"column\": \"account_id\",\r\n                    \"name\": \"hash\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"vindexes\": {\r\n        \"hash\": {\r\n            \"type\": \"hash\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\nApply schema and vschema:\r\n\r\n```\r\n$ vtctlclient -server localhost:15999 ApplySchema -sql-file /tmp/schema.sql customer\r\n$ vtctlclient -server localhost:15999 ApplyVSchema -vschema_file /tmp/vschema.json customer\r\nNew VSchema object:\r\n{\r\n  \"sharded\": true,\r\n  \"vindexes\": {\r\n    \"hash\": {\r\n      \"type\": \"hash\"\r\n    }\r\n  },\r\n  \"tables\": {\r\n    \"account\": {\r\n      \"columnVindexes\": [\r\n        {\r\n          \"column\": \"account_id\",\r\n          \"name\": \"hash\"\r\n        }\r\n      ],\r\n      \"autoIncrement\": {\r\n        \"column\": \"account_id\",\r\n        \"sequence\": \"account_seq_does_not_exist\"\r\n      }\r\n    }\r\n  }\r\n}\r\nIf this is not what you expected, check the input data (as JSON parsing will skip unexpected fields).\r\n```\r\n\r\n\r\nNote that account.account_id refers to a sequence that was not created/defined.\r\nNow, insert a row to the account table via vtgate:\r\n\r\n```\r\nmysql> show create table account\\G\r\n*************************** 1. row ***************************\r\n       Table: account\r\nCreate Table: CREATE TABLE `account` (\r\n  `account_id` bigint(20) NOT NULL AUTO_INCREMENT,\r\n  PRIMARY KEY (`account_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\r\n1 row in set (0.00 sec)\r\n\r\nmysql> insert into account (account_id) values (100);\r\nERROR 2013 (HY000): Lost connection to MySQL server during query\r\nmysql> \r\n```\r\n\r\nNote \"connection lost\", because vtgate paniced:\r\n\r\n```\r\nE1021 18:07:34.139406   90505 server.go:270] mysql_server caught panic:\r\nruntime error: invalid memory address or nil pointer dereference\r\n/usr/lib/golang/src/runtime/panic.go:82 (0x444800)\r\n        panicmem: panic(memoryError)\r\n/usr/lib/golang/src/runtime/signal_unix.go:390 (0x44462f)\r\n        sigpanic: panicmem()\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/planbuilder/insert.go:223 (0xacde82)\r\n        io/vitess/go/vt/vtgate/planbuilder.modifyForAutoinc: Query:    fmt.Sprintf(\"select next :n values from %s\", sqlparser.String(eins.Table.AutoIncrement.Sequence.Name)),\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/planbuilder/insert.go:149 (0xacd08b)\r\n        io/vitess/go/vt/vtgate/planbuilder.buildInsertShardedPlan: if err := modifyForAutoinc(ins, eins); err != nil {\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/planbuilder/insert.go:53 (0xacbaa1)\r\n        io/vitess/go/vt/vtgate/planbuilder.buildInsertPlan: return buildInsertShardedPlan(ins, ro.vschemaTable)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/planbuilder/builder.go:277 (0xac4409)\r\n        io/vitess/go/vt/vtgate/planbuilder.BuildFromStmt: plan.Instructions, err = buildInsertPlan(stmt, vschema)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/executor.go:1394 (0xb27d5d)\r\n        io/vitess/go/vt/vtgate.(*Executor).getPlan: plan, err := planbuilder.BuildFromStmt(normalized, stmt, vcursor)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/executor.go:288 (0xb1b44c)\r\n        io/vitess/go/vt/vtgate.(*Executor).handleExec: plan, err := e.getPlan(\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/executor.go:210 (0xb19ed5)\r\n        io/vitess/go/vt/vtgate.(*Executor).execute: qr, err := e.handleExec(ctx, safeSession, sql, bindVars, destKeyspace, destTabletType, dest, logStats)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/executor.go:134 (0xb19a7f)\r\n        io/vitess/go/vt/vtgate.(*Executor).Execute: result, err = e.execute(ctx, safeSession, sql, bindVars, logStats)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/vtgate.go:289 (0xb3d840)\r\n        io/vitess/go/vt/vtgate.(*VTGate).Execute: qr, err = vtg.executor.Execute(ctx, \"Execute\", NewSafeSession(session), sql, bindVariables)\r\n/home/jacques/go/src/vitess.io/vitess/go/vt/vtgate/plugin_mysql_server.go:206 (0xb2b7ba)\r\n        io/vitess/go/vt/vtgate.(*vtgateHandler).ComQuery: session, result, err := vh.vtg.Execute(ctx, session, query, make(map[string]*querypb.BindVariable))\r\n/home/jacques/go/src/vitess.io/vitess/go/mysql/conn.go:1070 (0x852e97)\r\n        io/vitess/go/mysql.(*Conn).execQuery: err := handler.ComQuery(c, query, func(qr *sqltypes.Result) error {\r\n/home/jacques/go/src/vitess.io/vitess/go/mysql/conn.go:768 (0x852714)\r\n        io/vitess/go/mysql.(*Conn).handleNextCommand: if err := c.execQuery(sql, handler, more); err != nil {\r\n/home/jacques/go/src/vitess.io/vitess/go/mysql/server.go:452 (0x86be93)\r\n        io/vitess/go/mysql.(*Listener).handle: err := c.handleNextCommand(l.handler)\r\n```\r\n\r\n\r\n",
  "closed_at": "2019-12-30T16:45:43Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/388311?v=4",
    "events_url": "https://api.github.com/users/deepthi/events{/privacy}",
    "followers_url": "https://api.github.com/users/deepthi/followers",
    "following_url": "https://api.github.com/users/deepthi/following{/other_user}",
    "gists_url": "https://api.github.com/users/deepthi/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/deepthi",
    "id": 388311,
    "login": "deepthi",
    "node_id": "MDQ6VXNlcjM4ODMxMQ==",
    "organizations_url": "https://api.github.com/users/deepthi/orgs",
    "received_events_url": "https://api.github.com/users/deepthi/received_events",
    "repos_url": "https://api.github.com/users/deepthi/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/deepthi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/deepthi/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/deepthi"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/vitessio/vitess/issues/5339/comments",
  "created_at": "2019-10-22T01:14:01Z",
  "events_url": "https://api.github.com/repos/vitessio/vitess/issues/5339/events",
  "html_url": "https://github.com/vitessio/vitess/issues/5339",
  "id": 510378296,
  "labels": [
    {
      "color": "89cff0",
      "default": false,
      "description": "Good issue for new contributors",
      "id": 1406827665,
      "name": "Good First Issue",
      "node_id": "MDU6TGFiZWwxNDA2ODI3NjY1",
      "url": "https://api.github.com/repos/vitessio/vitess/labels/Good%20First%20Issue"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": null,
      "id": 760787448,
      "name": "P1",
      "node_id": "MDU6TGFiZWw3NjA3ODc0NDg=",
      "url": "https://api.github.com/repos/vitessio/vitess/labels/P1"
    },
    {
      "color": "d11f28",
      "default": false,
      "description": "",
      "id": 760789208,
      "name": "Type: Bug",
      "node_id": "MDU6TGFiZWw3NjA3ODkyMDg=",
      "url": "https://api.github.com/repos/vitessio/vitess/labels/Type:%20Bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/vitessio/vitess/issues/5339/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2020-02-04T18:44:01Z",
    "closed_issues": 20,
    "created_at": "2019-09-23T19:57:02Z",
    "creator": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/3588778?v=4",
      "events_url": "https://api.github.com/users/derekperkins/events{/privacy}",
      "followers_url": "https://api.github.com/users/derekperkins/followers",
      "following_url": "https://api.github.com/users/derekperkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/derekperkins/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/derekperkins",
      "id": 3588778,
      "login": "derekperkins",
      "node_id": "MDQ6VXNlcjM1ODg3Nzg=",
      "organizations_url": "https://api.github.com/users/derekperkins/orgs",
      "received_events_url": "https://api.github.com/users/derekperkins/received_events",
      "repos_url": "https://api.github.com/users/derekperkins/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/derekperkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/derekperkins/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/derekperkins"
    },
    "description": "",
    "due_on": "2020-02-05T08:00:00Z",
    "html_url": "https://github.com/vitessio/vitess/milestone/6",
    "id": 4684515,
    "labels_url": "https://api.github.com/repos/vitessio/vitess/milestones/6/labels",
    "node_id": "MDk6TWlsZXN0b25lNDY4NDUxNQ==",
    "number": 6,
    "open_issues": 0,
    "state": "closed",
    "title": "v5.0",
    "updated_at": "2020-02-04T18:44:01Z",
    "url": "https://api.github.com/repos/vitessio/vitess/milestones/6"
  },
  "node_id": "MDU6SXNzdWU1MTAzNzgyOTY=",
  "number": 5339,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/vitessio/vitess",
  "state": "closed",
  "title": "Panic on insert if vschema refers to non-extant sequence",
  "updated_at": "2019-12-30T16:45:43Z",
  "url": "https://api.github.com/repos/vitessio/vitess/issues/5339",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/772642?v=4",
    "events_url": "https://api.github.com/users/aquarapid/events{/privacy}",
    "followers_url": "https://api.github.com/users/aquarapid/followers",
    "following_url": "https://api.github.com/users/aquarapid/following{/other_user}",
    "gists_url": "https://api.github.com/users/aquarapid/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/aquarapid",
    "id": 772642,
    "login": "aquarapid",
    "node_id": "MDQ6VXNlcjc3MjY0Mg==",
    "organizations_url": "https://api.github.com/users/aquarapid/orgs",
    "received_events_url": "https://api.github.com/users/aquarapid/received_events",
    "repos_url": "https://api.github.com/users/aquarapid/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/aquarapid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aquarapid/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/aquarapid"
  }
}