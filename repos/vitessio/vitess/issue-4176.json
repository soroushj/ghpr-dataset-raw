{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "#### Overview of the Issue\r\n\r\nObserved on `vttablet`, but looking at the code this seems to apply to all processes: if a process is already running, with pid-file created (say pid is 12345), and a 2nd process is executed even while the 1st process is operating, the 2nd process overwrites the pid-file with its own PID.\r\n\r\nThe 2nd process then justifiably dies (bails out on e.g. `Cannot listen on port 15991 for gRPC: listen tcp :15991: bind: address already in use`), but we are left with process id `12345` still running, and pid-file containing the PID of a _different process, now dead_.\r\n\r\nThis, in turn, means we cannot shutdown the 1st process properly.\r\n\r\nThis is a misbehavior; a process should only create pid-file if it doesn't exist in the first place.\r\n\r\n_Note_ that I've also observed sometimes (I find it difficult to reproduce) that 2nd process also _deletes_ the pid-file altogether. Looking at the code I see a path to that.\r\n\r\n#### Reproduction Steps\r\n\r\n\r\n1. Run `vttablet ... --pid-file=/vt/some-file.pid`\r\n1. Confirm `/vt/some-file.pid` exists and contains the PID of 1st process.\r\n1. Run `vttablet ... --pid-file=/vt/some-file.pid`\r\n1. Expect second execution to justifiably fail\r\n1. Observe that `/vt/some-file.pid` now contains a different PID, of a process that no longer exists.\r\n\r\n#### Operating system and Environment details\r\n\r\nStandard; linux... Here's our redacted execution command:\r\n\r\n`\r\n/usr/local/bin/vttablet -log_dir /var/log/vitess -tablet-path XXXXXX -tablet_hostname XXXXXX -tablet_dir /var/lib/mysql -health_check_interval 5s -enable_replication_reporter -enforce_strict_trans_tables=false -grpc_port 15991 -port 15101 -service_map grpc-queryservice,grpc-tabletmanager,grpc-updatestream -pid_file /vt/vttablet_XXXXXX.pid -vtctld_addr XXXXXX -topo_implementation consul -topo_global_server_address XXXXXX:8500 -topo_global_root vitess/global -disable_active_reparents -init_keyspace testing_ks -init_shard 0 -init_tablet_type replica -init_db_name_override test -backup_storage_implementation s3 -s3_backup_server_side_encryption AES256 -s3_backup_aws_region XXXXXX -s3_backup_storage_bucket XXXXXX -orc_api_url XXXXXX -orc_discover_interval 5m -orc_timeout 5s -db_dba_user XXXXXX -db_dba_password XXXXXX -db-config-dba-charset utf8 -db_app_user vt_app -db_app_password XXXXXX -db_charset utf8 -db_host XXXXXX -db_port 3306 -db-config-appdebug-uname vt_appdebug -db-config-appdebug-pass XXXXXX -db-config-appdebug-charset utf8 -db_allprivs_user vt_allprivs -db_allprivs_password XXXXXX -db-config-allprivs-charset utf8 -db_repl_user vt_repl -db_repl_password XXXXXX -db-config-repl-charset utf8 -db-config-filtered-uname vt_filtered -db-config-filtered-pass XXXXXX -db-config-filtered-charset utf8\r\n`\r\n\r\n#### Analysis & remediation\r\n\r\nThe code uses `os.Create()`, https://github.com/vitessio/vitess/blob/ecd4cc71362649bfad47db2dd416ec7270db7592/go/vt/servenv/pid_file.go#L36\r\n\r\nDocs for `os.Create()` [explain](https://golang.org/pkg/os/#Create):\r\n\r\n> Create creates the named file with mode 0666 (before umask), truncating it if it already exists.\r\n\r\nInstead, consider:\r\n\r\n```go\r\nfile, err := os.OpenFile(*pidFile, os.O_RDWR|os.O_CREATE|os.O_EXCL, 0666)\r\n```\r\n\r\n`os.O_EXCL` will fail the creation if file already exists.\r\n\r\n\r\nAlso, it seems like `OnExit` the pid-file is dropped, whether or not it was successfully created.\r\n\r\nI suggest not calling `OnClose()` if file wasn't actually created. I'll submit a PR to both.\r\n\r\n",
  "closed_at": "2018-09-05T02:47:26Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/589370?v=4",
    "events_url": "https://api.github.com/users/sougou/events{/privacy}",
    "followers_url": "https://api.github.com/users/sougou/followers",
    "following_url": "https://api.github.com/users/sougou/following{/other_user}",
    "gists_url": "https://api.github.com/users/sougou/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sougou",
    "id": 589370,
    "login": "sougou",
    "node_id": "MDQ6VXNlcjU4OTM3MA==",
    "organizations_url": "https://api.github.com/users/sougou/orgs",
    "received_events_url": "https://api.github.com/users/sougou/received_events",
    "repos_url": "https://api.github.com/users/sougou/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sougou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sougou/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sougou"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/vitessio/vitess/issues/4176/comments",
  "created_at": "2018-09-04T06:11:06Z",
  "events_url": "https://api.github.com/repos/vitessio/vitess/issues/4176/events",
  "html_url": "https://github.com/vitessio/vitess/issues/4176",
  "id": 356665438,
  "labels": [],
  "labels_url": "https://api.github.com/repos/vitessio/vitess/issues/4176/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNTY2NjU0Mzg=",
  "number": 4176,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/vitessio/vitess",
  "state": "closed",
  "title": "pid file recreated even if exists",
  "updated_at": "2018-09-05T02:47:26Z",
  "url": "https://api.github.com/repos/vitessio/vitess/issues/4176",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/2607934?v=4",
    "events_url": "https://api.github.com/users/shlomi-noach/events{/privacy}",
    "followers_url": "https://api.github.com/users/shlomi-noach/followers",
    "following_url": "https://api.github.com/users/shlomi-noach/following{/other_user}",
    "gists_url": "https://api.github.com/users/shlomi-noach/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/shlomi-noach",
    "id": 2607934,
    "login": "shlomi-noach",
    "node_id": "MDQ6VXNlcjI2MDc5MzQ=",
    "organizations_url": "https://api.github.com/users/shlomi-noach/orgs",
    "received_events_url": "https://api.github.com/users/shlomi-noach/received_events",
    "repos_url": "https://api.github.com/users/shlomi-noach/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/shlomi-noach/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/shlomi-noach/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/shlomi-noach"
  }
}