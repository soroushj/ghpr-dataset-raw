{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "Here's a backtrace I saw after the integrations suite aborted:\r\n\r\n```\r\n   2:     0x7f35f90e1012 - std::panicking::default_hook::{{closure}}::h841a24190f877711                                                                                                   [0/1209]                               at src/libstd/sys_common/backtrace.rs:59\r\n                               at src/libstd/panicking.rs:211\r\n   3:     0x7f35f90e0d7d - std::panicking::default_hook::hccb9ceccdd53c71e\r\n                               at src/libstd/panicking.rs:227\r\n   4:     0x7f35f90e1720 - std::panicking::rust_panic_with_hook::he9362bdf637fc5d8\r\n                               at src/libstd/panicking.rs:491\r\n   5:     0x7f35f90e12a1 - std::panicking::continue_panic_fmt::h8c8ecd2074b327b3\r\n                               at src/libstd/panicking.rs:398\r\n   6:     0x7f35f90e11ee - std::panicking::begin_panic_fmt::h1ea521500cda35f2\r\n                               at src/libstd/panicking.rs:353\r\n   7:     0x7f35f6a368d5 - <tikv::util::MustConsumeVec<T> as core::ops::drop::Drop>::drop::h3a3a9b2a849e950d\r\n                               at src/util/mod.rs:442\r\n   8:     0x7f35f5d37e04 - core::ptr::real_drop_in_place::h73e1a9f5ba94b524\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libcore/ptr.rs:204\r\n   9:     0x7f35f5d4e6f5 - core::ptr::real_drop_in_place::hb457c28999b6ad60\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libcore/ptr.rs:204\r\n  10:     0x7f35f5d496c5 - core::ptr::real_drop_in_place::ha6639cedc0ae13d2\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libcore/ptr.rs:204\r\n  11:     0x7f35f5d2e14b - core::ptr::real_drop_in_place::h586f2944246dee8f\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libcore/ptr.rs:204\r\n  12:     0x7f35f5d2ce8d - core::ptr::real_drop_in_place::h550ce18929bf74ec\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libcore/ptr.rs:204\r\n  13:     0x7f35f5c86084 - <tikv::raftstore::store::fsm::batch::BatchSystem<N, C>>::spawn::{{closure}}::h52454cc34b7d955a\r\n                               at /home/brian/pingcap/tikv/src/raftstore/store/fsm/batch.rs:413\r\n  14:     0x7f35f6116c53 - std::sys_common::backtrace::__rust_begin_short_backtrace::h9c7258ee61ef4189\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/sys_common/backtrace.rs:136\r\n  15:     0x7f35f60ea7a5 - std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h22937f1f94d8f216\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/thread/mod.rs:477\r\n  16:     0x7f35f5cedf85 - <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once::hdc7ff75bf672b56c\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/panic.rs:319\r\n  17:     0x7f35f610b559 - std::panicking::try::do_call::h3b2352044d77b600\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/panicking.rs:310\r\n  18:     0x7f35f90f1429 - __rust_maybe_catch_panic\r\n                               at src/libpanic_unwind/lib.rs:102\r\n  19:     0x7f35f61083af - std::panicking::try::h4815b9ded690dc25\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/panicking.rs:289\r\n  20:     0x7f35f5cee135 - std::panic::catch_unwind::h31787006ba5c4dc5\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/panic.rs:398\r\n  21:     0x7f35f60e7eaf - std::thread::Builder::spawn_unchecked::{{closure}}::h42c325abc30012eb\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/libstd/thread/mod.rs:476\r\n  22:     0x7f35f60eb9c7 - <F as alloc::boxed::FnBox<A>>::call_box::h5cfecb9f166a31d2\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/liballoc/boxed.rs:673\r\n  23:     0x7f35f90e504d - std::sys::unix::thread::Thread::new::thread_start::h809dab03f76374f4\r\n                               at /rustc/14997d56a550f4aa99fe737593cd2758227afc56/src/liballoc/boxed.rs:683\r\n                               at src/libstd/sys_common/thread.rs:24\r\n                               at src/libstd/sys/unix/thread.rs:90\r\n  24:     0x7f35f3be76b9 - start_thread\r\n  25:     0x7f35f32d741c - clone\r\n  26:                0x0 - <unknown>\r\nthread panicked while panicking. aborting.\r\nstack backtrace:\r\n   0:     0x7f35f90e2303 - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::h0cd0554f80fdb8db\r\n                               at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:     0xerror: process didn't exit successfully: `/home/brian/pingcap/tikv/target/debug/deps/integrations-bbf39140df7802d9` (signal: 4, SIGILL: illegal instruction)\r\n```\r\n\r\nThe source of the panick is:\r\n\r\n```\r\nimpl<T> Drop for MustConsumeVec<T> {\r\n    fn drop(&mut self) {\r\n        if !self.is_empty() {\r\n            panic!(\"resource leak detected: {}.\", self.tag);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nIt is not appropriate for destructors to panic because it leads to double panic like this ([guide](https://rust-lang-nursery.github.io/api-guidelines/dependability.html#destructors-never-fail-c-dtor-fail). It would be fine to log this, but not panic.\r\n\r\nThe intent here looks to be that the vec must be cleared before it's destroyed, but that will not happen if some other code panicks, guaranteeing double panic and abort.\r\n\r\nIt is unavoidable that a MustConsumeVec will contain elements on panic. If that is unacceptable, then some extra mechanism must be added to do something useful with them on panic.\r\n\r\nThis is a tricky area in Rust. Usually when there is some invariant the must be fulfilled on drop, then you add a by-val `close` method that does those checks. Then though you have to verify that somebody called _that_ in the dtor, and what if they didn't? Can't panic for the same reasons as before.\r\n\r\nOften in these situations the dtor just does the least bad thing, e.g. if `fsync` fails on File close, it fails silently afaik.",
  "closed_at": "2019-06-28T23:02:27Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/147214?v=4",
    "events_url": "https://api.github.com/users/brson/events{/privacy}",
    "followers_url": "https://api.github.com/users/brson/followers",
    "following_url": "https://api.github.com/users/brson/following{/other_user}",
    "gists_url": "https://api.github.com/users/brson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brson",
    "id": 147214,
    "login": "brson",
    "node_id": "MDQ6VXNlcjE0NzIxNA==",
    "organizations_url": "https://api.github.com/users/brson/orgs",
    "received_events_url": "https://api.github.com/users/brson/received_events",
    "repos_url": "https://api.github.com/users/brson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brson"
  },
  "comments": 6,
  "comments_url": "https://api.github.com/repos/tikv/tikv/issues/4309/comments",
  "created_at": "2019-03-05T01:05:52Z",
  "events_url": "https://api.github.com/repos/tikv/tikv/issues/4309/events",
  "html_url": "https://github.com/tikv/tikv/issues/4309",
  "id": 417065683,
  "labels": [
    {
      "color": "d1fad7",
      "default": false,
      "description": "Component: Server",
      "id": 1187766660,
      "name": "component/server",
      "node_id": "MDU6TGFiZWwxMTg3NzY2NjYw",
      "url": "https://api.github.com/repos/tikv/tikv/labels/component/server"
    },
    {
      "color": "0e8a16",
      "default": false,
      "description": "Difficulty: Easy. Ideal for beginners, with mentoring available! (Ping @hoverbear for help)",
      "id": 922320421,
      "name": "difficulty/easy",
      "node_id": "MDU6TGFiZWw5MjIzMjA0MjE=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/difficulty/easy"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Status: Help wanted. Contributions are very welcome!",
      "id": 305526948,
      "name": "status/help-wanted",
      "node_id": "MDU6TGFiZWwzMDU1MjY5NDg=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/status/help-wanted"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "This issue is currently mentored",
      "id": 1158851760,
      "name": "status/mentor",
      "node_id": "MDU6TGFiZWwxMTU4ODUxNzYw",
      "url": "https://api.github.com/repos/tikv/tikv/labels/status/mentor"
    },
    {
      "color": "1d76db",
      "default": false,
      "description": "Type: Issue - Confirmed a bug",
      "id": 305526945,
      "name": "type/bug",
      "node_id": "MDU6TGFiZWwzMDU1MjY5NDU=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/type/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/tikv/tikv/issues/4309/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MTcwNjU2ODM=",
  "number": 4309,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/tikv/tikv",
  "state": "closed",
  "title": "MustConsumeVec double-panics in dtor",
  "updated_at": "2019-06-28T23:02:27Z",
  "url": "https://api.github.com/repos/tikv/tikv/issues/4309",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/147214?v=4",
    "events_url": "https://api.github.com/users/brson/events{/privacy}",
    "followers_url": "https://api.github.com/users/brson/followers",
    "following_url": "https://api.github.com/users/brson/following{/other_user}",
    "gists_url": "https://api.github.com/users/brson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brson",
    "id": 147214,
    "login": "brson",
    "node_id": "MDQ6VXNlcjE0NzIxNA==",
    "organizations_url": "https://api.github.com/users/brson/orgs",
    "received_events_url": "https://api.github.com/users/brson/received_events",
    "repos_url": "https://api.github.com/users/brson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brson"
  }
}