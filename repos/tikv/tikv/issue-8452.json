{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "## Feature Request\r\n\r\n### Is your feature request related to a problem? Please describe:\r\n\r\nWith a second storage engine nearly merged in https://github.com/tikv/tikv/pull/8430, and raftstore is almost entirely parameterized over engines, we are going to soon need a way to run our test suite with more than one engine.\r\n\r\n### Describe the feature you'd like:\r\n\r\nThere are a number of ways to go about making the test suite compatible with multiple engines, and in the long term the strategy we use might be different than in the short term.\r\n\r\nSince the test suite is spread over a lot of different crates and currently assumes a single engine, I think we should do the simplest thing possible right now.\r\n\r\nWhat I suggest for now is this:\r\n\r\n- Create a new engine, `TestEngine`, in `engine_test`.\r\n- Make this engine an enum of every other engine, currently `RocksEngine`, `PanicEngine` and `SkiplistEngine`.\r\n- Create an engine constructor that selects the engine based on a `TIKV_TEST_ENGINE` environment variable.\r\n- Slowly convert tests to use the `TestEngine` constructor instead of the various `RocksEngine` constructors.\r\n\r\nThis will let the test suite continue to operate essentially as-is while other engines are being implemented,\r\nwhile also cleaning up the test engine constructor code such that alternative solutions can be explored later.\r\n\r\n### Describe alternatives you've considered:\r\n\r\nThe obvious downside to this approach is that every method in `engine_test` will be a match statement.\r\n\r\nThis has two big implications:\r\n\r\n- Maintenance will be tedious, though trivial\r\n- Every method has an extra branch\r\n\r\nThat extra branch isn't a big deal for unit tests, but could have impact on benchmarks.\r\n\r\nSome alternatives:\r\n\r\n- Again create a `TestEngine`, but use compile-time flags to decide which engines to use, removing the extra dispatch layer\r\n- Investigate solutions for parameterized tests in Rust and convert the test suite to use engine-parameterized tests.\r\n\r\nUltimately, it may be best to use some macro-based solution to writing paramaterized tests, but it's not obvious to me that there are solutions robust enough for our purposes right now, or that it is worth the effort to begin parameterizing the entire test suite right now.\r\n\r\n### Teachability, Documentation, Adoption, Migration Strategy:\r\n\r\nThis change only affects developers. The main way to teach this is by example. As the test suite is converted to the new idiom, adjacent code should naturally adopt those idioms. Once an entire test suite is converted to use `engine_test` instead of `engine_rocks`, then the `engine_rocks` dependency will be removed, forcing future maintainers to use `engine_test`.\r\n\r\nWe'll need to add some developer documentation about the environment variable and how to write engine-agnostic tests.\r\n\r\ncc @5kbpers @hicqu what do you think?\r\n\r\ncc https://github.com/tikv/tikv/issues/6402\r\n",
  "closed_at": "2020-10-21T01:07:08Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/66930949?v=4",
    "events_url": "https://api.github.com/users/ti-srebot/events{/privacy}",
    "followers_url": "https://api.github.com/users/ti-srebot/followers",
    "following_url": "https://api.github.com/users/ti-srebot/following{/other_user}",
    "gists_url": "https://api.github.com/users/ti-srebot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ti-srebot",
    "id": 66930949,
    "login": "ti-srebot",
    "node_id": "MDQ6VXNlcjY2OTMwOTQ5",
    "organizations_url": "https://api.github.com/users/ti-srebot/orgs",
    "received_events_url": "https://api.github.com/users/ti-srebot/received_events",
    "repos_url": "https://api.github.com/users/ti-srebot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ti-srebot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ti-srebot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ti-srebot"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/tikv/tikv/issues/8452/comments",
  "created_at": "2020-08-14T01:23:14Z",
  "events_url": "https://api.github.com/repos/tikv/tikv/issues/8452/events",
  "html_url": "https://github.com/tikv/tikv/issues/8452",
  "id": 678832127,
  "labels": [
    {
      "color": "d12e67",
      "default": false,
      "description": "SIG: Engine",
      "id": 1662435932,
      "name": "sig/engine",
      "node_id": "MDU6TGFiZWwxNjYyNDM1OTMy",
      "url": "https://api.github.com/repos/tikv/tikv/labels/sig/engine"
    }
  ],
  "labels_url": "https://api.github.com/repos/tikv/tikv/issues/8452/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2Nzg4MzIxMjc=",
  "number": 8452,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/tikv/tikv",
  "state": "closed",
  "title": "Make multiple storage engines testable",
  "updated_at": "2020-10-22T22:32:55Z",
  "url": "https://api.github.com/repos/tikv/tikv/issues/8452",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/147214?v=4",
    "events_url": "https://api.github.com/users/brson/events{/privacy}",
    "followers_url": "https://api.github.com/users/brson/followers",
    "following_url": "https://api.github.com/users/brson/following{/other_user}",
    "gists_url": "https://api.github.com/users/brson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brson",
    "id": 147214,
    "login": "brson",
    "node_id": "MDQ6VXNlcjE0NzIxNA==",
    "organizations_url": "https://api.github.com/users/brson/orgs",
    "received_events_url": "https://api.github.com/users/brson/received_events",
    "repos_url": "https://api.github.com/users/brson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brson"
  }
}