{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/1916485?v=4",
    "events_url": "https://api.github.com/users/breeswish/events{/privacy}",
    "followers_url": "https://api.github.com/users/breeswish/followers",
    "following_url": "https://api.github.com/users/breeswish/following{/other_user}",
    "gists_url": "https://api.github.com/users/breeswish/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/breeswish",
    "id": 1916485,
    "login": "breeswish",
    "node_id": "MDQ6VXNlcjE5MTY0ODU=",
    "organizations_url": "https://api.github.com/users/breeswish/orgs",
    "received_events_url": "https://api.github.com/users/breeswish/received_events",
    "repos_url": "https://api.github.com/users/breeswish/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/breeswish/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/breeswish/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/breeswish"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/1916485?v=4",
      "events_url": "https://api.github.com/users/breeswish/events{/privacy}",
      "followers_url": "https://api.github.com/users/breeswish/followers",
      "following_url": "https://api.github.com/users/breeswish/following{/other_user}",
      "gists_url": "https://api.github.com/users/breeswish/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/breeswish",
      "id": 1916485,
      "login": "breeswish",
      "node_id": "MDQ6VXNlcjE5MTY0ODU=",
      "organizations_url": "https://api.github.com/users/breeswish/orgs",
      "received_events_url": "https://api.github.com/users/breeswish/received_events",
      "repos_url": "https://api.github.com/users/breeswish/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/breeswish/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/breeswish/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/breeswish"
    }
  ],
  "author_association": "MEMBER",
  "body": "## Bug Report\r\n\r\n```\r\n$EXTRA_CARGO_ARGS=\"test_storage_apply_snapshot\" make dev\r\n...\r\ntest raftstore::store::peer_storage::tests::test_storage_apply_snapshot ... ok\r\n\r\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 620 filtered out\r\n\r\nerror: process didn't exit successfully: `/Users/breezewish/Work/PingCAP/tikv/target/debug/deps/tikv-33f46b45de73e2a8 test_storage_apply_snapshot --nocapture` (signal: 11, SIGSEGV: invalid memory reference)\r\nmake[1]: *** [test] Error 101\r\nmake: *** [dev] Error 2\r\n```\r\n\r\n```\r\nvalgrind --tool=memcheck target/debug/deps/tikv-0ad0136b98d90239 test_storage_apply_snapshot\r\n==40729== Memcheck, a memory error detector\r\n==40729== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==40729== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\r\n==40729== Command: target/debug/deps/tikv-0ad0136b98d90239 test_storage_apply_snapshot\r\n==40729== \r\n\r\nrunning 1 test\r\n==40729== Warning: unimplemented fcntl command: 1036\r\n==40729== Warning: unimplemented fcntl command: 1036\r\n==40729== Thread 6 snap-generator:::\r\n==40729== Invalid read of size 8\r\n==40729==    at 0x3041FFD: je_isqalloc (jemalloc_internal.h:0)\r\n==40729==    by 0x3041FFD: isfree (jemalloc.c:1921)\r\n==40729==    by 0x234BFC1: alloc::alloc::dealloc (alloc.rs:80)\r\n==40729==    by 0x234BE98: <alloc::alloc::Global as core::alloc::Alloc>::dealloc (alloc.rs:128)\r\n==40729==    by 0x234ACD7: <alloc::raw_vec::RawVec<T, A>>::dealloc_buffer (raw_vec.rs:720)\r\n==40729==    by 0x234C10D: <alloc::raw_vec::RawVec<T, A> as core::ops::drop::Drop>::drop (raw_vec.rs:729)\r\n==40729==    by 0x8753BD: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0x85A59D: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0xBE8AA0: tikv::util::file::calc_crc32 (file.rs:93)\r\n==40729==    by 0x540CC0: tikv::raftstore::store::snap::Snap::save_cf_files (snap.rs:657)\r\n==40729==    by 0x54244B: tikv::raftstore::store::snap::Snap::do_build (snap.rs:766)\r\n==40729==    by 0x544096: <tikv::raftstore::store::snap::Snap as tikv::raftstore::store::snap::Snapshot>::build (snap.rs:847)\r\n==40729==    by 0xAB8D76: tikv::raftstore::store::peer_storage::do_snapshot (peer_storage.rs:1333)\r\n==40729==  Address 0x9400000 is 16 bytes before a block of size 48 free'd\r\n==40729==    at 0x4CDE1CD: operator delete(void*) (vg_replace_malloc.c:576)\r\n==40729==    by 0x1BB94CB: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true> >::deallocate(std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true>*, unsigned long) (new_allocator.h:110)\r\n==40729==    by 0x1BB6508: std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true>*) (hashtable.h:747)\r\n==40729==    by 0x1BB1F44: std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true>*) (hashtable.h:763)\r\n==40729==    by 0x1BACCDD: std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear() (hashtable.h:1641)\r\n==40729==    by 0x1BA85B1: std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable() (hashtable.h:958)\r\n==40729==    by 0x1B9D2FF: std::unordered_map<std::string, rocksdb::OptionTypeInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> > >::~unordered_map() (unordered_map.h:97)\r\n==40729==    by 0x1D9D3C4: rocksdb::Status rocksdb::GetStringFromStruct<rocksdb::ColumnFamilyOptions>(std::string*, rocksdb::ColumnFamilyOptions const&, std::unordered_map<std::string, rocksdb::OptionTypeInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> > >, std::string const&) (options_helper.cc:1048)\r\n==40729==    by 0x1D97DF7: rocksdb::GetStringFromColumnFamilyOptions(std::string*, rocksdb::ColumnFamilyOptions const&, std::string const&) (options_helper.cc:1071)\r\n==40729==    by 0x1DBA4C9: rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::string const&, rocksdb::Env*) (options_parser.cc:80)\r\n==40729==    by 0x1BE1B3A: rocksdb::DBImpl::WriteOptionsFile(bool, bool) (db_impl.cc:2626)\r\n==40729==    by 0x1C40B60: rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::string const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool) (db_impl_open.cc:1179)\r\n==40729==  Block was alloc'd at\r\n==40729==    at 0x4CDD243: operator new(unsigned long) (vg_replace_malloc.c:334)\r\n==40729==    by 0x1BBC502: __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true> >::allocate(unsigned long, void const*) (new_allocator.h:104)\r\n==40729==    by 0x1BBB136: std::__detail::_Hash_node<std::pair<std::string const, rocksdb::OptionTypeInfo>, true>* std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_node<std::pair<std::string const, rocksdb::OptionTypeInfo> const&>(std::pair<std::string const, rocksdb::OptionTypeInfo> const&) (hashtable.h:724)\r\n==40729==    by 0x1D9BDA8: std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable(std::_Hashtable<std::string, std::pair<std::string const, rocksdb::OptionTypeInfo>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&) (hashtable.h:907)\r\n==40729==    by 0x1D93FF0: std::unordered_map<std::string, rocksdb::OptionTypeInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> > >::unordered_map(std::unordered_map<std::string, rocksdb::OptionTypeInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> > > const&) (unordered_map.h:168)\r\n==40729==    by 0x1D9D38E: rocksdb::Status rocksdb::GetStringFromStruct<rocksdb::ColumnFamilyOptions>(std::string*, rocksdb::ColumnFamilyOptions const&, std::unordered_map<std::string, rocksdb::OptionTypeInfo, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, rocksdb::OptionTypeInfo> > >, std::string const&) (options_helper.cc:1048)\r\n==40729==    by 0x1D97DF7: rocksdb::GetStringFromColumnFamilyOptions(std::string*, rocksdb::ColumnFamilyOptions const&, std::string const&) (options_helper.cc:1071)\r\n==40729==    by 0x1DBA4C9: rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<rocksdb::ColumnFamilyOptions, std::allocator<rocksdb::ColumnFamilyOptions> > const&, std::string const&, rocksdb::Env*) (options_parser.cc:80)\r\n==40729==    by 0x1BE1B3A: rocksdb::DBImpl::WriteOptionsFile(bool, bool) (db_impl.cc:2626)\r\n==40729==    by 0x1C40B60: rocksdb::DBImpl::Open(rocksdb::DBOptions const&, std::string const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**, bool, bool) (db_impl_open.cc:1179)\r\n==40729==    by 0x1C3FA4E: rocksdb::DB::Open(rocksdb::DBOptions const&, std::string const&, std::vector<rocksdb::ColumnFamilyDescriptor, std::allocator<rocksdb::ColumnFamilyDescriptor> > const&, std::vector<rocksdb::ColumnFamilyHandle*, std::allocator<rocksdb::ColumnFamilyHandle*> >*, rocksdb::DB**) (db_impl_open.cc:1010)\r\n==40729==    by 0x1B9DB53: crocksdb_open_column_families (c.cc:680)\r\n==40729== \r\n==40729== Invalid read of size 4\r\n==40729==    at 0x5689C80: pthread_mutex_lock (in /usr/lib64/libpthread-2.17.so)\r\n==40729==    by 0x30497A0: je_malloc_mutex_lock (mutex.h:101)\r\n==40729==    by 0x30497A0: je_arena_dalloc_large (arena.c:3075)\r\n==40729==    by 0x234BFC1: alloc::alloc::dealloc (alloc.rs:80)\r\n==40729==    by 0x234BE98: <alloc::alloc::Global as core::alloc::Alloc>::dealloc (alloc.rs:128)\r\n==40729==    by 0x234ACD7: <alloc::raw_vec::RawVec<T, A>>::dealloc_buffer (raw_vec.rs:720)\r\n==40729==    by 0x234C10D: <alloc::raw_vec::RawVec<T, A> as core::ops::drop::Drop>::drop (raw_vec.rs:729)\r\n==40729==    by 0x8753BD: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0x85A59D: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0xBE8AA0: tikv::util::file::calc_crc32 (file.rs:93)\r\n==40729==    by 0x540CC0: tikv::raftstore::store::snap::Snap::save_cf_files (snap.rs:657)\r\n==40729==    by 0x54244B: tikv::raftstore::store::snap::Snap::do_build (snap.rs:766)\r\n==40729==    by 0x544096: <tikv::raftstore::store::snap::Snap as tikv::raftstore::store::snap::Snapshot>::build (snap.rs:847)\r\n==40729==  Address 0x20 is not stack'd, malloc'd or (recently) free'd\r\n==40729== \r\n==40729== \r\n==40729== Process terminating with default action of signal 11 (SIGSEGV): dumping core\r\n==40729==  Access not within mapped region at address 0x20\r\n==40729==    at 0x5689C80: pthread_mutex_lock (in /usr/lib64/libpthread-2.17.so)\r\n==40729==    by 0x30497A0: je_malloc_mutex_lock (mutex.h:101)\r\n==40729==    by 0x30497A0: je_arena_dalloc_large (arena.c:3075)\r\n==40729==    by 0x234BFC1: alloc::alloc::dealloc (alloc.rs:80)\r\n==40729==    by 0x234BE98: <alloc::alloc::Global as core::alloc::Alloc>::dealloc (alloc.rs:128)\r\n==40729==    by 0x234ACD7: <alloc::raw_vec::RawVec<T, A>>::dealloc_buffer (raw_vec.rs:720)\r\n==40729==    by 0x234C10D: <alloc::raw_vec::RawVec<T, A> as core::ops::drop::Drop>::drop (raw_vec.rs:729)\r\n==40729==    by 0x8753BD: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0x85A59D: core::ptr::drop_in_place (ptr.rs:59)\r\n==40729==    by 0xBE8AA0: tikv::util::file::calc_crc32 (file.rs:93)\r\n==40729==    by 0x540CC0: tikv::raftstore::store::snap::Snap::save_cf_files (snap.rs:657)\r\n==40729==    by 0x54244B: tikv::raftstore::store::snap::Snap::do_build (snap.rs:766)\r\n==40729==    by 0x544096: <tikv::raftstore::store::snap::Snap as tikv::raftstore::store::snap::Snapshot>::build (snap.rs:847)\r\n==40729==  If you believe this happened as a result of a stack\r\n==40729==  overflow in your program's main thread (unlikely but\r\n==40729==  possible), you can try to increase the size of the\r\n==40729==  main thread stack using the --main-stacksize= flag.\r\n==40729==  The main thread stack size used in this run was 10485760.\r\n==40729== \r\n==40729== HEAP SUMMARY:\r\n==40729==     in use at exit: 9,461,341 bytes in 28,083 blocks\r\n==40729==   total heap usage: 103,065 allocs, 74,982 frees, 15,640,555 bytes allocated\r\n==40729== \r\n==40729== LEAK SUMMARY:\r\n==40729==    definitely lost: 40 bytes in 5 blocks\r\n==40729==    indirectly lost: 0 bytes in 0 blocks\r\n==40729==      possibly lost: 5,975,648 bytes in 8 blocks\r\n==40729==    still reachable: 3,485,653 bytes in 28,070 blocks\r\n==40729==                       of which reachable via heuristic:\r\n==40729==                         stdstring          : 1,397,685 bytes in 25,994 blocks\r\n==40729==                         newarray           : 4,984 bytes in 6 blocks\r\n==40729==         suppressed: 0 bytes in 0 blocks\r\n==40729== Rerun with --leak-check=full to see details of leaked memory\r\n==40729== \r\n==40729== For counts of detected and suppressed errors, rerun with: -v\r\n==40729== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 0 from 0)\r\n[1]    40729 segmentation fault  valgrind --tool=memcheck target/debug/deps/tikv-0ad0136b98d90239\r\n```",
  "closed_at": "2018-11-15T07:47:01Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/1916485?v=4",
    "events_url": "https://api.github.com/users/breeswish/events{/privacy}",
    "followers_url": "https://api.github.com/users/breeswish/followers",
    "following_url": "https://api.github.com/users/breeswish/following{/other_user}",
    "gists_url": "https://api.github.com/users/breeswish/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/breeswish",
    "id": 1916485,
    "login": "breeswish",
    "node_id": "MDQ6VXNlcjE5MTY0ODU=",
    "organizations_url": "https://api.github.com/users/breeswish/orgs",
    "received_events_url": "https://api.github.com/users/breeswish/received_events",
    "repos_url": "https://api.github.com/users/breeswish/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/breeswish/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/breeswish/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/breeswish"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/tikv/tikv/issues/3767/comments",
  "created_at": "2018-11-09T09:26:44Z",
  "events_url": "https://api.github.com/repos/tikv/tikv/issues/3767/events",
  "html_url": "https://github.com/tikv/tikv/issues/3767",
  "id": 379084629,
  "labels": [
    {
      "color": "d1fad7",
      "default": false,
      "description": "Component: Unit tests, Integration tests, CI, Benchmarks, etc.",
      "id": 462930498,
      "name": "component/test-bench",
      "node_id": "MDU6TGFiZWw0NjI5MzA0OTg=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/component/test-bench"
    },
    {
      "color": "ed0000",
      "default": false,
      "description": "Priority: Critical",
      "id": 526190947,
      "name": "priority/critical",
      "node_id": "MDU6TGFiZWw1MjYxOTA5NDc=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/priority/critical"
    },
    {
      "color": "1d76db",
      "default": false,
      "description": "Type: Issue - Confirmed a bug",
      "id": 305526945,
      "name": "type/bug",
      "node_id": "MDU6TGFiZWwzMDU1MjY5NDU=",
      "url": "https://api.github.com/repos/tikv/tikv/labels/type/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/tikv/tikv/issues/3767/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNzkwODQ2Mjk=",
  "number": 3767,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/tikv/tikv",
  "state": "closed",
  "title": "test_storage_apply_snapshot possible invalid memory write",
  "updated_at": "2018-12-10T03:19:02Z",
  "url": "https://api.github.com/repos/tikv/tikv/issues/3767",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/1916485?v=4",
    "events_url": "https://api.github.com/users/breeswish/events{/privacy}",
    "followers_url": "https://api.github.com/users/breeswish/followers",
    "following_url": "https://api.github.com/users/breeswish/following{/other_user}",
    "gists_url": "https://api.github.com/users/breeswish/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/breeswish",
    "id": 1916485,
    "login": "breeswish",
    "node_id": "MDQ6VXNlcjE5MTY0ODU=",
    "organizations_url": "https://api.github.com/users/breeswish/orgs",
    "received_events_url": "https://api.github.com/users/breeswish/received_events",
    "repos_url": "https://api.github.com/users/breeswish/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/breeswish/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/breeswish/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/breeswish"
  }
}