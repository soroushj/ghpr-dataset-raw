{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "I believe I'm running into a bug due to having a second zone that could be part of the first zone, so CNAMEs from the first zone aren't being checked against the second zone.\r\n\r\n**Scenario:**\r\nTwo zones configured as secondaries\r\n  1. example.com\r\n  2. foo.example.com\r\n\r\nA CNAME record in example.com that points to an A record in foo.example.com\r\n\r\n    bar.example.com. CNAME bar.foo.example.com\r\n    bar.foo.example.com A 192.168.1.1\r\n\r\n**The problem:**\r\nCoredns returns the CNAME record to a dig query but not the A record\r\n\r\n**Expected result:**\r\nCoredns returns both the CNAME and A record to the dig query\r\n\r\n**Dig examples:**\r\n\r\n    /etc/coredns # dig @localhost bar.example.com\r\n    \r\n    ; <<>> DiG 9.11.2-P1 <<>> @localhost bar.example.com\r\n    ; (2 servers found)\r\n    ;; global options: +cmd\r\n    ;; Got answer:\r\n    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 56085\r\n    ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 1\r\n    \r\n    ;; OPT PSEUDOSECTION:\r\n    ; EDNS: version: 0, flags:; udp: 4096\r\n    ; COOKIE: f2701ad5b57f128e (echoed)\r\n    ;; QUESTION SECTION:\r\n    ;bar.example.com.                 IN      A\r\n    \r\n    ;; ANSWER SECTION:\r\n    bar.example.com.          30      IN      CNAME   bar.foo.example.com.\r\n    \r\n    ;; AUTHORITY SECTION:\r\n    example.com.              30      IN      NS      ns1.example.com.\r\n    example.com.              30      IN      NS      ns2.example.com.\r\n    example.com.              30      IN      NS      ns3.example.com.\r\n    example.com.              30      IN      NS      ns4.example.com.\r\n    \r\n    ;; Query time: 0 msec\r\n    ;; SERVER: ::1#53(::1)\r\n    ;; WHEN: Fri Jun 08 00:01:19 UTC 2018\r\n    ;; MSG SIZE  rcvd: 272\r\n    \r\n    \r\n    /etc/coredns # dig @localhost bar.foo.example.com\r\n    \r\n    ; <<>> DiG 9.11.2-P1 <<>> @localhost bar.foo.example.com\r\n    ; (2 servers found)\r\n    ;; global options: +cmd\r\n    ;; Got answer:\r\n    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 48063\r\n    ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 1\r\n    \r\n    ;; OPT PSEUDOSECTION:\r\n    ; EDNS: version: 0, flags:; udp: 4096\r\n    ; COOKIE: 6f0d661a65a5adf5 (echoed)\r\n    ;; QUESTION SECTION:\r\n    ;bar.foo.example.com.           IN      A\r\n    \r\n    ;; ANSWER SECTION:\r\n    bar.foo.example.com.    30      IN      A       192.168.1.1\r\n    \r\n    ;; AUTHORITY SECTION:\r\n    foo.example.com.              30      IN      NS      ns1.example.com.\r\n    foo.example.com.              30      IN      NS      ns2.example.com.\r\n    foo.example.com.              30      IN      NS      ns3.example.com.\r\n    foo.example.com.              30      IN      NS      ns4.example.com.\r\n    \r\n    ;; Query time: 0 msec\r\n    ;; SERVER: ::1#53(::1)\r\n    ;; WHEN: Fri Jun 08 00:03:36 UTC 2018\r\n    ;; MSG SIZE  rcvd: 279\r\n\r\n\r\n**Working dig example when CNAME and A are reversed**\r\n\r\n    /etc/coredns # dig @localhost foo.foo.example.com\r\n    \r\n    ; <<>> DiG 9.11.2-P1 <<>> @localhost foo.foo.example.com\r\n    ; (2 servers found)\r\n    ;; global options: +cmd\r\n    ;; Got answer:\r\n    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 14960\r\n    ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 4, ADDITIONAL: 1\r\n    \r\n    ;; OPT PSEUDOSECTION:\r\n    ; EDNS: version: 0, flags:; udp: 4096\r\n    ; COOKIE: 303eaf5099996a90 (echoed)\r\n    ;; QUESTION SECTION:\r\n    ;foo.foo.example.com.              IN      A\r\n    \r\n    ;; ANSWER SECTION:\r\n    foo.foo.example.com.       30      IN      CNAME   foo.example.com.\r\n    foo.example.com.          30      IN      A       192.168.1.1\r\n    \r\n    ;; AUTHORITY SECTION:\r\n    foo.example.com.              30      IN      NS      ns1.example.com.\r\n    foo.example.com.              30      IN      NS      ns2.example.com.\r\n    foo.example.com.              30      IN      NS      ns3.example.com.\r\n    foo.example.com.              30      IN      NS      ns4.example.com.\r\n    \r\n    ;; Query time: 0 msec\r\n    ;; SERVER: ::1#53(::1)\r\n    ;; WHEN: Fri Jun 08 00:28:26 UTC 2018\r\n    ;; MSG SIZE  rcvd: 313\r\n    \r\n\r\n**Corefile being used**\r\n\r\n    /etc/coredns # cat Corefile\r\n    .:53 {\r\n        cache 30\r\n        errors\r\n        health\r\n        loadbalance round_robin\r\n        log\r\n        prometheus 0.0.0.0:9153\r\n        proxy . /etc/resolv.conf\r\n        secondary example.com {\r\n          transfer from 192.168.2.5\r\n          transfer from 192.168.2.6\r\n          upstream\r\n        }\r\n        secondary foo.example.com {\r\n          transfer from 192.168.2.5\r\n          transfer from 192.168.2.6\r\n          upstream\r\n        }\r\n    }\r\n",
  "closed_at": "2018-06-12T13:54:38Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/353371?v=4",
    "events_url": "https://api.github.com/users/miekg/events{/privacy}",
    "followers_url": "https://api.github.com/users/miekg/followers",
    "following_url": "https://api.github.com/users/miekg/following{/other_user}",
    "gists_url": "https://api.github.com/users/miekg/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/miekg",
    "id": 353371,
    "login": "miekg",
    "node_id": "MDQ6VXNlcjM1MzM3MQ==",
    "organizations_url": "https://api.github.com/users/miekg/orgs",
    "received_events_url": "https://api.github.com/users/miekg/received_events",
    "repos_url": "https://api.github.com/users/miekg/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/miekg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/miekg/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/miekg"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/coredns/coredns/issues/1864/comments",
  "created_at": "2018-06-08T00:32:42Z",
  "events_url": "https://api.github.com/repos/coredns/coredns/issues/1864/events",
  "html_url": "https://github.com/coredns/coredns/issues/1864",
  "id": 330480543,
  "labels": [
    {
      "color": "0e8a16",
      "default": false,
      "description": null,
      "id": 728075788,
      "name": "plugin/file",
      "node_id": "MDU6TGFiZWw3MjgwNzU3ODg=",
      "url": "https://api.github.com/repos/coredns/coredns/labels/plugin/file"
    }
  ],
  "labels_url": "https://api.github.com/repos/coredns/coredns/issues/1864/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzA0ODA1NDM=",
  "number": 1864,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/coredns/coredns",
  "state": "closed",
  "title": "CNAME resolution failing across secondary zones",
  "updated_at": "2018-06-12T13:54:38Z",
  "url": "https://api.github.com/repos/coredns/coredns/issues/1864",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/573929?v=4",
    "events_url": "https://api.github.com/users/xalimar/events{/privacy}",
    "followers_url": "https://api.github.com/users/xalimar/followers",
    "following_url": "https://api.github.com/users/xalimar/following{/other_user}",
    "gists_url": "https://api.github.com/users/xalimar/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/xalimar",
    "id": 573929,
    "login": "xalimar",
    "node_id": "MDQ6VXNlcjU3MzkyOQ==",
    "organizations_url": "https://api.github.com/users/xalimar/orgs",
    "received_events_url": "https://api.github.com/users/xalimar/received_events",
    "repos_url": "https://api.github.com/users/xalimar/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/xalimar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xalimar/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/xalimar"
  }
}