{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "## Summary\r\nThe spec is not adequately clear on what a client should do when traversing a list of delegations if it cannot obtain and validate a role specified in that list. As a consequence, different clients may have different delegation order semantics -- intentionally or unintentionally.\r\n\r\n## Background\r\nNear the bottom of section 4.5 [in the spec](https://github.com/theupdateframework/specification/blob/master/tuf-spec.md#4-document-formats) is an explanation of delegation prioritization.\r\n\r\n## Details\r\nScenario:\r\nSuppose some role \"T\" makes a non-terminating delegation of target files matching `some_path/*` to some roles \"R1\" and \"R2\", in that order.\r\n_(Note that the question is moot for a terminating delegation. \"Terminating\" is defined in the spec, but in short: if T makes a terminating delegation of namespace some_path/\\* to R1, then if the search for a target that matches some_path/\\* reaches the delegation to R1, it will not backtrack to proceed to R2 or further delegations in T's list of delegations. In other words, by making a terminating delegation of some_path/\\* to R1, T is excluding from its later delegations the right to specify a target that matches some_path/\\*)_\r\n\r\n**Early delegation confers early right to specify a target. It is clear that if R1 specifies target info and a client finds a matching target file, that this should be considered the valid target file, and any target info R2 provides for this target should be disregarded.** But what if a client can't find or validate an R1 role file? Should the client proceed to R2?\r\n\r\n## Solution\r\n**The behavior we think makes the most sense, to provide for a consistent meaning for delegations and prevent MITM attacks that exclude particular role files resulting in different targets being deemed valid, has the client halt its search for target file info for the given target if it cannot obtain or validate R1, and not proceed to R2 or backtrack, since R1 has the right to specify the target info for that target.** This also is the behavior of the reference implementation.\r\n\r\nThe spec should indicate that this is the expected behavior, in [spec section 5.1 (Detailed client workflows)](https://github.com/theupdateframework/specification/blob/master/tuf-spec.md#5-detailed-workflows).\r\n\r\nIf this is not made rigid, it should at least be made clear that delegation order semantics will vary based on the behavior chosen. (People should not stumble into a behavior.)\r\n",
  "closed_at": "2018-06-19T19:48:32Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/3520883?v=4",
    "events_url": "https://api.github.com/users/vladimir-v-diaz/events{/privacy}",
    "followers_url": "https://api.github.com/users/vladimir-v-diaz/followers",
    "following_url": "https://api.github.com/users/vladimir-v-diaz/following{/other_user}",
    "gists_url": "https://api.github.com/users/vladimir-v-diaz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/vladimir-v-diaz",
    "id": 3520883,
    "login": "vladimir-v-diaz",
    "node_id": "MDQ6VXNlcjM1MjA4ODM=",
    "organizations_url": "https://api.github.com/users/vladimir-v-diaz/orgs",
    "received_events_url": "https://api.github.com/users/vladimir-v-diaz/received_events",
    "repos_url": "https://api.github.com/users/vladimir-v-diaz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/vladimir-v-diaz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vladimir-v-diaz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/vladimir-v-diaz"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/theupdateframework/specification/issues/17/comments",
  "created_at": "2018-02-28T21:03:01Z",
  "events_url": "https://api.github.com/repos/theupdateframework/specification/issues/17/events",
  "html_url": "https://github.com/theupdateframework/specification/issues/17",
  "id": 301182089,
  "labels": [],
  "labels_url": "https://api.github.com/repos/theupdateframework/specification/issues/17/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMDExODIwODk=",
  "number": 17,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/theupdateframework/specification",
  "state": "closed",
  "title": "Clarify consequence of a delegated-to role not being found during target validation",
  "updated_at": "2018-06-19T19:48:32Z",
  "url": "https://api.github.com/repos/theupdateframework/specification/issues/17",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4",
    "events_url": "https://api.github.com/users/awwad/events{/privacy}",
    "followers_url": "https://api.github.com/users/awwad/followers",
    "following_url": "https://api.github.com/users/awwad/following{/other_user}",
    "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/awwad",
    "id": 13263928,
    "login": "awwad",
    "node_id": "MDQ6VXNlcjEzMjYzOTI4",
    "organizations_url": "https://api.github.com/users/awwad/orgs",
    "received_events_url": "https://api.github.com/users/awwad/received_events",
    "repos_url": "https://api.github.com/users/awwad/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/awwad/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/awwad"
  }
}