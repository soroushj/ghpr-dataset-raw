{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**What did you do?**\r\nStart Prometheus (587dec9e) with the example config (with the example alertmanager target enabled).\r\n\r\n**What did you expect to see?**\r\nStatus page (http://localhost:9090/status) should show one configured Alertmanager.\r\n\r\n**What did you see instead? Under which circumstances?**\r\nStatus page does not show any Alertmanagers.\r\n\r\n**Environment**\r\n\r\n* System information: Linux 4.14.8-1-ARCH x86_64\r\n* Prometheus version:\r\n```\r\nprometheus, version 2.0.0 (branch: HEAD, revision: 587dec9eb970531cddc7f1803d258e72129b5aa0)\r\n  build user:       christian@wuechoo\r\n  build date:       20171229-22:55:19\r\n  go version:       go1.9.2\r\n```\r\n\r\n\r\n* Prometheus configuration file:\r\n```yaml\r\n# my global config\r\nglobal:\r\n  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\r\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\r\n  # scrape_timeout is set to the global default (10s).\r\n\r\n# Alertmanager configuration\r\nalerting:\r\n  alertmanagers:\r\n  - static_configs:\r\n    - targets:\r\n       - alertmanager:9093\r\n\r\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\r\nrule_files:\r\n  # - \"first_rules.yml\"\r\n  # - \"second_rules.yml\"\r\n\r\n# A scrape configuration containing exactly one endpoint to scrape:\r\n# Here it's Prometheus itself.\r\nscrape_configs:\r\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\r\n  - job_name: 'prometheus'\r\n\r\n    # metrics_path defaults to '/metrics'\r\n    # scheme defaults to 'http'.\r\n\r\n    static_configs:\r\n      - targets: ['localhost:9090']\r\n```\r\n\r\nfile_sd_configs seems to yield the same result. This may indicate a general issue with alertmanager target discovery in master. I have not tried other discovery methods though. Maybe I am misunderstand something or I am supposed to use different configs now, but for now, this looks like a bug to me as it unexpectedly changes previous behaviour.\r\n\r\nI tried bisect'ing this issue but could not identify a single commit due to build issues (`retrieval/manager.go:95:11: undefined: TargetManager`).\r\n\r\nThe last working and building commit is a8cce41882e5d94f876d93c1b7c29d37a32f58eb.\r\nThe first non-working and building commit is 587dec9eb970531cddc7f1803d258e72129b5aa0\r\n\r\n```bash\r\n$ git bisect log\r\n# only skipped commits left to test\r\n# possible first bad commit: [587dec9eb970531cddc7f1803d258e72129b5aa0] rebased and resolved conflicts with the new Discovery GUI page\r\n# possible first bad commit: [60ef2016d508545f0e8b575a954899cae37a96e2] add a cancel func to the scrape pool as it is needed in the scrape loop select block\r\n# possible first bad commit: [80182a5d82d0f29fe8ec483f2ec1ae6d10f9f1de] use poolKey as the pool map key to avoid multi dimensional maps\r\n# possible first bad commit: [1ec76d1950862c1cd5263065616212a97670449d] rearange the contexts variables and logic split the groupsMerge function to set and get other small nits\r\n# possible first bad commit: [6ff1d5c51e3cb0e0df58aa90a473317e25c6d4ac] add the scrape manager config reloader handle errors with invalid scrape config\r\n# possible first bad commit: [b0d4f6ee08632e09d0b0cc8ec0b2a0cbf61b5861] resolved merge confilc in main.go\r\n# possible first bad commit: [f2df712166ef4e16e69d8aace76202619483c0f8] updated README\r\n# possible first bad commit: [aca8f85699211c2453f0121a4015975c605fc2dd] fixed the tests\r\n# possible first bad commit: [fe6c544532360a09c3cbdc6d235d6798b366263d] some renaming and comments fixes. remove some select state that is most likely obsoleete and hoepfully doesn't braje anything :) merge targets will sort by Discoverer name so we can have consistent tests for the maps.\r\n# possible first bad commit: [f5c2c5ff8fc8e21f9bfaa23d0f81c8245ba8632e] brake the start provider func so that can run unit tests against it.\r\n# possible first bad commit: [c5cb0d2910692cfd77b36d7d270677f58f55d3f9] simplify naming and API.\r\n# possible first bad commit: [9c61f0e8a0c1d4f83d06e003af610a7d671287b2] scrape pool doesn't rely on context as Stop() needs to be blocking to prevent Scrape loops trying to write to a closed TSDB storage.\r\n# possible first bad commit: [e405e2f1ea2156f76a7e70f5471b88a590a8e24a] refactored discovery\r\n\r\n```\r\n\r\nAccording to the commits, this may be related to pull request #3362 (@krasi-georgiev).",
  "closed_at": "2018-01-17T10:38:12Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7354143?v=4",
    "events_url": "https://api.github.com/users/gouthamve/events{/privacy}",
    "followers_url": "https://api.github.com/users/gouthamve/followers",
    "following_url": "https://api.github.com/users/gouthamve/following{/other_user}",
    "gists_url": "https://api.github.com/users/gouthamve/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/gouthamve",
    "id": 7354143,
    "login": "gouthamve",
    "node_id": "MDQ6VXNlcjczNTQxNDM=",
    "organizations_url": "https://api.github.com/users/gouthamve/orgs",
    "received_events_url": "https://api.github.com/users/gouthamve/received_events",
    "repos_url": "https://api.github.com/users/gouthamve/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/gouthamve/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gouthamve/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/gouthamve"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/3637/comments",
  "created_at": "2017-12-29T23:11:22Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/3637/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/3637",
  "id": 285167758,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/3637/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyODUxNjc3NTg=",
  "number": 3637,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "alertmanagers static_configs no longer working on HEAD",
  "updated_at": "2019-03-23T00:55:06Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/3637",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/762915?v=4",
    "events_url": "https://api.github.com/users/hoffie/events{/privacy}",
    "followers_url": "https://api.github.com/users/hoffie/followers",
    "following_url": "https://api.github.com/users/hoffie/following{/other_user}",
    "gists_url": "https://api.github.com/users/hoffie/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hoffie",
    "id": 762915,
    "login": "hoffie",
    "node_id": "MDQ6VXNlcjc2MjkxNQ==",
    "organizations_url": "https://api.github.com/users/hoffie/orgs",
    "received_events_url": "https://api.github.com/users/hoffie/received_events",
    "repos_url": "https://api.github.com/users/hoffie/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hoffie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hoffie/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hoffie"
  }
}