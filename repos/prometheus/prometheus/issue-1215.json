{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "If topk is given a vector of numbers mixed with a few NaNs, it will conditionally include NaNs in the output depending on the ordering of the input vector.\n\nFor example, here's an artificial expression which delivers a mixed vector:\n\n```\nmixed = bottomk(3, up) * 0 or bottomk(10, up * (0/0))\n```\n\nNow mixed is a vector with three 0s and seven NaNs. If we use sort to reorder the vector, so that the 0s are at the end, then topk will select NaNs:\n\n```\ntopk(5, sort(mixed)) // 5xNan\ntopk(5, sort_desc(mixed)) // 3x0, 2xNaN\n```\n\nNow, it's an interesting question what topk should do when it doesn't have enough numbers but does have NaNs: should it filter out the NaNs or test them as less-than every number? But I'm pretty sure it should never prefer NaNs over numbers.\n\nEven if you don't agree with that, you surely agree that the sort order of the input shouldn't influence the output of topk.\n",
  "closed_at": "2015-12-22T14:50:43Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/1215/comments",
  "created_at": "2015-11-12T18:41:45Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/1215/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/1215",
  "id": 116613537,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/1215/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMTY2MTM1Mzc=",
  "number": 1215,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "topk includes NaNs when it should always prefer numbers",
  "updated_at": "2019-03-24T15:28:20Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/1215",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/6503649?v=4",
    "events_url": "https://api.github.com/users/aecolley/events{/privacy}",
    "followers_url": "https://api.github.com/users/aecolley/followers",
    "following_url": "https://api.github.com/users/aecolley/following{/other_user}",
    "gists_url": "https://api.github.com/users/aecolley/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/aecolley",
    "id": 6503649,
    "login": "aecolley",
    "node_id": "MDQ6VXNlcjY1MDM2NDk=",
    "organizations_url": "https://api.github.com/users/aecolley/orgs",
    "received_events_url": "https://api.github.com/users/aecolley/received_events",
    "repos_url": "https://api.github.com/users/aecolley/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/aecolley/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aecolley/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/aecolley"
  }
}