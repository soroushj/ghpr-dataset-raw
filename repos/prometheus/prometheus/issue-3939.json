{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "Apologies for the weirdly specific and yet vague issue title. Essentially what I see happening is that when a function that takes a range selector (e.g. `rate()`) is used in a `query_range` request with a range selector of 16s over the start of a series with 1s resolution, it appears as if it will be fed the first 16 points in the series, then (as if those first 16 points suddenly disappeared), the following 1 point, 2 points, 3 points and so on. So essentially the rate graph looks like this:\r\n\r\n![rate foo 16s](https://user-images.githubusercontent.com/32070098/37203859-637dc1ac-238f-11e8-81a9-e4b3d3d6ba59.png)\r\n\r\nThe 17s rate (and most other range values except 15s, 31s, 32s, 61s...) look correct:\r\n\r\n![rate foo 17s](https://user-images.githubusercontent.com/32070098/37203907-92d9cfb8-238f-11e8-9846-ea452bfb237d.png)\r\n\r\n**What did you do?**\r\n\r\nDid a `/query_range?query=rate(gen_counter[16s])&step=1` over the start of a counter with 1s resolution, incrementing by 1 every second.\r\n\r\n**What did you expect to see?**\r\n\r\nA smooth increase from 0 to 1 over the first 16 seconds, followed by a flat rate of 1.\r\n\r\n**What did you see instead? Under which circumstances?**\r\n\r\nA smooth increase from 0 to 1, followed by a missing value, followed by a smooth increase from 0 to 1, followed by a flat rate of 1.\r\n\r\n**Environment**\r\n\r\n* System information:\r\n\r\n\tLinux 4.13.0-36-generic x86_64\r\n\r\n* Prometheus version:\r\n\r\n\tprometheus, version 2.2.0 (branch: HEAD, revision: f63e7db4cbdb616337ca877b306b9b96f7f4e381)\r\n  build user:       root@52af9f66ce71\r\n  build date:       20180308-16:40:42\r\n  go version:       go1.10\r\n\r\n* Prometheus configuration file:\r\n```\r\n# Global configuration\r\nglobal:\r\n  scrape_interval:     1s\r\n  evaluation_interval: 1s\r\n\r\n  external_labels:\r\n      monitor: 'prometheus'\r\n\r\nrule_files:\r\n  - 'rules/*.rules.yml'\r\n```\r\n\r\n* rules/generator.rules.yml:\r\n```\r\ngroups:\r\n- name: generator.rules\r\n  rules:\r\n\r\n  - record: gen_helper\r\n    expr: 0\r\n    labels:\r\n      job: gen_test\r\n\r\n  - record: gen_counter\r\n    expr: (gen_counter + 1) or gen_helper\r\n```\r\n\r\nTo reproduce, dump the contents of the config directory in the attached [config.tar.gz](https://github.com/prometheus/prometheus/files/1796586/config.tar.gz) into a fresh Prometheus 2.2.0 installation, fire up Prometheus, then go to http://localhost:9090/graph?g0.range_input=1m&g0.expr=rate(gen_counter%5B16s%5D)&g0.tab=0&g1.range_input=1h&g1.expr=gen_counter%5B100s%5D&g1.tab=1 and keep refreshing until you get the first half minute of the newly generated series covered by the `rate(gen_counter[16s])` graph. I suspect the problem is somewhere in `promql/engine.go` but I couldn't figure out where exactly.\r\n",
  "closed_at": "2018-03-12T13:17:00Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/3939/comments",
  "created_at": "2018-03-09T11:06:05Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/3939/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/3939",
  "id": 303804828,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567473,
      "name": "component/promql",
      "node_id": "MDU6TGFiZWwzNjU1Njc0NzM=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/promql"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": null,
      "id": 365563606,
      "name": "priority/P1",
      "node_id": "MDU6TGFiZWwzNjU1NjM2MDY=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/priority/P1"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/3939/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMDM4MDQ4Mjg=",
  "number": 3939,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Range selector over 16s is broken",
  "updated_at": "2019-03-22T21:09:22Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/3939",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/32070098?v=4",
    "events_url": "https://api.github.com/users/free/events{/privacy}",
    "followers_url": "https://api.github.com/users/free/followers",
    "following_url": "https://api.github.com/users/free/following{/other_user}",
    "gists_url": "https://api.github.com/users/free/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/free",
    "id": 32070098,
    "login": "free",
    "node_id": "MDQ6VXNlcjMyMDcwMDk4",
    "organizations_url": "https://api.github.com/users/free/orgs",
    "received_events_url": "https://api.github.com/users/free/received_events",
    "repos_url": "https://api.github.com/users/free/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/free/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/free/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/free"
  }
}