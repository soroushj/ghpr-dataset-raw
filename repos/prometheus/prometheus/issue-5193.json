{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!--\r\n\r\n    Please do *NOT* ask usage questions in Github issues.\r\n\r\n    If your issue is not a feature request or bug report use:\r\n    https://groups.google.com/forum/#!forum/prometheus-users. If\r\n    you are unsure whether you hit a bug, search and ask in the\r\n    mailing list first.\r\n\r\n    You can find more information at: https://prometheus.io/community/\r\n\r\n-->\r\n## Bug Report\r\n**What did you do?**\r\n\r\n1. `docker run -p 9090:9090 prom/prometheus:v2.7.1`\r\n2. Edit `/etc/prometheus/prometheus.yml`, enable the `- \"first_rules.yml\"` file.\r\n3. Create `/etc/prometheus/first_rules.yml`:\r\n```yaml\r\ngroups:       \r\n- name: testgroup\r\n  rules:      \r\n  - record: test            \r\n    expr: 22222         \r\n    labels:             \r\n      instance: my-second\r\n```\r\n4. Reload prometheus - `kill -SIGHUP 1`. Everything is fine.\r\n5. Update `/etc/prometheus/first_rules.yml`:\r\n```yaml\r\ngroups:       \r\n- name: testgroup\r\n  rules:      \r\n  - record: test            \r\n    expr: 11111         \r\n    labels:             \r\n      instance: my-first\r\n  - record: test         \r\n    expr: 22222          \r\n    labels:              \r\n      instance: my-second\r\n```\r\n6. Reload prometheus - `kill -SIGHUP 1`.\r\n7. Wait for the next rule evaluation. An error is produced:\r\n```\r\nlevel=info ts=2019-02-08T10:28:36.906865554Z caller=main.go:695 msg=\"Loading configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=info ts=2019-02-08T10:28:36.907330758Z caller=main.go:722 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=warn ts=2019-02-08T10:28:43.395453805Z caller=manager.go:514 component=\"rule manager\" group=testgroup msg=\"Error on ingesting results from rule evaluation with different value but same timestamp\" numDropped=1\r\n```\r\n8. Data for the `instance: my-second` rule is missing at that timestamp.\r\n\r\n**What did you expect to see?**\r\n\r\nI expected to see no errors, and data for `instance: my-second` at the evaluation time. Although they have the same identifier `test`, they should be unique time series as they have different labels.\r\n\r\n**What did you see instead? Under which circumstances?**\r\n\r\nLog error, and missing data for the `instance: my-second` rule at the evaluation time.\r\n\r\n**More details**\r\n\r\n* This only happens when the recording rule identifier matches, and the new rule is prepended before the other ones.\r\n* All the subsequent recording rules with the same identifier fail in the next rule evaluation. After that, they succeed.\r\n\r\n**Environment**\r\n\r\ndocker container\r\n\r\n* System information:\r\n\r\n```\r\n/prometheus $ uname -srm\r\nLinux 4.20.6-arch1-1-ARCH x86_64\r\n```\r\n\r\n* Prometheus version:\r\n\r\n```\r\n/prometheus $ prometheus --version\r\nprometheus, version 2.7.1 (branch: HEAD, revision: 62e591f928ddf6b3468308b7ac1de1c63aa7fcf3)\r\n  build user:       root@f9f82868fc43\r\n  build date:       20190131-11:16:59\r\n  go version:       go1.11.5\r\n```\r\n\r\n* Prometheus configuration file:\r\n```\r\n/etc/prometheus $ cat prometheus.yml\r\n# my global config\r\nglobal:\r\n  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.                             \r\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.                                     \r\n  # scrape_timeout is set to the global default (10s).\r\n\r\n# Alertmanager configuration\r\nalerting:\r\n  alertmanagers:\r\n  - static_configs:\r\n    - targets:\r\n      # - alertmanager:9093\r\n\r\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.                                  \r\nrule_files:                \r\n- \"first_rules.yml\"\r\n  # - \"second_rules.yml\"\r\n\r\n# A scrape configuration containing exactly one endpoint to scrape:                                                              \r\n# Here it's Prometheus itself.\r\nscrape_configs:\r\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.                                \r\n  - job_name: 'prometheus'\r\n\r\n    # metrics_path defaults to '/metrics'\r\n    # scheme defaults to 'http'.\r\n\r\n    static_configs:\r\n    - targets: ['localhost:9090']\r\n```\r\n\r\n```\r\n/etc/prometheus $ cat first_rules.yml \r\ngroups:\r\n- name: testgroup\r\n  rules:\r\n  - record: test\r\n    expr: 11111\r\n    labels:\r\n      name: my-first\r\n  - record: test\r\n    expr: 22222\r\n    labels:\r\n      name: my-second\r\n```\r\n\r\n* Logs:\r\n```\r\nlevel=info ts=2019-02-08T10:28:36.906865554Z caller=main.go:695 msg=\"Loading configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=info ts=2019-02-08T10:28:36.907330758Z caller=main.go:722 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=warn ts=2019-02-08T10:28:43.395453805Z caller=manager.go:514 component=\"rule manager\" group=testgroup msg=\"Error on ingesting results from rule evaluation with different value but same timestamp\" numDropped=1  \r\n```\r\n\r\n* Logs with debug on:\r\n```\r\nlevel=info ts=2019-02-08T13:55:49.17010164Z caller=main.go:695 msg=\"Loading configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=debug ts=2019-02-08T13:55:49.171150335Z caller=manager.go:217 component=\"discovery manager scrape\" msg=\"Starting provider\" provider=string/0 subs=[prometheus]\r\nlevel=debug ts=2019-02-08T13:55:49.171307068Z caller=manager.go:217 component=\"discovery manager notify\" msg=\"Starting provider\" provider=string/0 subs=[defc8654e1f8780ce80f9010266ce592]\r\nlevel=debug ts=2019-02-08T13:55:49.171393607Z caller=manager.go:235 component=\"discovery manager scrape\" msg=\"discoverer channel closed\" provider=string/0\r\nlevel=debug ts=2019-02-08T13:55:49.171422194Z caller=manager.go:235 component=\"discovery manager notify\" msg=\"discoverer channel closed\" provider=string/0\r\nlevel=info ts=2019-02-08T13:55:49.171924503Z caller=main.go:722 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=debug ts=2019-02-08T13:55:53.394962189Z caller=manager.go:502 component=\"rule manager\" group=testgroup msg=\"Rule evaluation result discarded\" err=\"duplicate sample for timestamp\" sample=\"{__name__=\\\"test\\\", instance=\\\"my-second\\\"} => 22222 @[1549634153394]\"\r\nlevel=warn ts=2019-02-08T13:55:53.395017411Z caller=manager.go:514 component=\"rule manager\" group=testgroup msg=\"Error on ingesting results from rule evaluation with different value but same timestamp\" numDropped=1\r\n```",
  "closed_at": "2019-03-15T15:23:36Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/5193/comments",
  "created_at": "2019-02-08T10:37:45Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/5193/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/5193",
  "id": 408094150,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567449,
      "name": "component/rules",
      "node_id": "MDU6TGFiZWwzNjU1Njc0NDk=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/rules"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/5193/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MDgwOTQxNTA=",
  "number": 5193,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Rule evaluation failure after reload with newly added rules",
  "updated_at": "2019-09-11T16:04:56Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/5193",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/522123?v=4",
    "events_url": "https://api.github.com/users/jsravn/events{/privacy}",
    "followers_url": "https://api.github.com/users/jsravn/followers",
    "following_url": "https://api.github.com/users/jsravn/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsravn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jsravn",
    "id": 522123,
    "login": "jsravn",
    "node_id": "MDQ6VXNlcjUyMjEyMw==",
    "organizations_url": "https://api.github.com/users/jsravn/orgs",
    "received_events_url": "https://api.github.com/users/jsravn/received_events",
    "repos_url": "https://api.github.com/users/jsravn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jsravn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsravn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jsravn"
  }
}