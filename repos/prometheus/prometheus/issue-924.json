{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "The following queries all return the expected results, when there are results to return, and no results when not all label queries match:\n\n```\nALERTS{monitor=~\"^validmonitor$\"}\nALERTS{instance=~\"^validinstance$\", monitor=~\"^validmonitor$\"}\nALERTS{monitor=\"validmonitor\"}\nALERTS{instance=\"validinstance\", monitor=\"validmonitor\"}\nALERTS{monitor=~\"^invalidmonitor$\"}\nALERTS{instance=~\"^invalidinstance$\", monitor=~\"^invalidmonitor$\"}\nALERTS{monitor=\"invalidmonitor\"}\nALERTS{instance=\"invalidinstance\", monitor=\"invalidmonitor\"}\nALERTS{monitor=~\"^invalidmonitor$\"}\nALERTS{instance=~\"^invalidinstance$\", monitor=~\"^validmonitor$\"}\nALERTS{instance=\"invalidinstance\", monitor=\"validmonitor\"}\nALERTS{instance=\"validinstance\" invalidlabel=\"blah\"}\nALERTS{instance=~\"validinstance\" invalidlabel=~\"blah\"}\nALERTS{instance=\"invalidinstance\" invalidlabel=\"blah\"}\nALERTS{instance=~\"invalidinstance\" invalidlabel=~\"blah\"}\n```\n\nWhere `validinstance`/`validmonitor` are values that return results, and `invalidinstance`/`invalidmonitor` are values that should not return results, and `invalidlabel` is a label that doesn't exist.  The regex anchors are options, they have no bearing on the issue.\n\nHowever, mixing regex and equality label matches as in the following queries returns results from completely different series when one of the labels would return results, but the other would not:\n\n```\nALERTS{instance=\"invalidinstance\", monitor=~\"^validmonitor$\"}\nALERTS{instance=~\"^invalidinstance$\", monitor=\"validmonitor\"}\nALERTS{instance=~\"validinstance\" invalidlabel=\"blah\"}\n```\n\nI may have missed some permutations above, but I think the scenario should be clear?  I don't have test results with data right now, because I blew away my storage to make sure it was a query language problem rather than some sort of data storage corruption.  This scenario does apply to querying any series though, so if you like I can provide some arbitrary results that illustrate the problem.\n\nThis was all tested on v0.15.0rc3\n",
  "closed_at": "2015-07-24T23:31:54Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/538008?v=4",
    "events_url": "https://api.github.com/users/juliusv/events{/privacy}",
    "followers_url": "https://api.github.com/users/juliusv/followers",
    "following_url": "https://api.github.com/users/juliusv/following{/other_user}",
    "gists_url": "https://api.github.com/users/juliusv/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/juliusv",
    "id": 538008,
    "login": "juliusv",
    "node_id": "MDQ6VXNlcjUzODAwOA==",
    "organizations_url": "https://api.github.com/users/juliusv/orgs",
    "received_events_url": "https://api.github.com/users/juliusv/received_events",
    "repos_url": "https://api.github.com/users/juliusv/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/juliusv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/juliusv/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/juliusv"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/924/comments",
  "created_at": "2015-07-23T01:14:47Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/924/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/924",
  "id": 96703075,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/924/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWU5NjcwMzA3NQ==",
  "number": 924,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Querying labels that return no results when mixing regex and equality label matches returns results from other series",
  "updated_at": "2019-03-24T19:27:45Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/924",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/146192?v=4",
    "events_url": "https://api.github.com/users/pdf/events{/privacy}",
    "followers_url": "https://api.github.com/users/pdf/followers",
    "following_url": "https://api.github.com/users/pdf/following{/other_user}",
    "gists_url": "https://api.github.com/users/pdf/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/pdf",
    "id": 146192,
    "login": "pdf",
    "node_id": "MDQ6VXNlcjE0NjE5Mg==",
    "organizations_url": "https://api.github.com/users/pdf/orgs",
    "received_events_url": "https://api.github.com/users/pdf/received_events",
    "repos_url": "https://api.github.com/users/pdf/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/pdf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pdf/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/pdf"
  }
}