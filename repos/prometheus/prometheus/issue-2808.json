{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**What did you do?**\r\nWhile prometheus was using it as the remtoe write endpoint, I suspended the example remote write receiver with Ctrl-Z. Prometheus crashed with the following message:\r\n```\r\nJun 05 09:58:08 node0.vagrant.test prometheus[13105]: time=\"2017-06-05T09:58:08-07:00\" level=warning msg=\"Error sending 100 samples to remote storage: context deadline exceeded\" source=\"queue_manager.go:500\"\r\nJun 05 09:58:39 node0.vagrant.test prometheus[13105]: time=\"2017-06-05T09:58:39-07:00\" level=warning msg=\"Error sending 100 samples to remote storage: context deadline exceeded\" source=\"queue_manager.go:500\"\r\nJun 05 09:58:44 node0.vagrant.test prometheus[13105]: time=\"2017-06-05T09:58:44-07:00\" level=info msg=\"Completed maintenance sweep through 4 archived fingerprints in 40.00907729s.\" source=\"storage.go:1423\"\r\nJun 05 09:59:09 node0.vagrant.test prometheus[13105]: time=\"2017-06-05T09:59:09-07:00\" level=warning msg=\"Error sending 100 samples to remote storage: context deadline exceeded\" source=\"queue_manager.go:500\"\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: time=\"2017-06-05T09:59:24-07:00\" level=info msg=\"Remote storage resharding from 1000 to 0 shards.\" source=\"queue_manager.go:351\"\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: panic: runtime error: integer divide by zero\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: goroutine 203 [running]:\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/storage/remote.(*shards).enqueue(0xc462252840, 0xc4600ba0a0, 0x0)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/storage/remote/queue_manager.go:430 +0xcb\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/storage/remote.(*QueueManager).Append(0xc4200c4540, 0xc457e6efe0, 0xc42033e330, 0x0)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/storage/remote/queue_manager.go:239 +0x22e\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/storage/remote.(*Writer).Append(0xc42033e330, 0xc457e6efe0, 0x0, 0x0)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/storage/remote/write.go:79 +0xa8\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/storage.Fanout.Append(0xc420519180, 0x2, 0x2, 0xc457e6efe0, 0x199eb60, 0xc421da8e00)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/storage/storage.go:60 +0x66\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/storage.(*Fanout).Append(0xc420519600, 0xc457e6efe0, 0x26dec90, 0xc462b17c20)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: <autogenerated>:3 +0x69\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/retrieval.(*countingAppender).Append(0xc4600ba040, 0xc457e6efe0, 0xc420b1fa90, 0xc462b17cd8)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/retrieval/target.go:261 +0x48\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/retrieval.ruleLabelsAppender.Append(0x262bb00, 0xc4600ba040, 0xc422cada10, 0xc457e6efe0, 0xc4600ba060, 0x19272e0)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/retrieval/target.go:201 +0x1af\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/retrieval.(*ruleLabelsAppender).Append(0xc4600ba060, 0xc457e6efe0, 0x262e800, 0xc4600ba060)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: <autogenerated>:35 +0x69\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/retrieval.(*scrapeLoop).append(0xc42044fb20, 0xc4238bf300, 0x275, 0x330, 0x236f1514, 0x26ea4e0, 0xc4238bf300)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:519 +0x2ec\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: github.com/prometheus/prometheus/retrieval.(*scrapeLoop).run(0xc42044fb20, 0x37e11d600, 0x2540be400, 0x0)\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:429 +0x5b8\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: created by github.com/prometheus/prometheus/retrieval.(*scrapePool).sync\r\nJun 05 09:59:24 node0.vagrant.test prometheus[13105]: /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:258 +0x3a6\r\n```\r\n\r\n* System information:\r\n\r\nLinux 3.10.0-327.el7.x86_64 x86_64\r\n\r\n* Prometheus version: \r\n```\r\nprometheus, version 1.6.3 (branch: master, revision: c580b60c67f2c5f6b638c3322161bcdf6d68d7fc)\r\n  build user:       root@a6410e65f5c7\r\n  build date:       20170522-09:15:06\r\n  go version:       go1.8.1\r\n```\r\n\r\n* Prometheus configuration file:\r\n```\r\nglobal:\r\n  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\r\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\r\n  # scrape_timeout is set to the global default (10s).\r\n\r\n  # Attach these labels to any time series or alerts when communicating with\r\n  # external systems (federation, remote storage, Alertmanager).\r\n  external_labels:\r\n      monitor: 'codelab-monitor'\r\n\r\nremote_write:\r\n  - url: \"http://localhost:1234/receive\"\r\n\r\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\r\nrule_files:\r\n  # - \"first.rules\"\r\n  # - \"second.rules\"\r\n\r\n# A scrape configuration containing exactly one endpoint to scrape:\r\n# Here it's Prometheus itself.\r\nscrape_configs:\r\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\r\n  - job_name: 'prometheus'\r\n    static_configs:\r\n      - targets: ['localhost:9090']\r\n\r\n  - job_name: 'node'\r\n    static_configs:\r\n      - targets:\r\n        - node0.vagrant.test:9100\r\n```\r\n",
  "closed_at": "2017-07-28T11:02:34Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/4948210?v=4",
    "events_url": "https://api.github.com/users/fabxc/events{/privacy}",
    "followers_url": "https://api.github.com/users/fabxc/followers",
    "following_url": "https://api.github.com/users/fabxc/following{/other_user}",
    "gists_url": "https://api.github.com/users/fabxc/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/fabxc",
    "id": 4948210,
    "login": "fabxc",
    "node_id": "MDQ6VXNlcjQ5NDgyMTA=",
    "organizations_url": "https://api.github.com/users/fabxc/orgs",
    "received_events_url": "https://api.github.com/users/fabxc/received_events",
    "repos_url": "https://api.github.com/users/fabxc/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/fabxc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fabxc/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/fabxc"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/2808/comments",
  "created_at": "2017-06-05T17:17:55Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/2808/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/2808",
  "id": 233653871,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567165,
      "name": "component/remote storage",
      "node_id": "MDU6TGFiZWwzNjU1NjcxNjU=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/remote%20storage"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": null,
      "id": 365563607,
      "name": "priority/P2",
      "node_id": "MDU6TGFiZWwzNjU1NjM2MDc=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/priority/P2"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/2808/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMzM2NTM4NzE=",
  "number": 2808,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Panic \"divide by zero\" in remote_write loop",
  "updated_at": "2019-03-23T11:45:49Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/2808",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/600891?v=4",
    "events_url": "https://api.github.com/users/cubranic/events{/privacy}",
    "followers_url": "https://api.github.com/users/cubranic/followers",
    "following_url": "https://api.github.com/users/cubranic/following{/other_user}",
    "gists_url": "https://api.github.com/users/cubranic/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/cubranic",
    "id": 600891,
    "login": "cubranic",
    "node_id": "MDQ6VXNlcjYwMDg5MQ==",
    "organizations_url": "https://api.github.com/users/cubranic/orgs",
    "received_events_url": "https://api.github.com/users/cubranic/received_events",
    "repos_url": "https://api.github.com/users/cubranic/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/cubranic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cubranic/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/cubranic"
  }
}