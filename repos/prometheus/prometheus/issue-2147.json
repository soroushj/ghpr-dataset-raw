{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**What did you do?**\r\nUpgraded prometheus to 1.3 in our GKE cluster.\r\n\r\n**What did you expect to see?**\r\nWorking prometheus.\r\n\r\n**What did you see instead? Under which circumstances?**\r\nFirst I have seen:\r\ntime=\"2016-11-02T13:55:23Z\" level=error msg=\"Error loading config: couldn't load configuration (-config.file=/etc/prometheus/prometheus.yml): Unknown Kubernetes SD role \\\"apiserver\\\"\" source=\"main.go:149\"\r\n\r\nAfter I deleted the whole job-name with apiserver role I got following:\r\ntime=\"2016-11-02T14:24:20Z\" level=error msg=\"Error loading config: couldn't load configuration (-config.file=/etc/prometheus/prometheus.yml): unknown fields in kubernetes_sd_config: in_cluster, api_servers\" source=\"main.go:149\r\n\r\n\r\n**Environment**\r\nPrometheus container v1.3.0 in GKE cluster.\r\n\r\n* System information:\r\n\r\n\r\n\r\n* Prometheus version: \r\n\r\n\t1.3\r\n\r\n* Prometheus configuration file:\r\n```\r\nscrape_configs:\r\n    - job_name: 'kubernetes-nodes'\r\n\r\n      # Default to scraping over https. If required, just disable this or change to\r\n      # `http`.\r\n      scheme: https\r\n\r\n      # This TLS & bearer token file config is used to connect to the actual scrape\r\n      # endpoints for cluster components. This is separate to discovery auth\r\n      # configuration (`in_cluster` below) because discovery & scraping are two\r\n      # separate concerns in Prometheus.\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        # If your node certificates are self-signed or use a different CA to the\r\n        # master CA, then disable certificate verification below. Note that\r\n        # certificate verification is an integral part of a secure infrastructure\r\n        # so this should only be disabled in a controlled environment. You can\r\n        # disable certificate verification by uncommenting the line below.\r\n        #\r\n        insecure_skip_verify: true\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n\r\n      kubernetes_sd_configs:\r\n      - api_servers:\r\n        - 'https://kubernetes.default.svc'\r\n        in_cluster: true\r\n        role: node\r\n\r\n      relabel_configs:\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_node_label_(.+)\r\n\r\n    # Scrape config for service endpoints.\r\n    #\r\n    # The relabeling allows the actual service scrape endpoint to be configured\r\n    # via the following annotations:\r\n    #\r\n    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`\r\n    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\r\n    # to set this to `https` & most likely set the `tls_config` of the scrape config.\r\n    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n    # * `prometheus.io/port`: If the metrics are exposed on a different port to the\r\n    # service then set this appropriately.\r\n    - job_name: 'kubernetes-service-endpoints'\r\n\r\n      kubernetes_sd_configs:\r\n      - api_servers:\r\n        - 'https://kubernetes.default.svc'\r\n        in_cluster: true\r\n        role: endpoint\r\n\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n        action: replace\r\n        target_label: __scheme__\r\n        regex: (https?)\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n        action: replace\r\n        target_label: __metrics_path__\r\n        regex: (.+)\r\n      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n        action: replace\r\n        target_label: __address__\r\n        regex: (.+)(?::\\d+);(\\d+)\r\n        replacement: $1:$2\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n      - source_labels: [__meta_kubernetes_service_namespace]\r\n        action: replace\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_service_name]\r\n        action: replace\r\n        target_label: kubernetes_name\r\n\r\n    # Example scrape config for probing services via the Blackbox Exporter.\r\n    #\r\n    # The relabeling allows the actual service scrape endpoint to be configured\r\n    # via the following annotations:\r\n    #\r\n    # * `prometheus.io/probe`: Only probe services that have a value of `true`\r\n    - job_name: 'kubernetes-services'\r\n\r\n      metrics_path: /probe\r\n      params:\r\n        module: [http_2xx]\r\n\r\n      kubernetes_sd_configs:\r\n      - api_servers:\r\n        - 'https://kubernetes.default.svc'\r\n        in_cluster: true\r\n        role: service\r\n\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__address__]\r\n        target_label: __param_target\r\n      - target_label: __address__\r\n        replacement: blackbox\r\n      - source_labels: [__param_target]\r\n        target_label: instance\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n      - source_labels: [__meta_kubernetes_service_namespace]\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_service_name]\r\n        target_label: kubernetes_name\r\n\r\n    # Example scrape config for pods\r\n    #\r\n    # The relabeling allows the actual pod scrape endpoint to be configured via the\r\n    # following annotations:\r\n    #\r\n    # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`\r\n    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n    # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.\r\n    - job_name: 'kubernetes-pods'\r\n\r\n      kubernetes_sd_configs:\r\n      - api_servers:\r\n        - 'https://kubernetes.default.svc'\r\n        in_cluster: true\r\n        role: pod\r\n\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n        action: replace\r\n        target_label: __metrics_path__\r\n        regex: (.+)\r\n      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\r\n        action: replace\r\n        regex: (.+):(?:\\d+);(\\d+)\r\n        replacement: ${1}:${2}\r\n        target_label: __address__\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n      - source_labels: [__meta_kubernetes_pod_namespace]\r\n        action: replace\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_pod_name]\r\n        action: replace\r\n        target_label: kubernetes_pod_name\r\n```\r\n\r\n\r\n* Logs:\r\n```\r\ntime=\"2016-11-02T14:24:20Z\" level=info msg=\"Starting prometheus (version=1.3.0, branch=master, revision=18254a172b1e981ed593442b2259bd63617d6aca)\" source=\"main.go:75\"\r\ntime=\"2016-11-02T14:24:20Z\" level=info msg=\"Build context (go=go1.7.3, user=root@d363f050a0e0, date=20161101-17:06:27)\" source=\"main.go:76\"\r\ntime=\"2016-11-02T14:24:20Z\" level=info msg=\"Loading configuration file /etc/prometheus/prometheus.yml\" source=\"main.go:247\"\r\ntime=\"2016-11-02T14:24:20Z\" level=error msg=\"Error loading config: couldn't load configuration (-config.file=/etc/prometheus/prometheus.yml): unknown fields in kubernetes_sd_config: in_cluster, api_servers\" source=\"main.go:149\"\r\n```\r\n",
  "closed_at": "2016-11-03T13:35:03Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/4948210?v=4",
    "events_url": "https://api.github.com/users/fabxc/events{/privacy}",
    "followers_url": "https://api.github.com/users/fabxc/followers",
    "following_url": "https://api.github.com/users/fabxc/following{/other_user}",
    "gists_url": "https://api.github.com/users/fabxc/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/fabxc",
    "id": 4948210,
    "login": "fabxc",
    "node_id": "MDQ6VXNlcjQ5NDgyMTA=",
    "organizations_url": "https://api.github.com/users/fabxc/orgs",
    "received_events_url": "https://api.github.com/users/fabxc/received_events",
    "repos_url": "https://api.github.com/users/fabxc/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/fabxc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fabxc/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/fabxc"
  },
  "comments": 18,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/2147/comments",
  "created_at": "2016-11-02T14:30:41Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/2147/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/2147",
  "id": 186816537,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/2147/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxODY4MTY1Mzc=",
  "number": 2147,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "prometheus configuration for kubernetes from example folder doesn't work with 1.3",
  "updated_at": "2019-03-24T03:19:59Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/2147",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/717641?v=4",
    "events_url": "https://api.github.com/users/vorozhko/events{/privacy}",
    "followers_url": "https://api.github.com/users/vorozhko/followers",
    "following_url": "https://api.github.com/users/vorozhko/following{/other_user}",
    "gists_url": "https://api.github.com/users/vorozhko/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/vorozhko",
    "id": 717641,
    "login": "vorozhko",
    "node_id": "MDQ6VXNlcjcxNzY0MQ==",
    "organizations_url": "https://api.github.com/users/vorozhko/orgs",
    "received_events_url": "https://api.github.com/users/vorozhko/received_events",
    "repos_url": "https://api.github.com/users/vorozhko/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/vorozhko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vorozhko/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/vorozhko"
  }
}