{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "## Bug Report\r\nRelabeling a job stoped working after v2.4.3.\r\n\r\n**What did you do?**\r\nSet scrape config to relabel job based on `__meta_kubernetes_namespace`\r\n```yaml\r\n      relabel_configs:\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        regex: (.+)\r\n        replacement: $1\r\n        target_label: job\r\n```\r\n\r\n**What did you expect to see?**\r\nI expected to see the `job` label replaced by the value of `__meta_kubernetes_namespace`. the expected behavior occurs on v2.4.3 and prior.\r\n\r\n<img width=\"1132\" alt=\"prom-job-namespace\" src=\"https://user-images.githubusercontent.com/6054865/54935158-f6afd180-4edc-11e9-864e-85f5e5071b76.png\">\r\n\r\n**What did you see instead? Under which circumstances?**\r\nHowever, relabeling `job` using the same mechanism in version v2.5.0, v2.6.1, v2.7.2, and v2.8.0 does not work.  All jobs remain defaulted to the value of `job_name`\r\n\r\n<img width=\"1171\" alt=\"prom-job-defaulted\" src=\"https://user-images.githubusercontent.com/6054865/54935248-23fc7f80-4edd-11e9-9425-8fb2443f4b0b.png\">\r\n\r\n\r\n**Environment**\r\n - kubernetes v1.10.11\r\n - docker v17.0.3-1\r\n\r\n* Prometheus version:\r\n - v2.4.3 - 167a4b4e73a8eca8df648d2d2043e21bdb9a7449 - job relabels\r\n - v2.5.0 - 67dc912ac8b24f94a1fc478f352d25179c94ab9b - job remains defaulted\r\n - v2.6.1 - b639fe140c1f71b2cbad3fc322b17efe60839e7e - job remains defaulted\r\n - v2.7.2 - 82f98c825a1437c0a24056eb4dc986d9a3fc7fae - job remains defaulted\r\n - v2.8.0 - 59369491cfdfe8dcb325723d6d28a837887a07b9 - job remains defaulted\r\n\r\n* Prometheus configuration file:\r\n```yaml\r\n---\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: prometheus-conf-v0\r\n  namespace: monitoring-system\r\ndata:\r\n  prometheus.yaml: |\r\n    global:\r\n      scrape_interval: 15s\r\n      scrape_timeout: 5s\r\n      evaluation_interval: 15s\r\n    rule_files:\r\n    - /etc/prometheus/rules.d/alerting-rules\r\n    - /etc/prometheus/rules.d/recording-rules\r\n    - /etc/prometheus/rules.d/alerting-rules-canary\r\n    - /etc/prometheus/rules.d/recording-rules-canary\r\n    - /etc/cloudflare/rules.d/*.rules\r\n    scrape_configs:\r\n    - job_name: ~prometheus\r\n      static_configs:\r\n      - targets:\r\n        - localhost:9090\r\n    - job_name: ~prometheus-all\r\n      kubernetes_sd_configs:\r\n      - role: endpoints\r\n      relabel_configs:\r\n      - action: keep\r\n        regex: monitoring-system;prometheus-server;http\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        - __meta_kubernetes_service_name\r\n        - __meta_kubernetes_endpoint_port_name\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n        replacement: service_$1\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n        replacement: pod_$1\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        target_label: kubernetes_namespace\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: kubernetes_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: service_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_name\r\n        target_label: pod_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_node_name\r\n        target_label: pod_node\r\n    - job_name: ~prometheus-loader\r\n      static_configs:\r\n      - targets: ['localhost:8080']\r\n        labels:\r\n          sidecar: rule-loader\r\n      relabel_configs:\r\n      - replacement: ~prometheus-sidecars\r\n        target_label: job\r\n    - job_name: ~kubernetes-apiservers\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n      kubernetes_sd_configs:\r\n      - role: endpoints\r\n      relabel_configs:\r\n      - action: keep\r\n        regex: default;kubernetes;https\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        - __meta_kubernetes_service_name\r\n        - __meta_kubernetes_endpoint_port_name\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n        replacement: service_$1\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n        replacement: pod_$1\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        target_label: kubernetes_namespace\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: kubernetes_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: service_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_name\r\n        target_label: pod_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_node_name\r\n        target_label: pod_node\r\n      scheme: https\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        insecure_skip_verify: true\r\n    - job_name: ~kubernetes-nodes\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n      kubernetes_sd_configs:\r\n      - role: node\r\n      relabel_configs:\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_node_label_(.+)\r\n      - replacement: kubernetes.default.svc:443\r\n        target_label: __address__\r\n      - regex: (.+)\r\n        replacement: /api/v1/nodes/${1}/proxy/metrics\r\n        source_labels:\r\n        - __meta_kubernetes_node_name\r\n        target_label: __metrics_path__\r\n      scheme: https\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        insecure_skip_verify: true\r\n    - job_name: ~kubernetes-nodes-cadvisor\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n      kubernetes_sd_configs:\r\n      - role: node\r\n      relabel_configs:\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_node_label_(.+)\r\n      - replacement: kubernetes.default.svc:443\r\n        target_label: __address__\r\n      - regex: (.+)\r\n        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\r\n        source_labels:\r\n        - __meta_kubernetes_node_name\r\n        target_label: __metrics_path__\r\n      scheme: https\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        insecure_skip_verify: true\r\n    # Maintaining prometheus scrapes for backward compatibility\r\n    - job_name: ~kubernetes-service-endpoints\r\n      kubernetes_sd_configs:\r\n      - role: endpoints\r\n      relabel_configs:\r\n      - action: keep\r\n        regex: true\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_scrape\r\n      - action: replace\r\n        regex: (https?)\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_scheme\r\n        target_label: __scheme__\r\n      - action: replace\r\n        regex: (.+)\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_path\r\n        target_label: __metrics_path__\r\n      - action: replace\r\n        regex: (.+)\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_format\r\n        target_label: __param_format\r\n      - action: replace\r\n        regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n        replacement: $1:$2\r\n        source_labels:\r\n        - __address__\r\n        - __meta_kubernetes_service_annotation_prometheus_io_port\r\n        target_label: __address__\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n        replacement: service_$1\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n        replacement: pod_$1\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        target_label: kubernetes_namespace\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: kubernetes_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: service_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_name\r\n        target_label: pod_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_node_name\r\n        target_label: pod_node\r\n      tls_config:\r\n        insecure_skip_verify: true\r\n    - job_name: ~kubernetes-services\r\n      kubernetes_sd_configs:\r\n      - role: service\r\n      metrics_path: /probe\r\n      params:\r\n        module:\r\n        - http_2xx\r\n      relabel_configs:\r\n      - action: keep\r\n        regex: true\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_probe\r\n      - source_labels:\r\n        - __address__\r\n        target_label: __param_target\r\n      - replacement: blackbox\r\n        target_label: __address__\r\n      - source_labels:\r\n        - __param_target\r\n        target_label: instance\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n        replacement: service_$1\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        target_label: kubernetes_namespace\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: kubernetes_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        - __meta_kubernetes_service_name\r\n        regex: (.+);(.+)\r\n        replacement: $1/$2\r\n        target_label: job\r\n    - job_name: ~kubernetes-pods\r\n      kubernetes_sd_configs:\r\n      - role: pod\r\n      relabel_configs:\r\n      - action: keep\r\n        regex: true\r\n        source_labels:\r\n        - __meta_kubernetes_pod_annotation_prometheus_io_scrape\r\n      - action: replace\r\n        regex: (https?)\r\n        source_labels:\r\n        - __meta_kubernetes_service_annotation_prometheus_io_scheme\r\n        target_label: __scheme__\r\n      - action: replace\r\n        regex: (.+)\r\n        source_labels:\r\n        - __meta_kubernetes_pod_annotation_prometheus_io_path\r\n        target_label: __metrics_path__\r\n      - action: replace\r\n        regex: (.+)\r\n        source_labels:\r\n        - __meta_kubernetes_pod_annotation_prometheus_io_format\r\n        target_label: __param_format\r\n      - action: replace\r\n        regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n        replacement: $1:$2\r\n        source_labels:\r\n        - __address__\r\n        - __meta_kubernetes_pod_annotation_prometheus_io_port\r\n        target_label: __address__\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n        replacement: pod_$1\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        target_label: kubernetes_namespace\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_controller_name\r\n        regex: (.*)(?:-.*)\r\n        replacement: $1\r\n        target_label: kubernetes_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_service_name\r\n        target_label: service_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_name\r\n        target_label: pod_name\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_pod_node_name\r\n        target_label: pod_node\r\n      - action: replace\r\n        source_labels:\r\n        - __meta_kubernetes_namespace\r\n        regex: (.+)\r\n        replacement: $1\r\n        target_label: job\r\n      tls_config:\r\n        insecure_skip_verify: true\r\n---\r\n```\r\n\r\n* Logs:\r\n```\r\nlevel=info ts=2019-03-25T16:18:54.563858517Z caller=main.go:324 fd_limits=\"(soft=1048576, hard=1048576)\"\r\nlevel=info ts=2019-03-25T16:18:54.563877897Z caller=main.go:325 vm_limits=\"(soft=unlimited, hard=unlimited)\"\r\nlevel=info ts=2019-03-25T16:18:54.564497109Z caller=main.go:640 msg=\"Starting TSDB ...\"\r\nlevel=info ts=2019-03-25T16:18:54.564552513Z caller=web.go:418 component=web msg=\"Start listening for connections\" address=0.0.0.0:9090\r\nlevel=info ts=2019-03-25T16:18:54.571051524Z caller=main.go:655 msg=\"TSDB started\"\r\nlevel=info ts=2019-03-25T16:18:54.571167146Z caller=main.go:724 msg=\"Loading configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\nlevel=info ts=2019-03-25T16:18:54.575622448Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:54.5770268Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:54.57823994Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:54.57937525Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:54.696921408Z caller=main.go:751 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\nlevel=info ts=2019-03-25T16:18:54.696969869Z caller=main.go:609 msg=\"Server is ready to receive web requests.\"\r\nlevel=info ts=2019-03-25T16:18:55.255975995Z caller=main.go:724 msg=\"Loading configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\nlevel=info ts=2019-03-25T16:18:55.258432271Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.259244949Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.259993149Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.260784327Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.486117788Z caller=main.go:751 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\nlevel=info ts=2019-03-25T16:18:55.486591971Z caller=main.go:724 msg=\"Loading configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\nlevel=error ts=2019-03-25T16:18:55.488777474Z caller=endpoints.go:130 component=\"discovery manager scrape\" discovery=k8s role=endpoint msg=\"endpoints informer unable to sync cache\"\r\nlevel=error ts=2019-03-25T16:18:55.488812409Z caller=pod.go:85 component=\"discovery manager scrape\" discovery=k8s role=pod msg=\"pod informer unable to sync cache\"\r\nlevel=info ts=2019-03-25T16:18:55.488936287Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.489628732Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.490315703Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.490956702Z caller=kubernetes.go:191 component=\"discovery manager scrape\" discovery=k8s msg=\"Using pod service account via in-cluster config\"\r\nlevel=info ts=2019-03-25T16:18:55.687249852Z caller=main.go:751 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/conf/prometheus.yaml\r\n```\r\n> *note*: nothing relevant, but included it anyway.\r\n",
  "closed_at": "2019-03-26T18:24:22Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/15064823?v=4",
    "events_url": "https://api.github.com/users/codesome/events{/privacy}",
    "followers_url": "https://api.github.com/users/codesome/followers",
    "following_url": "https://api.github.com/users/codesome/following{/other_user}",
    "gists_url": "https://api.github.com/users/codesome/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/codesome",
    "id": 15064823,
    "login": "codesome",
    "node_id": "MDQ6VXNlcjE1MDY0ODIz",
    "organizations_url": "https://api.github.com/users/codesome/orgs",
    "received_events_url": "https://api.github.com/users/codesome/received_events",
    "repos_url": "https://api.github.com/users/codesome/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/codesome/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/codesome/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/codesome"
  },
  "comments": 13,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/5404/comments",
  "created_at": "2019-03-25T16:23:05Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/5404/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/5404",
  "id": 424995234,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/5404/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MjQ5OTUyMzQ=",
  "number": 5404,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Job relabeling stops working after v2.4.3 ",
  "updated_at": "2019-09-30T18:04:55Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/5404",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6054865?v=4",
    "events_url": "https://api.github.com/users/mattalberts/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattalberts/followers",
    "following_url": "https://api.github.com/users/mattalberts/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattalberts/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattalberts",
    "id": 6054865,
    "login": "mattalberts",
    "node_id": "MDQ6VXNlcjYwNTQ4NjU=",
    "organizations_url": "https://api.github.com/users/mattalberts/orgs",
    "received_events_url": "https://api.github.com/users/mattalberts/received_events",
    "repos_url": "https://api.github.com/users/mattalberts/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattalberts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattalberts/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattalberts"
  }
}