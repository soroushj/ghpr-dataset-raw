{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "I'm not actively working on this, so if someone could clean it up (particularly around Compaction) that'd be great.\r\n\r\nSeries() will fetch all the metadata for a series,\r\neven if it's going to be filtered later due to time ranges.\r\n\r\nFor 1M series we save ~1.1s if you only needed some of the data, but take an\r\nextra ~.2s if you did want everything.\r\n\r\n```\r\nbenchmark                                  old ns/op      new ns/op      delta\r\nBenchmarkHeadSeries/1of1000000-4           1443715987     131553480      -90.89%\r\nBenchmarkHeadSeries/10of1000000-4          1433394040     130730596      -90.88%\r\nBenchmarkHeadSeries/100of1000000-4         1437444672     131360813      -90.86%\r\nBenchmarkHeadSeries/1000of1000000-4        1438958659     132573137      -90.79%\r\nBenchmarkHeadSeries/10000of1000000-4       1438061766     145742377      -89.87%\r\nBenchmarkHeadSeries/100000of1000000-4      1455060948     281659416      -80.64%\r\nBenchmarkHeadSeries/1000000of1000000-4     1633524504     1803550153     +10.41%\r\n\r\nbenchmark                                  old allocs     new allocs     delta\r\nBenchmarkHeadSeries/1of1000000-4           4000055        28             -100.00%\r\nBenchmarkHeadSeries/10of1000000-4          4000073        87             -100.00%\r\nBenchmarkHeadSeries/100of1000000-4         4000253        630            -99.98%\r\nBenchmarkHeadSeries/1000of1000000-4        4002053        6036           -99.85%\r\nBenchmarkHeadSeries/10000of1000000-4       4020053        60054          -98.51%\r\nBenchmarkHeadSeries/100000of1000000-4      4200053        600074         -85.71%\r\nBenchmarkHeadSeries/1000000of1000000-4     6000053        6000094        +0.00%\r\n\r\nbenchmark                                  old bytes     new bytes     delta\r\nBenchmarkHeadSeries/1of1000000-4           229192184     2488          -100.00%\r\nBenchmarkHeadSeries/10of1000000-4          229193336     5568          -100.00%\r\nBenchmarkHeadSeries/100of1000000-4         229204856     35536         -99.98%\r\nBenchmarkHeadSeries/1000of1000000-4        229320056     345104        -99.85%\r\nBenchmarkHeadSeries/10000of1000000-4       230472056     3894673       -98.31%\r\nBenchmarkHeadSeries/100000of1000000-4      241992056     40511632      -83.26%\r\nBenchmarkHeadSeries/1000000of1000000-4     357192056     402380440     +12.65%\r\n```\r\n<!--\r\n    Don't forget!\r\n    \r\n    - If the PR adds or changes a behaviour or fixes a bug of an exported API it would need a unit/e2e test.\r\n    \r\n    - Where possible use only exported APIs for tests to simplify the review and make it as close as possible to an actual library usage.\r\n    \r\n    - No tests are needed for internal implementation changes.\r\n    \r\n    - Performance improvements would need a benchmark test to prove it.\r\n    \r\n    - All exposed objects should have a comment.\r\n    \r\n    - All comments should start with a capital letter and end with a full stop.\r\n -->",
  "closed_at": "2020-02-21T13:55:45Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/291750?v=4",
    "events_url": "https://api.github.com/users/roidelapluie/events{/privacy}",
    "followers_url": "https://api.github.com/users/roidelapluie/followers",
    "following_url": "https://api.github.com/users/roidelapluie/following{/other_user}",
    "gists_url": "https://api.github.com/users/roidelapluie/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/roidelapluie",
    "id": 291750,
    "login": "roidelapluie",
    "node_id": "MDQ6VXNlcjI5MTc1MA==",
    "organizations_url": "https://api.github.com/users/roidelapluie/orgs",
    "received_events_url": "https://api.github.com/users/roidelapluie/received_events",
    "repos_url": "https://api.github.com/users/roidelapluie/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/roidelapluie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roidelapluie/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/roidelapluie"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/6458/comments",
  "created_at": "2019-12-12T16:11:05Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/6458/events",
  "html_url": "https://github.com/prometheus/prometheus/pull/6458",
  "id": 537073668,
  "labels": [
    {
      "color": "ffffff",
      "default": false,
      "description": null,
      "id": 1857993211,
      "name": "stale",
      "node_id": "MDU6TGFiZWwxODU3OTkzMjEx",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/stale"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/6458/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzUyNDk0MTUz",
  "number": 6458,
  "performed_via_github_app": null,
  "pull_request": {
    "diff_url": "https://github.com/prometheus/prometheus/pull/6458.diff",
    "html_url": "https://github.com/prometheus/prometheus/pull/6458",
    "patch_url": "https://github.com/prometheus/prometheus/pull/6458.patch",
    "url": "https://api.github.com/repos/prometheus/prometheus/pulls/6458"
  },
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "WIP- DO NOT MERGE: Make head Postings only return series in time range",
  "updated_at": "2020-05-28T12:17:41Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/6458",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  }
}