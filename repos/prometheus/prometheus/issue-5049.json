{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "## Bug Report\r\n**What did you do?**\r\nWrote a rule unit-test\r\n\r\n**What did you expect to see?**\r\nThe unit-test passing, without having to specify my test cases in any specific order (it looks like the exp_samples need to have the labels in lexicographic order, which is quite unexpected).\r\n\r\n**What did you see instead? Under which circumstances?**\r\nThe unit-test pass/fail depends on the ordering of the exp_samples, a minimal test case is attached.\r\n\r\n**Environment**\r\nMacOS and Linux\r\n\r\n* System information:\r\n\r\n\tinsert output of `uname -srm` here\r\n\r\n* Prometheus version:\r\n\r\n\tinsert output of `prometheus --version` here\r\n\r\n* Alertmanager version:\r\n\r\n\tinsert output of `alertmanager --version` here (if relevant to the issue)\r\n\r\n* Prometheus configuration file:\r\n```\r\ngroups:\r\n  - name: test\r\n    rules:\r\n      - record: job:testvalue_by_foo:sum\r\n        expr: sum(testvalue) by (foo)\r\n```\r\n\r\n* Passing unit test\r\n```\r\nrule_files:\r\n  - 'rules.yaml'\r\ntests:\r\n  - interval: '1m'\r\n    input_series:\r\n      - series: 'testvalue{foo=\"a\", bar=\"a\"}'\r\n        values: '1+0x30'\r\n      - series: 'testvalue{foo=\"a\", bar=\"b\"}'\r\n        values: '1+0x30'\r\n      - series: 'testvalue{foo=\"b\", bar=\"a\"}'\r\n        values: '1+0x30'\r\n    promql_expr_test:\r\n      - expr: 'job:testvalue_by_foo:sum'\r\n        eval_time: 3m\r\n        exp_samples:\r\n          - labels: 'job:testvalue_by_foo:sum{foo=\"a\"}'\r\n            value: 2\r\n          - labels: 'job:testvalue_by_foo:sum{foo=\"b\"}'\r\n            value: 1\r\n```\r\n\r\nFailing unit tests:\r\n```\r\nrule_files:\r\n  - 'rules.yaml'\r\ntests:\r\n  - interval: '1m'\r\n    input_series:\r\n      - series: 'testvalue{foo=\"a\", bar=\"a\"}'\r\n        values: '1+0x30'\r\n      - series: 'testvalue{foo=\"a\", bar=\"b\"}'\r\n        values: '1+0x30'\r\n      - series: 'testvalue{foo=\"b\", bar=\"a\"}'\r\n        values: '1+0x30'\r\n    promql_expr_test:\r\n      - expr: 'job:testvalue_by_foo:sum'\r\n        eval_time: 3m\r\n        exp_samples:\r\n          - labels: 'job:testvalue_by_foo:sum{foo=\"b\"}'\r\n            value: 1\r\n          - labels: 'job:testvalue_by_foo:sum{foo=\"a\"}'\r\n            value: 2\r\n```\r\n\r\nExample output:\r\n```\r\nLeabhar:prometheus-fail ingvar$ ~/Downloads/prometheus-2.6.0.darwin-amd64/promtool test rules test1.yaml \r\nUnit Testing:  test1.yaml\r\n  SUCCESS\r\n\r\nLeabhar:prometheus-fail ingvar$ ~/Downloads/prometheus-2.6.0.darwin-amd64/promtool test rules test2.yaml \r\nUnit Testing:  test2.yaml\r\n  FAILED:\r\n    expr:'job:testvalue_by_foo:sum', time:3m0s, \r\n        exp:\"{__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"b\\\"} 1E+00, {__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"b\\\"} 1E+00, {__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"a\\\"} 2E+00\", \r\n        got:\"{__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"a\\\"} 2E+00, {__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"a\\\"} 2E+00, {__name__=\\\"job:testvalue_by_foo:sum\\\", foo=\\\"b\\\"} 1E+00\"\r\n\r\nLeabhar:prometheus-fail ingvar$ ~/Downloads/prometheus-2.6.0.darwin-amd64/promtool --version\r\npromtool, version 2.6.0 (branch: HEAD, revision: dbd1d58c894775c0788470944b818cc724f550fb)\r\n  build user:       root@bf5760470f13\r\n  build date:       20181217-15:19:45\r\n  go version:       go1.11.3\r\n```\r\n\r\nAll this with the official MacOS build, but initially found on Linux.",
  "closed_at": "2018-12-31T10:55:50Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/5049/comments",
  "created_at": "2018-12-28T15:24:38Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/5049/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/5049",
  "id": 394659877,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/5049/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzOTQ2NTk4Nzc=",
  "number": 5049,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Unexpected order dependency in promtool test rules unit tests",
  "updated_at": "2019-06-29T11:44:03Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/5049",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/12827127?v=4",
    "events_url": "https://api.github.com/users/vatine/events{/privacy}",
    "followers_url": "https://api.github.com/users/vatine/followers",
    "following_url": "https://api.github.com/users/vatine/following{/other_user}",
    "gists_url": "https://api.github.com/users/vatine/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/vatine",
    "id": 12827127,
    "login": "vatine",
    "node_id": "MDQ6VXNlcjEyODI3MTI3",
    "organizations_url": "https://api.github.com/users/vatine/orgs",
    "received_events_url": "https://api.github.com/users/vatine/received_events",
    "repos_url": "https://api.github.com/users/vatine/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/vatine/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vatine/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/vatine"
  }
}