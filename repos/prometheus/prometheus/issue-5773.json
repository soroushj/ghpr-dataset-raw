{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "## Bug Report\r\n**What did you do?**\r\n\r\nI just started playing with unittests for alerting rules. Below is the content of rule and test files:\r\n\r\nrules_example.yml:\r\n```\r\ngroups:\r\n\r\n  - name: Decrease\r\n    interval: 1m\r\n    rules:\r\n    - alert: \"Decrease\"\r\n      expr: ((sum(total_for_each_active_hotel:avg:5m offset 10m) by (chainName,reportId) - sum(total_for_each_active_hotel:avg:5m) by (chainName,reportId)) / (sum(total_for_each_active_hotel:avg:5m) by (chainName,reportId))) * 100 > 15\r\n      annotations:\r\n        summary: 'Decrease'\r\n        description: 'Decrease is over 15%, chain: \"{{ $labels.chainName }}\" report_id: \"{{ $labels.reportId }}\"'\r\n        value: '{{ $value }}'\r\n        chain: '{{ $labels.chainName }}'\r\n        report_id: '{{ $labels.reportId }}'\r\n        source: Prometheus\r\n```\r\ntest_example.yml:\r\n```\r\nrule_files:\r\n  - ./rules_example.yml\r\n\r\ntests:\r\n  - interval: 5m\r\n    input_series:\r\n      - series: total_for_each_active_hotel:avg:5m{chainName=\"BetterStay\",cluster=\"West\",hotelName=\"Not so nice resort\",reportId=\"1234567\"}\r\n        values: '10 10 10 10 10 0 0'\r\n      - series: total_for_each_active_hotel:avg:5m{chainName=\"BetterStay\",cluster=\"West\",hotelName=\"Nice Resort\",reportId=\"1234567\"}\r\n        values: '150 150 150 140 100 100 100'\r\n    alert_rule_test:\r\n      - alertname: \"Decrease\"\r\n        exp_alerts:\r\n          - exp_labels:\r\n              chainName: BetterStay\r\n              reportId: 1234567\r\n          - exp_annotations:\r\n              description: 'Decrease is over 15%, chain: \"BetterStay\" report_id: \"1234567\"'\r\n              summary: 'Decrease'\r\n              chain: BetterStay\r\n              report_id: 1234567\r\n              source: Prometheus\r\n\r\n```\r\nIt is a 'toy' configuration I just build up to familiarize myself with unit tests. However, when I run \r\n`promtool test rules test_example.yml` I've got the following output:\r\n```\r\nUnit Testing:  test_example.yml\r\npanic: assignment to entry in nil map\r\n\r\ngoroutine 1 [running]:\r\nmain.(*testGroup).test(0xc000811a28, 0x0, 0xe7791f700, 0x254c500, 0x0, 0xe7791f73c, 0x254c500, 0xdf8475800, 0xc00002f9f8, 0xc00053bcc0, ...)\r\n\t/app/cmd/promtool/unittest.go:289 +0x1178\r\nmain.ruleUnitTest(0x7ffcaa4d20cb, 0x10, 0xc000146a80, 0x2, 0x2)\r\n\t/app/cmd/promtool/unittest.go:101 +0x5d7\r\nmain.RulesUnitTest(0xc00053b660, 0x1, 0x1, 0x1)\r\n\t/app/cmd/promtool/unittest.go:44 +0x192\r\nmain.main()\r\n\t/app/cmd/promtool/main.go:147 +0x2250\r\n```\r\n\r\nI assume that even if the configuration is bad/broken it should not panic. Looks like a bug.\r\n\r\nPrometheus 2.10 and 2.11.1\r\n\r\n\r\n\r\n",
  "closed_at": "2019-07-18T09:17:47Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/15064823?v=4",
    "events_url": "https://api.github.com/users/codesome/events{/privacy}",
    "followers_url": "https://api.github.com/users/codesome/followers",
    "following_url": "https://api.github.com/users/codesome/following{/other_user}",
    "gists_url": "https://api.github.com/users/codesome/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/codesome",
    "id": 15064823,
    "login": "codesome",
    "node_id": "MDQ6VXNlcjE1MDY0ODIz",
    "organizations_url": "https://api.github.com/users/codesome/orgs",
    "received_events_url": "https://api.github.com/users/codesome/received_events",
    "repos_url": "https://api.github.com/users/codesome/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/codesome/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/codesome/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/codesome"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/5773/comments",
  "created_at": "2019-07-17T14:42:41Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/5773/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/5773",
  "id": 469257438,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 366192871,
      "name": "component/promtool",
      "node_id": "MDU6TGFiZWwzNjYxOTI4NzE=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/promtool"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/5773/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NjkyNTc0Mzg=",
  "number": 5773,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "promtool \"panic: assignment to entry in nil map\"",
  "updated_at": "2020-01-14T10:56:20Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/5773",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/45915382?v=4",
    "events_url": "https://api.github.com/users/viberan/events{/privacy}",
    "followers_url": "https://api.github.com/users/viberan/followers",
    "following_url": "https://api.github.com/users/viberan/following{/other_user}",
    "gists_url": "https://api.github.com/users/viberan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/viberan",
    "id": 45915382,
    "login": "viberan",
    "node_id": "MDQ6VXNlcjQ1OTE1Mzgy",
    "organizations_url": "https://api.github.com/users/viberan/orgs",
    "received_events_url": "https://api.github.com/users/viberan/received_events",
    "repos_url": "https://api.github.com/users/viberan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/viberan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/viberan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/viberan"
  }
}