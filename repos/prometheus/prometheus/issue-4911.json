{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "I have an external system which doesn't directly expose metrics in prometheus format. To get these metrics into prometheus I'm attempting to write a custom collector in Python which scrapes the external system and publishes them in prometheus format. However the metrics from the external system are delayed by 30 minutes. Looking at the source code for the `GaugeMetricFamily` class it's possible to pass a [timestamp](https://github.com/prometheus/client_python/blob/v0.4.2/prometheus_client/core.py#L328). This also matches the docs on the [exposition format](https://prometheus.io/docs/instrumenting/exposition_formats/).\r\n\r\nHowever passing a timestamp causes the Prometheus server (v2.5.0) not to be able to read the metrics and gives the error: 'expected next entry after timestamp, got \"MNAME\"'. The following code shows the issue:\r\n\r\nUsing v0.4.2 of the python client and Python 3.7\r\n\r\n```\r\nfrom datetime import datetime, timedelta\r\nimport time\r\nfrom prometheus_client import start_http_server\r\nfrom prometheus_client.core import GaugeMetricFamily, REGISTRY\r\n\r\nclass CustomCollector(object):\r\n    def collect(self):\r\n        now = datetime.now()\r\n        metric_time = now - timedelta(minutes=30)\r\n\r\n        g = GaugeMetricFamily('my_gauge', 'Help text', labels=['foo'])\r\n        g.add_metric(['bar'], 1.7, metric_time.timestamp())\r\n        g.add_metric(['baz'], 3.8, metric_time.timestamp())\r\n        yield g\r\n\r\ndef main():\r\n    start_http_server(8000)\r\n    REGISTRY.register(CustomCollector())\r\n\r\n    while True: time.sleep(1)\r\n\r\nmain()\r\n```\r\n\r\nViewing the output of `localhost:8000` appears to show the metrics in the correct format matching the exposition format and doesn't show any extra values which might cause it. Am I simply using this wrong? or is this a bug somehow?",
  "closed_at": "2018-11-26T13:05:08Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/4911/comments",
  "created_at": "2018-11-25T18:26:37Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/4911/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/4911",
  "id": 384290819,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "",
      "id": 664475581,
      "name": "component/scraping",
      "node_id": "MDU6TGFiZWw2NjQ0NzU1ODE=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/scraping"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/4911/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzODQyOTA4MTk=",
  "number": 4911,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Custom Collector with timestamp producing exposition prometheus cannot parse",
  "updated_at": "2019-05-26T17:20:39Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/4911",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/1449113?v=4",
    "events_url": "https://api.github.com/users/sedan07/events{/privacy}",
    "followers_url": "https://api.github.com/users/sedan07/followers",
    "following_url": "https://api.github.com/users/sedan07/following{/other_user}",
    "gists_url": "https://api.github.com/users/sedan07/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sedan07",
    "id": 1449113,
    "login": "sedan07",
    "node_id": "MDQ6VXNlcjE0NDkxMTM=",
    "organizations_url": "https://api.github.com/users/sedan07/orgs",
    "received_events_url": "https://api.github.com/users/sedan07/received_events",
    "repos_url": "https://api.github.com/users/sedan07/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sedan07/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sedan07/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sedan07"
  }
}