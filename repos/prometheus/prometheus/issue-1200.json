{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "Regex anchoring got introduced by @juliusv and @brian-brazil in #996 in config files as well as for the `label_replace()` function in promql.\n\nIt was **not** changed anywhere else in promql, so label regex matchers are still **not anchored**. See this example: [`node_boot_time{instance=~\"robustperception\"}`](http://demo.robustperception.io:9090/graph#%5B%7B%22range_input%22%3A%221h%22%2C%22end_input%22%3A%22%22%2C%22step_input%22%3A%22%22%2C%22stacked%22%3A%22%22%2C%22expr%22%3A%22node_boot_time%7Binstance%3D~%5C%22robust%5C%22%7D%22%2C%22tab%22%3A1%7D%5D).\n\nAs I'm not aware of a single linux tool, programming langue or other regex interface which does anchoring (please give examples otherwise), I'm questioning the benefit of anchoring. It's a non-standard behavior, requires additional knowledge and therefore, makes it harder for people to get started with Prometheus. I'm able to write a regex in almost any tool immediately without the need to look up the documentation, but with prometheus it took me several tries to understand why my `label_replace` function did not work as expected.\n\nI heard the argument that anchored regexs are shorter, they're not in all cases (`^4` vs. `4.*`). In general I don't think this should be an argument over consistency with the majority of other regex implementations.\n\nI also heard that anchoring makes it harder for people to write wrong regular expressions. I checked tens of expressions using regular matchers at soundcloud and couldn't find a single one using ambiguous regexps. I'd argue that the majority of developers knows how to use regexps and disagree that it's Prometheus' role to prevent the minority of people from doing something stupid.\n\nI see 4 options to solve this issue:\n1. Leave the current state (anchoring behavior: config, label_replace; standard behavior: rest of promql)\n2. Revert the label_replace change (anchoring: config; standard: promql)\n3. Revert anchoring everywhere.\n4. Update all places without exception to use anchoring.\n\nWhile I personally don't see the benefit of anchoring, my realistic vote is 2. It does not require another disruptive change to configs and provides a clear rule for user: anchoring in config, standard behavior in promql.\n\n@fabxc @beorn7 \n",
  "closed_at": "2015-11-05T11:09:10Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/4948210?v=4",
    "events_url": "https://api.github.com/users/fabxc/events{/privacy}",
    "followers_url": "https://api.github.com/users/fabxc/followers",
    "following_url": "https://api.github.com/users/fabxc/following{/other_user}",
    "gists_url": "https://api.github.com/users/fabxc/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/fabxc",
    "id": 4948210,
    "login": "fabxc",
    "node_id": "MDQ6VXNlcjQ5NDgyMTA=",
    "organizations_url": "https://api.github.com/users/fabxc/orgs",
    "received_events_url": "https://api.github.com/users/fabxc/received_events",
    "repos_url": "https://api.github.com/users/fabxc/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/fabxc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fabxc/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/fabxc"
  },
  "comments": 9,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/1200/comments",
  "created_at": "2015-11-04T21:56:43Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/1200/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/1200",
  "id": 115158246,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/1200/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMTUxNTgyNDY=",
  "number": 1200,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Inconsistent and confusing regex anchoring behavior",
  "updated_at": "2019-03-24T16:28:22Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/1200",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/3432?v=4",
    "events_url": "https://api.github.com/users/grobie/events{/privacy}",
    "followers_url": "https://api.github.com/users/grobie/followers",
    "following_url": "https://api.github.com/users/grobie/following{/other_user}",
    "gists_url": "https://api.github.com/users/grobie/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/grobie",
    "id": 3432,
    "login": "grobie",
    "node_id": "MDQ6VXNlcjM0MzI=",
    "organizations_url": "https://api.github.com/users/grobie/orgs",
    "received_events_url": "https://api.github.com/users/grobie/received_events",
    "repos_url": "https://api.github.com/users/grobie/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/grobie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/grobie/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/grobie"
  }
}