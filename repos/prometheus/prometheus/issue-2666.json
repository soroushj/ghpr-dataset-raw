{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "(Somewhat of a follow-up on #2663)\r\n\r\n**What did you do?**\r\n\r\nI'm trying to send logs remotely using `remote_write` on ARMv7. \r\n\r\n**What did you expect to see?**\r\n\r\nI expected Prometheus to send a payload to the URL specified in `remote_write`.\r\n\r\n**What did you see instead? Under which circumstances?**\r\n\r\nAll. It works fine if I remove the `remote_write` stanza.\r\n\r\n**Environment**\r\n\r\nA Raspberry Pi 3 Model B running ResinOS.\r\n\r\nIn case the memory allocation is a concern, here is a dump of that:\r\n\r\n```\r\n# free -m\r\n             total       used       free     shared    buffers     cached\r\nMem:           972        541        431         49         60        264\r\n-/+ buffers/cache:        215        756\r\nSwap:            0          0          0\r\n```\r\n\r\n* System information:\r\n\r\nLinux 4.4.48 armv7l\r\n\r\n* Prometheus version: \r\n\r\n```\r\nprometheus, version 1.6.1 (branch: master, revision: 4666df502c0e239ed4aa1d80abbbfb54f61b23c3)\r\n  build user:       root@ca1b452514b7\r\n  build date:       20170419-13:53:08\r\n  go version:       go1.8.1\r\n```\r\n\r\n* Prometheus configuration file:\r\n```\r\n# cat /etc/prometheus.yml\r\n# my global config\r\nglobal:\r\n  scrape_interval:     30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\r\n  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.\r\n  # scrape_timeout is set to the global default (10s).\r\n\r\n  # Attach these labels to any time series or alerts when communicating with\r\n  # external systems (federation, remote storage, Alertmanager).\r\n  external_labels:\r\n      monitor: 'tmp-resin'\r\n\r\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\r\nrule_files:\r\n  # - \"first.rules\"\r\n  # - \"second.rules\"\r\n\r\n# A scrape configuration containing exactly one endpoint to scrape:\r\n# Here it's Prometheus itself.\r\nscrape_configs:\r\n  - job_name: 'prometheus'\r\n    static_configs:\r\n      - targets: ['localhost:9090']\r\n  - job_name: 'tmp'\r\n    static_configs:\r\n      - targets: ['localhost:8000']\r\n\r\nremote_write:\r\n    - url: https://requestb.in/abc123\r\n```\r\n\r\n* Logs:\r\n```\r\n# prometheus -config.file=/etc/prometheus.yml\r\nINFO[0000] Starting prometheus (version=1.6.1, branch=master, revision=4666df502c0e239ed4aa1d80abbbfb54f61b23c3)  source=main.go:88\r\nINFO[0000] Build context (go=go1.8.1, user=root@ca1b452514b7, date=20170419-13:53:08)  source=main.go:89\r\nINFO[0000] Loading configuration file /etc/prometheus.yml  source=main.go:251\r\nINFO[0000] Loading series map and head chunks...         source=storage.go:421\r\nINFO[0000] 0 series loaded.                              source=storage.go:432\r\nINFO[0000] Starting target manager...                    source=targetmanager.go:61\r\nINFO[0000] Listening on :9090                            source=web.go:259\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x4 pc=0x11580]\r\n\r\ngoroutine 182 [running]:\r\nsync/atomic.addUint64(0x12448474, 0x1, 0x0, 0x1035a2c, 0x1244844c)\r\n        /usr/local/go/src/sync/atomic/64bit_arm.go:31 +0x4c\r\ngithub.com/prometheus/prometheus/storage/remote.(*ewmaRate).incr(0x12448474, 0x1, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/remote/ewma.go:65 +0x30\r\ngithub.com/prometheus/prometheus/storage/remote.(*shards).enqueue(0x123175c0, 0x1250f060, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/remote/queue_manager.go:427 +0x38\r\ngithub.com/prometheus/prometheus/storage/remote.(*QueueManager).Append(0x12448400, 0x1250ed20, 0x1265e960, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/remote/queue_manager.go:239 +0x190\r\ngithub.com/prometheus/prometheus/storage/remote.(*Writer).Append(0x1265e960, 0x1250ed20, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/remote/write.go:79 +0x8c\r\ngithub.com/prometheus/prometheus/storage.Fanout.Append(0x124c6c80, 0x2, 0x2, 0x1250ed20, 0x123902f0, 0x125d9338)\r\n        /go/src/github.com/prometheus/prometheus/storage/storage.go:60 +0x58\r\ngithub.com/prometheus/prometheus/storage.(*Fanout).Append(0x124c71a0, 0x1250ed20, 0x14047d14, 0x123902d3)\r\n        <autogenerated>:3 +0x64\r\ngithub.com/prometheus/prometheus/retrieval.(*countingAppender).Append(0x126da0a0, 0x1250ed20, 0x14047cfc, 0x125d9378)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/target.go:261 +0x3c\r\ngithub.com/prometheus/prometheus/retrieval.ruleLabelsAppender.Append(0x1e053b8, 0x126da0a0, 0x1254c140, 0x1250ed20, 0x126da0c0, 0x1265340)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/target.go:201 +0x138\r\ngithub.com/prometheus/prometheus/retrieval.(*ruleLabelsAppender).Append(0x126da0c0, 0x1250ed20, 0x1e06ad8, 0x126da0c0)\r\n        <autogenerated>:35 +0x64\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).append(0x12328140, 0x124be700, 0xb, 0xc8, 0xe, 0x256ae0f6, 0x1eabaa0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:519 +0x224\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).run(0x12328140, 0xfc23ac00, 0x6, 0x540be400, 0x2, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:429 +0x4e0\r\ncreated by github.com/prometheus/prometheus/retrieval.(*scrapePool).sync\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:258 +0x330\r\n```\r\n",
  "closed_at": "2017-07-14T13:10:49Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7115638?v=4",
    "events_url": "https://api.github.com/users/brian-brazil/events{/privacy}",
    "followers_url": "https://api.github.com/users/brian-brazil/followers",
    "following_url": "https://api.github.com/users/brian-brazil/following{/other_user}",
    "gists_url": "https://api.github.com/users/brian-brazil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brian-brazil",
    "id": 7115638,
    "login": "brian-brazil",
    "node_id": "MDQ6VXNlcjcxMTU2Mzg=",
    "organizations_url": "https://api.github.com/users/brian-brazil/orgs",
    "received_events_url": "https://api.github.com/users/brian-brazil/received_events",
    "repos_url": "https://api.github.com/users/brian-brazil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brian-brazil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brian-brazil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brian-brazil"
  },
  "comments": 34,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/2666/comments",
  "created_at": "2017-04-28T19:56:19Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/2666/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/2666",
  "id": 225177939,
  "labels": [],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/2666/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjUxNzc5Mzk=",
  "number": 2666,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Memory issue(?) with remote_write on ARMv7 with ",
  "updated_at": "2019-03-23T11:45:37Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/2666",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/357664?v=4",
    "events_url": "https://api.github.com/users/vpetersson/events{/privacy}",
    "followers_url": "https://api.github.com/users/vpetersson/followers",
    "following_url": "https://api.github.com/users/vpetersson/following{/other_user}",
    "gists_url": "https://api.github.com/users/vpetersson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/vpetersson",
    "id": 357664,
    "login": "vpetersson",
    "node_id": "MDQ6VXNlcjM1NzY2NA==",
    "organizations_url": "https://api.github.com/users/vpetersson/orgs",
    "received_events_url": "https://api.github.com/users/vpetersson/received_events",
    "repos_url": "https://api.github.com/users/vpetersson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/vpetersson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vpetersson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/vpetersson"
  }
}