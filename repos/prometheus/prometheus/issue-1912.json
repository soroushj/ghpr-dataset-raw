{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
    "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
    "followers_url": "https://api.github.com/users/beorn7/followers",
    "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
    "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/beorn7",
    "id": 5609886,
    "login": "beorn7",
    "node_id": "MDQ6VXNlcjU2MDk4ODY=",
    "organizations_url": "https://api.github.com/users/beorn7/orgs",
    "received_events_url": "https://api.github.com/users/beorn7/received_events",
    "repos_url": "https://api.github.com/users/beorn7/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/beorn7"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
      "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
      "followers_url": "https://api.github.com/users/beorn7/followers",
      "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
      "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/beorn7",
      "id": 5609886,
      "login": "beorn7",
      "node_id": "MDQ6VXNlcjU2MDk4ODY=",
      "organizations_url": "https://api.github.com/users/beorn7/orgs",
      "received_events_url": "https://api.github.com/users/beorn7/received_events",
      "repos_url": "https://api.github.com/users/beorn7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/beorn7"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What did you do?**\n\n```\ncd promql\ngot test -run=NONE -bench=Benchmark.\n```\n\n**What did you expect to see?**\n\nRun each of the benchmarks\n\n**What did you see instead? Under which circumstances?**\n\n```\npanic: cannot unpin already unpinned chunk\n\ngoroutine 104 [running]:\npanic(0x787f00, 0xc420a9e780)\n        /usr/local/go/src/runtime/panic.go:500 +0x1a1\ngithub.com/prometheus/prometheus/storage/local.(*chunkDesc).unpin(0xc421322880, 0xc421032360)\n        /home/tristan/go/src/github.com/prometheus/prometheus/storage/local/chunk.go:150 +0x115\ngithub.com/prometheus/prometheus/storage/local.(*memorySeriesIterator).Close(0xc4210fc380)\n        /home/tristan/go/src/github.com/prometheus/prometheus/storage/local/series.go:670 +0x59\ngithub.com/prometheus/prometheus/storage/local.(*boundedIterator).Close(0xc4200f2f60)\n        /home/tristan/go/src/github.com/prometheus/prometheus/storage/local/storage.go:482 +0x33\ngithub.com/prometheus/prometheus/promql.(*Engine).closeIterators.func1(0x7f02964d4318, 0xc420678640, 0x40ca0f)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/engine.go:534 +0x96\ngithub.com/prometheus/prometheus/promql.inspector.Visit(0x855870, 0x7f02964d4318, 0xc420678640, 0xf6c43a35000003bf, 0x0)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/ast.go:306 +0x3a\ngithub.com/prometheus/prometheus/promql.Walk(0x9dd820, 0x855870, 0x7f02964d4318, 0xc420678640)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/ast.go:255 +0x7b\ngithub.com/prometheus/prometheus/promql.Walk(0x9dd820, 0x855870, 0x9dd7a0, 0xc4200f3840)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/ast.go:275 +0x234\ngithub.com/prometheus/prometheus/promql.Walk(0x9dd820, 0x855870, 0x7f02964d42c0, 0xc420ec6140)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/ast.go:285 +0x74a\ngithub.com/prometheus/prometheus/promql.Inspect(0x7f02964d42c0, 0xc420ec6140, 0x855870)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/ast.go:316 +0x4b\ngithub.com/prometheus/prometheus/promql.(*Engine).closeIterators(0xc4210c0d80, 0xc4210fa780)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/engine.go:538 +0x67\ngithub.com/prometheus/prometheus/promql.(*Engine).execEvalStmt(0xc4210c0d80, 0x7f02964dd1a8, 0xc4201c87e0, 0xc420ed7df8, 0xc4210fa780, 0x9e03a0, 0xc4200f3820, 0x0, 0x0)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/engine.go:398 +0x11af\ngithub.com/prometheus/prometheus/promql.(*Engine).exec(0xc4210c0d80, 0xc420ed7df8, 0x0, 0x0, 0x0, 0x0)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/engine.go:357 +0x392\ngithub.com/prometheus/prometheus/promql.(*query).Exec(0xc420ed7df8, 0x0)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/engine.go:196 +0x38\ngithub.com/prometheus/prometheus/promql.(*Test).exec(0xc420678550, 0x9dbea0, 0xc42000cc80, 0x9dbda0, 0xc420a9e640)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/test.go:466 +0x1fd\ngithub.com/prometheus/prometheus/promql.(*Test).RunAsBenchmark(0xc420678550, 0xc4200f2240, 0x9dbda0, 0xc420a9e640)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/test.go:422 +0xa3\ngithub.com/prometheus/prometheus/promql.(*Benchmark).Run(0xc4200f2240)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/bench.go:42 +0x65\ngithub.com/prometheus/prometheus/promql.BenchmarkHoltWinters4Week5Min(0xc420084280)\n        /home/tristan/go/src/github.com/prometheus/prometheus/promql/functions_test.go:29 +0x4e\ntesting.(*B).runN(0xc420084280, 0x64)\n        /usr/local/go/src/testing/benchmark.go:139 +0xaa\ntesting.(*B).launch(0xc420084280)\n        /usr/local/go/src/testing/benchmark.go:277 +0x118\ncreated by testing.(*B).doBench\n        /usr/local/go/src/testing/benchmark.go:245 +0x70\nexit status 2\nFAIL    github.com/prometheus/prometheus/promql 0.060s\n```\n\nRunning a git bisect points at\n`[3bfec97d46676812d6cb7e4225abd2ba6376d4f3] Make the storage interface higher-level.`\n\n**Environment**\n- System information:\n\nLinux pinot 4.7.0-rc7-ARCH\n- Prometheus version: \n\n```\nprometheus, version 1.0.1 (branch: HEAD, revision: 3bfec97d46676812d6cb7e4225abd2ba6376d4f3)\n  build user:       tristan@pinot\n  build date:       20160823-18:47:54\n  go version:       go1.7\n```\n\nHave had the same error on a go1.6 build, and with 1.0 (via the bisect)\n- Prometheus configuration file:\n\nn/a , running benchmarks\n- Logs:\n\n```\n```\n",
  "closed_at": "2016-08-26T06:42:44Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
    "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
    "followers_url": "https://api.github.com/users/beorn7/followers",
    "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
    "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/beorn7",
    "id": 5609886,
    "login": "beorn7",
    "node_id": "MDQ6VXNlcjU2MDk4ODY=",
    "organizations_url": "https://api.github.com/users/beorn7/orgs",
    "received_events_url": "https://api.github.com/users/beorn7/received_events",
    "repos_url": "https://api.github.com/users/beorn7/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/beorn7"
  },
  "comments": 6,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/1912/comments",
  "created_at": "2016-08-23T18:52:32Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/1912/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/1912",
  "id": 172777833,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567473,
      "name": "component/promql",
      "node_id": "MDU6TGFiZWwzNjU1Njc0NzM=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/promql"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": null,
      "id": 365563606,
      "name": "priority/P1",
      "node_id": "MDU6TGFiZWwzNjU1NjM2MDY=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/priority/P1"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/1912/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNzI3Nzc4MzM=",
  "number": 1912,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "promql benchmarks are broken",
  "updated_at": "2019-03-24T06:20:24Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/1912",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/76019?v=4",
    "events_url": "https://api.github.com/users/tcolgate/events{/privacy}",
    "followers_url": "https://api.github.com/users/tcolgate/followers",
    "following_url": "https://api.github.com/users/tcolgate/following{/other_user}",
    "gists_url": "https://api.github.com/users/tcolgate/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tcolgate",
    "id": 76019,
    "login": "tcolgate",
    "node_id": "MDQ6VXNlcjc2MDE5",
    "organizations_url": "https://api.github.com/users/tcolgate/orgs",
    "received_events_url": "https://api.github.com/users/tcolgate/received_events",
    "repos_url": "https://api.github.com/users/tcolgate/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tcolgate/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tcolgate/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tcolgate"
  }
}