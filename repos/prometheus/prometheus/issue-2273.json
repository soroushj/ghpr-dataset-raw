{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
    "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
    "followers_url": "https://api.github.com/users/beorn7/followers",
    "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
    "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/beorn7",
    "id": 5609886,
    "login": "beorn7",
    "node_id": "MDQ6VXNlcjU2MDk4ODY=",
    "organizations_url": "https://api.github.com/users/beorn7/orgs",
    "received_events_url": "https://api.github.com/users/beorn7/received_events",
    "repos_url": "https://api.github.com/users/beorn7/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/beorn7"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
      "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
      "followers_url": "https://api.github.com/users/beorn7/followers",
      "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
      "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/beorn7",
      "id": 5609886,
      "login": "beorn7",
      "node_id": "MDQ6VXNlcjU2MDk4ODY=",
      "organizations_url": "https://api.github.com/users/beorn7/orgs",
      "received_events_url": "https://api.github.com/users/beorn7/received_events",
      "repos_url": "https://api.github.com/users/beorn7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/beorn7"
    }
  ],
  "author_association": "NONE",
  "body": " **What did you do?**\r\nRun Prometheus \r\n\r\n**What did you expect to see?**\r\nPrometheus up and running\r\n\r\n**What did you see instead? Under which circumstances?**\r\nPrometheus crashed on \r\n\r\n```\r\ntime=\"2016-12-12T14:46:00Z\" level=info msg=\"Collision detected for fingerprint 1e96a5019c8e7521, metric etcd_rafthttp_message_sent_latency_microseconds{instance=\\\"10.72.4.110:2379\\\", job=\\\"etcd\\\", msgType=\\\"MsgHeartbeat\\\", quantile=\\\"0.9\\\", remoteID=\\\"58d9fb3eff84d3cd\\\", sendingType=\\\"pipeline\\\"}, mapping to new fingerprint 0000000000000016.\" source=\"mapper.go:182\" \r\npanic: runtime error: integer divide by zero\r\n\r\ngoroutine 376 [running]:\r\npanic(0x18939a0, 0xc420018040)\r\n        /usr/local/go/src/runtime/panic.go:500 +0x1a1\r\ngithub.com/prometheus/prometheus/storage/local/chunk.doubleDeltaEncodedChunk.Add(0xc43c592c00, 0x287, 0x400, 0x158f37f3864, 0x40569068fcfdb0df, 0x2d0c6e110b2a7f85, 0xc5ef313840, 0x54e34d, 0xc4218ed9c0, 0xc421872d50)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/chunk/doubledelta.go:86 +0xf76\r\ngithub.com/prometheus/prometheus/storage/local/chunk.(*doubleDeltaEncodedChunk).Add(0xc615c82080, 0x158f37f3864, 0x40569068fcfdb0df, 0xc5ef313940, 0x557434, 0xc4218ed9c0, 0xd7cbbb540abb1586, 0xc5a0bc5650)\r\n        <autogenerated>:36 +0x7e\r\ngithub.com/prometheus/prometheus/storage/local/chunk.(*Desc).Add(0xc5680d94c0, 0x158f37f3864, 0x40569068fcfdb0df, 0x0, 0x0, 0x2, 0x8020106, 0x2)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/chunk/chunk.go:136 +0x4a\r\ngithub.com/prometheus/prometheus/storage/local.(*memorySeries).add(0xc5a0bc5650, 0x158f37f3864, 0x40569068fcfdb0df, 0xc5a0bc5650, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/series.go:245 +0x115\r\ngithub.com/prometheus/prometheus/storage/local.(*MemorySeriesStorage).Append(0xc42011e000, 0xc643f4dfe0, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/storage.go:858 +0x398\r\ngithub.com/prometheus/prometheus/storage.Fanout.Append(0xc4201adba0, 0x2, 0x2, 0xc643f4dfe0, 0xc480817d40, 0x26f5670)\r\n        /go/src/github.com/prometheus/prometheus/storage/storage.go:60 +0x66\r\ngithub.com/prometheus/prometheus/storage.(*Fanout).Append(0xc42043b020, 0xc643f4dfe0, 0xc5ef313b50, 0xc5ef313b40)\r\n        <autogenerated>:3 +0x6e\r\ngithub.com/prometheus/prometheus/retrieval.ruleLabelsAppender.Append(0x265af40, 0xc42043b020, 0xc48081c3c0, 0xc643f4dfe0, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/target.go:241 +0x1b3\r\ngithub.com/prometheus/prometheus/retrieval.(*ruleLabelsAppender).Append(0xc480813220, 0xc643f4dfe0, 0x0, 0x0)\r\n        <autogenerated>:33 +0x6e\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).append(0xc4807fea00, 0xc66c1aa000, 0x4a7e, 0x4c00)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:456 +0x92\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).run(0xc4807fea00, 0x6fc23ac00, 0x6fc23ac00, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:425 +0x602\r\ncreated by github.com/prometheus/prometheus/retrieval.(*scrapePool).sync\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:240 +0x3e5\r\n```\r\n\r\n**Environment**\r\n\r\n* System information:\r\n\r\n```\r\n/prometheus # uname -srm\r\nLinux 4.7.3-coreos-r2 x86_64\r\n```\r\n\r\n* Prometheus version: \r\n\r\n```\r\n/prometheus # prometheus -version\r\nprometheus, version 1.4.1 (branch: master, revision: 2a89e8733f240d3cd57a6520b52c36ac4744ce12)\r\n  build user:       root@e685d23d8809\r\n  build date:       20161128-09:59:22\r\n  go version:       go1.7.3\r\n```\r\n\r\n* Alertmanager version:\r\n\r\nN/A\r\n\r\n* Prometheus configuration file:\r\n```\r\n    global:\r\n      scrape_interval: 30s\r\n      scrape_timeout: 30s\r\n    rule_files:\r\n    - /etc/prometheus/recording.rules\r\n    scrape_configs:\r\n    - job_name: etcd\r\n      static_configs:\r\n        - targets:\r\n          - 10.72.0.1:2379\r\n          - 10.72.0.2:2379\r\n          - 10.72.0.3:2379\r\n          - 10.72.0.4:2379\r\n          - 10.72.0.5:2379\r\n    - job_name: 'prometheus'\r\n      static_configs:\r\n        - targets: ['localhost:9090']\r\n    - job_name: 'cloudwatch'\r\n      static_configs:\r\n        - targets: ['prometheus-cloudwatch-exporter:80']\r\n    \r\n    - job_name: 'kubernetes-apiservers'\r\n      kubernetes_sd_configs:\r\n      - role: endpoints\r\n      scheme: https\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        insecure_skip_verify: true\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\r\n        action: keep\r\n        regex: default;kubernetes;https\r\n    - job_name: 'kubernetes-nodes'\r\n      scheme: https\r\n      tls_config:\r\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        insecure_skip_verify: true\r\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n      kubernetes_sd_configs:\r\n      - role: node\r\n      relabel_configs:\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_node_label_(.+)\r\n    - job_name: 'kubernetes-service-endpoints'\r\n      scheme: https\r\n      kubernetes_sd_configs:\r\n      - role: endpoints\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n        action: replace\r\n        target_label: __scheme__\r\n        regex: (https?)\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n        action: replace\r\n        target_label: __metrics_path__\r\n        regex: (.+)\r\n      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n        action: replace\r\n        target_label: __address__\r\n        regex: (.+)(?::\\d+);(\\d+)\r\n        replacement: $1:$2\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n      - source_labels: [__meta_kubernetes_service_namespace]\r\n        action: replace\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_service_name]\r\n        action: replace\r\n        target_label: kubernetes_name\r\n    - job_name: 'kubernetes-services'\r\n      scheme: https\r\n      metrics_path: /probe\r\n      params:\r\n        module: [http_2xx]\r\n      kubernetes_sd_configs:\r\n      - role: service\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__address__]\r\n        target_label: __param_target\r\n      - target_label: __address__\r\n        replacement: blackbox\r\n      - source_labels: [__param_target]\r\n        target_label: instance\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_service_label_(.+)\r\n      - source_labels: [__meta_kubernetes_service_namespace]\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_service_name]\r\n        target_label: kubernetes_name\r\n    - job_name: 'kubernetes-pods'\r\n      scheme: https\r\n      kubernetes_sd_configs:\r\n      - role: pod\r\n      relabel_configs:\r\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n        action: keep\r\n        regex: true\r\n      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n        action: replace\r\n        target_label: __metrics_path__\r\n        regex: (.+)\r\n      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\r\n        action: replace\r\n        regex: (.+):(?:\\d+);(\\d+)\r\n        replacement: ${1}:${2}\r\n        target_label: __address__\r\n      - action: labelmap\r\n        regex: __meta_kubernetes_pod_label_(.+)\r\n      - source_labels: [__meta_kubernetes_pod_namespace]\r\n        action: replace\r\n        target_label: kubernetes_namespace\r\n      - source_labels: [__meta_kubernetes_pod_name]\r\n        action: replace\r\n        target_label: kubernetes_pod_name\r\n```\r\n\r\n* Alertmanager configuration file:\r\n\r\nN/A\r\n\r\n* Logs:\r\n```\r\ntime=\"2016-12-12T14:45:52Z\" level=info msg=\"Collision detected for fingerprint 8b31db99ef569973, metric container_cpu_usage_seconds_total{beta_kubernetes_io_arch=\\\"amd64\\\", beta_kubernetes_io_instance_type=\\\"c3.8\r\nxlarge\\\", beta_kubernetes_io_os=\\\"linux\\\", cpu=\\\"cpu03\\\", failure_domain_beta_kubernetes_io_region=\\\"us-west-2\\\", failure_domain_beta_kubernetes_io_zone=\\\"us-west-2b\\\", id=\\\"/system.slice/systemd-tmpfiles-setup.s\r\nervice\\\", instance=\\\"ip-10-72-21-104.us-west-2.compute.internal\\\", job=\\\"kubernetes-nodes\\\", kubernetes_io_hostname=\\\"ip-10-72-21-104.us-west-2.compute.internal\\\", role=\\\"minion\\\"}, mapping to new fingerprint 000\r\n0000000000001.\" source=\"mapper.go:182\" \r\ntime=\"2016-12-12T14:45:52Z\" level=info msg=\"Collision detected for fingerprint aeb7e8aa589c92cc, metric container_cpu_usage_seconds_total{beta_kubernetes_io_arch=\\\"amd64\\\", beta_kubernetes_io_instance_type=\\\"c3.8\r\nxlarge\\\", beta_kubernetes_io_os=\\\"linux\\\", cpu=\\\"cpu05\\\", failure_domain_beta_kubernetes_io_region=\\\"us-west-2\\\", failure_domain_beta_kubernetes_io_zone=\\\"us-west-2b\\\", id=\\\"/system.slice/download-socat-binary.se\r\nrvice\\\", instance=\\\"ip-10-72-21-104.us-west-2.compute.internal\\\", job=\\\"kubernetes-nodes\\\", kubernetes_io_hostname=\\\"ip-10-72-21-104.us-west-2.compute.internal\\\", role=\\\"minion\\\"}, mapping to new fingerprint 0000\r\n000000000002.\" source=\"mapper.go:182\" \r\n...\r\ntime=\"2016-12-12T14:46:00Z\" level=info msg=\"Collision detected for fingerprint 1e96a5019c8e7521, metric etcd_rafthttp_message_sent_latency_microseconds{instance=\\\"10.72.4.110:2379\\\", job=\\\"etcd\\\", msgType=\\\"MsgHeartbeat\\\", quantile=\\\"0.9\\\", remoteID=\\\"58d9fb3eff84d3cd\\\", sendingType=\\\"pipeline\\\"}, mapping to new fingerprint 0000000000000016.\" source=\"mapper.go:182\" \r\npanic: runtime error: integer divide by zero\r\n\r\ngoroutine 376 [running]:\r\npanic(0x18939a0, 0xc420018040)\r\n        /usr/local/go/src/runtime/panic.go:500 +0x1a1\r\ngithub.com/prometheus/prometheus/storage/local/chunk.doubleDeltaEncodedChunk.Add(0xc43c592c00, 0x287, 0x400, 0x158f37f3864, 0x40569068fcfdb0df, 0x2d0c6e110b2a7f85, 0xc5ef313840, 0x54e34d, 0xc4218ed9c0, 0xc421872d50)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/chunk/doubledelta.go:86 +0xf76\r\ngithub.com/prometheus/prometheus/storage/local/chunk.(*doubleDeltaEncodedChunk).Add(0xc615c82080, 0x158f37f3864, 0x40569068fcfdb0df, 0xc5ef313940, 0x557434, 0xc4218ed9c0, 0xd7cbbb540abb1586, 0xc5a0bc5650)\r\n        <autogenerated>:36 +0x7e\r\ngithub.com/prometheus/prometheus/storage/local/chunk.(*Desc).Add(0xc5680d94c0, 0x158f37f3864, 0x40569068fcfdb0df, 0x0, 0x0, 0x2, 0x8020106, 0x2)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/chunk/chunk.go:136 +0x4a\r\ngithub.com/prometheus/prometheus/storage/local.(*memorySeries).add(0xc5a0bc5650, 0x158f37f3864, 0x40569068fcfdb0df, 0xc5a0bc5650, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/series.go:245 +0x115\r\ngithub.com/prometheus/prometheus/storage/local.(*MemorySeriesStorage).Append(0xc42011e000, 0xc643f4dfe0, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/storage/local/storage.go:858 +0x398\r\ngithub.com/prometheus/prometheus/storage.Fanout.Append(0xc4201adba0, 0x2, 0x2, 0xc643f4dfe0, 0xc480817d40, 0x26f5670)\r\n        /go/src/github.com/prometheus/prometheus/storage/storage.go:60 +0x66\r\ngithub.com/prometheus/prometheus/storage.(*Fanout).Append(0xc42043b020, 0xc643f4dfe0, 0xc5ef313b50, 0xc5ef313b40)\r\n        <autogenerated>:3 +0x6e\r\ngithub.com/prometheus/prometheus/retrieval.ruleLabelsAppender.Append(0x265af40, 0xc42043b020, 0xc48081c3c0, 0xc643f4dfe0, 0x0, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/target.go:241 +0x1b3\r\ngithub.com/prometheus/prometheus/retrieval.(*ruleLabelsAppender).Append(0xc480813220, 0xc643f4dfe0, 0x0, 0x0)\r\n        <autogenerated>:33 +0x6e\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).append(0xc4807fea00, 0xc66c1aa000, 0x4a7e, 0x4c00)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:456 +0x92\r\ngithub.com/prometheus/prometheus/retrieval.(*scrapeLoop).run(0xc4807fea00, 0x6fc23ac00, 0x6fc23ac00, 0x0)\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:425 +0x602\r\ncreated by github.com/prometheus/prometheus/retrieval.(*scrapePool).sync\r\n        /go/src/github.com/prometheus/prometheus/retrieval/scrape.go:240 +0x3e5\r\n```\r\n",
  "closed_at": "2016-12-13T22:13:39Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5609886?v=4",
    "events_url": "https://api.github.com/users/beorn7/events{/privacy}",
    "followers_url": "https://api.github.com/users/beorn7/followers",
    "following_url": "https://api.github.com/users/beorn7/following{/other_user}",
    "gists_url": "https://api.github.com/users/beorn7/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/beorn7",
    "id": 5609886,
    "login": "beorn7",
    "node_id": "MDQ6VXNlcjU2MDk4ODY=",
    "organizations_url": "https://api.github.com/users/beorn7/orgs",
    "received_events_url": "https://api.github.com/users/beorn7/received_events",
    "repos_url": "https://api.github.com/users/beorn7/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/beorn7/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/beorn7/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/beorn7"
  },
  "comments": 9,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/2273/comments",
  "created_at": "2016-12-12T17:29:48Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/2273/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/2273",
  "id": 195035719,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567165,
      "name": "component/remote storage",
      "node_id": "MDU6TGFiZWwzNjU1NjcxNjU=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/remote%20storage"
    },
    {
      "color": "ff0000",
      "default": false,
      "description": null,
      "id": 365563588,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNjU1NjM1ODg=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/bug"
    },
    {
      "color": "df0101",
      "default": false,
      "description": null,
      "id": 365563605,
      "name": "priority/P0",
      "node_id": "MDU6TGFiZWwzNjU1NjM2MDU=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/priority/P0"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/2273/labels{/name}",
  "locked": true,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxOTUwMzU3MTk=",
  "number": 2273,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Prometheus crashes on `panic: runtime error: integer divide by zero`",
  "updated_at": "2019-03-24T02:20:14Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/2273",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/324803?v=4",
    "events_url": "https://api.github.com/users/ichekrygin/events{/privacy}",
    "followers_url": "https://api.github.com/users/ichekrygin/followers",
    "following_url": "https://api.github.com/users/ichekrygin/following{/other_user}",
    "gists_url": "https://api.github.com/users/ichekrygin/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ichekrygin",
    "id": 324803,
    "login": "ichekrygin",
    "node_id": "MDQ6VXNlcjMyNDgwMw==",
    "organizations_url": "https://api.github.com/users/ichekrygin/orgs",
    "received_events_url": "https://api.github.com/users/ichekrygin/received_events",
    "repos_url": "https://api.github.com/users/ichekrygin/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ichekrygin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ichekrygin/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ichekrygin"
  }
}