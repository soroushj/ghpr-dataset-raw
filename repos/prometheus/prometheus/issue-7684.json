{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "Hello there,\r\n\r\n**What did you do?**\r\nI deployed a Prometheus instance on a Docker Swarm to try out the new Docker Swarm Service Discovery.\r\n\r\nHere is the docker-compose.yml :\r\n```\r\nversion: '3.7'\r\n\r\nservices:\r\n  prometheus:\r\n    image: prom/prometheus:master # Will change to v2.20.0\r\n    deploy:\r\n      resources:\r\n        limits:\r\n          memory: 1G\r\n        reservations:\r\n          memory: 128M\r\n      labels:\r\n        - \"prometheus.enable.service=true\"\r\n    stop_grace_period: 1m30s\r\n    ports:\r\n      - published: 9090\r\n        target: 9090\r\n        mode: host\r\n    command:\r\n      - '--log.level=debug'\r\n      - '--config.file=/etc/prometheus/prometheus.yml'\r\n      - '--storage.tsdb.path=/prometheus'\r\n      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION:-24h}'\r\n    volumes:\r\n      - /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n    user: root\r\n    networks:\r\n      - default\r\n```\r\n\r\nI get services and tasks listed in the Service Discovery on http://localhost:9090/service-discovery, including Prometheus, which is kept as a target, while everything else is dropped (as expected).\r\n\r\n**What did you expect to see?**\r\nIf I deploy the following stack, it does not appear in the new discovered tasks or services.\r\n```\r\nversion: '3.7'\r\n\r\nservices:\r\n  helloworld:\r\n    image: alpine:3.12\r\n    tty: true\r\n    networks:\r\n      - default\r\n```\r\nSame goes for :\r\n```\r\nversion: '3.7'\r\n\r\nservices:\r\n  mysql1:\r\n    image: mysql/mysql-server:8.0.19\r\n    stop_grace_period: 60s\r\n    environment:\r\n      - MYSQL_ROOT_PASSWORD=<password>\r\n      - MYSQL_ROOT_HOST=%\r\n    hostname: server-1\r\n    networks:\r\n      - default\r\n```\r\nHowever, some more complex stacks are discovered as expected.\r\n\r\nStarting Prometheus before or after deploying the stack provides the same result.\r\n\r\n**What did you see instead? Under which circumstances?**\r\n\r\n\r\n**Environment**\r\nTested on a Swarm with a single node, and a Swarm with 3 master nodes and multiple workers.\r\nDocker version on single master : Docker version 19.03.12, build 48a66213fe\r\nDocker version on multi master : Docker version 19.03.2, build 6a30dfc\r\n\r\n* System information:\r\nSingle master : Linux 5.3.0-62-generic x86_64\r\nMulti master : Linux 3.10.0-1062.1.1.el7.x86_64 x86_64\r\n\r\n* Prometheus version:\r\n```\r\nprometheus, version 2.20.0 (branch: master, revision: 348ff4285ffa59907c9d7fd7eb3cb7d748f42758)\r\n  build user:       root@f7960ff9f1b5\r\n  build date:       20200728-04:45:57\r\n  go version:       go1.14.6\r\n```\r\n\r\n* Prometheus configuration file:\r\n```\r\nglobal:\r\n  scrape_interval:     15s # By default, scrape targets every 15 seconds.\r\n  evaluation_interval: 15s # By default, scrape targets every 15 seconds.\r\n  scrape_timeout: 15s\r\n\r\n  external_labels:\r\n    monitor: 'prometheus-monitor-1.prod'\r\n\r\nrule_files:\r\n  - \"rules/*.rules\"\r\n\r\nscrape_configs:\r\n  - job_name: 'swarm-services'\r\n    dockerswarm_sd_configs:\r\n      - host: unix:///var/run/docker.sock\r\n      # - host: http://dockerd:2375\r\n        role: services\r\n    relabel_configs:\r\n      # Only keep containers that have a `prometheus-enable-service` label.\r\n      - source_labels: [__meta_dockerswarm_service_label_prometheus_enable_service]\r\n        regex: .+\r\n        action: keep\r\n      # Use the task labels that are prefixed by `prometheus-`.\r\n      - regex: __meta_dockerswarm_service_label_prometheus_(.+)\r\n        action: labelmap\r\n        replacement: $1\r\n\r\n  - job_name: 'swarm-tasks'\r\n    dockerswarm_sd_configs:\r\n      - host: unix:///var/run/docker.sock\r\n      # - host: http://dockerd:2375\r\n        role: tasks  \r\n    relabel_configs:                                \r\n      # Only keep containers that should be running.\r\n      - source_labels: [__meta_dockerswarm_task_desired_state]\r\n        regex: running\r\n        action: keep\r\n      # Only keep containers that have a `prometheus-enable-task` label.\r\n      - source_labels: [__meta_dockerswarm_service_label_prometheus_enable_task]\r\n        regex: .+\r\n        action: keep\r\n      # Use the task labels that are prefixed by `prometheus-`.\r\n      - regex: __meta_dockerswarm_service_label_prometheus_(.+)\r\n        action: labelmap\r\n        replacement: $1\r\n```\r\n\r\n* Logs:\r\nFor reference, even though there's nothing abnormal here.\r\n```\r\nlevel=info ts=2020-07-28T15:11:48.626Z caller=main.go:345 msg=\"Starting Prometheus\" version=\"(version=2.20.0, branch=master, revision=348ff4285ffa59907c9d7fd7eb3cb7d748f42758)\"\r\nlevel=info ts=2020-07-28T15:11:48.626Z caller=main.go:346 build_context=\"(go=go1.14.6, user=root@f7960ff9f1b5, date=20200728-04:45:57)\"\r\nlevel=info ts=2020-07-28T15:11:48.626Z caller=main.go:347 host_details=\"(Linux 5.3.0-62-generic #56-Ubuntu SMP Tue Jun 23 11:20:52 UTC 2020 x86_64 5efe78907e8f (none))\"\r\nlevel=info ts=2020-07-28T15:11:48.626Z caller=main.go:348 fd_limits=\"(soft=1048576, hard=1048576)\"\r\nlevel=info ts=2020-07-28T15:11:48.626Z caller=main.go:349 vm_limits=\"(soft=unlimited, hard=unlimited)\"\r\nlevel=info ts=2020-07-28T15:11:48.627Z caller=main.go:683 msg=\"Starting TSDB ...\"\r\nlevel=info ts=2020-07-28T15:11:48.627Z caller=web.go:525 component=web msg=\"Start listening for connections\" address=0.0.0.0:9090\r\nlevel=info ts=2020-07-28T15:11:48.631Z caller=head.go:642 component=tsdb msg=\"Replaying on-disk memory mappable chunks if any\"\r\nlevel=info ts=2020-07-28T15:11:48.631Z caller=head.go:656 component=tsdb msg=\"On-disk memory mappable chunks replay completed\" duration=1.288\u00b5s\r\nlevel=info ts=2020-07-28T15:11:48.631Z caller=head.go:662 component=tsdb msg=\"Replaying WAL, this may take a while\"\r\nlevel=info ts=2020-07-28T15:11:48.631Z caller=head.go:714 component=tsdb msg=\"WAL segment loaded\" segment=0 maxSegment=0\r\nlevel=info ts=2020-07-28T15:11:48.631Z caller=head.go:717 component=tsdb msg=\"WAL replay completed\" checkpoint_replay_duration=13.106\u00b5s wal_replay_duration=140.657\u00b5s total_replay_duration=166.48\u00b5s\r\nlevel=info ts=2020-07-28T15:11:48.632Z caller=main.go:699 fs_type=EXT4_SUPER_MAGIC\r\nlevel=info ts=2020-07-28T15:11:48.632Z caller=main.go:700 msg=\"TSDB started\"\r\nlevel=debug ts=2020-07-28T15:11:48.632Z caller=main.go:701 msg=\"TSDB options\" MinBlockDuration=2h MaxBlockDuration=144m MaxBytes=0B NoLockfile=false RetentionDuration=1d WALSegmentSize=0B AllowOverlappingBlocks=false WALCompression=true\r\nlevel=info ts=2020-07-28T15:11:48.632Z caller=main.go:819 msg=\"Loading configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=debug ts=2020-07-28T15:11:48.632Z caller=manager.go:226 component=\"discovery manager scrape\" msg=\"Starting provider\" provider=*dockerswarm.SDConfig/0 subs=[swarm-services]\r\nlevel=debug ts=2020-07-28T15:11:48.632Z caller=manager.go:226 component=\"discovery manager scrape\" msg=\"Starting provider\" provider=*dockerswarm.SDConfig/1 subs=[swarm-tasks]\r\nlevel=info ts=2020-07-28T15:11:48.632Z caller=main.go:847 msg=\"Completed loading of configuration file\" filename=/etc/prometheus/prometheus.yml\r\nlevel=info ts=2020-07-28T15:11:48.632Z caller=main.go:655 msg=\"Server is ready to receive web requests.\"\r\n```\r\n\r\nThank you !",
  "closed_at": "2020-07-29T18:56:31Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/291750?v=4",
    "events_url": "https://api.github.com/users/roidelapluie/events{/privacy}",
    "followers_url": "https://api.github.com/users/roidelapluie/followers",
    "following_url": "https://api.github.com/users/roidelapluie/following{/other_user}",
    "gists_url": "https://api.github.com/users/roidelapluie/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/roidelapluie",
    "id": 291750,
    "login": "roidelapluie",
    "node_id": "MDQ6VXNlcjI5MTc1MA==",
    "organizations_url": "https://api.github.com/users/roidelapluie/orgs",
    "received_events_url": "https://api.github.com/users/roidelapluie/received_events",
    "repos_url": "https://api.github.com/users/roidelapluie/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/roidelapluie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roidelapluie/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/roidelapluie"
  },
  "comments": 12,
  "comments_url": "https://api.github.com/repos/prometheus/prometheus/issues/7684/comments",
  "created_at": "2020-07-28T16:08:59Z",
  "events_url": "https://api.github.com/repos/prometheus/prometheus/issues/7684/events",
  "html_url": "https://github.com/prometheus/prometheus/issues/7684",
  "id": 667196133,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 365567641,
      "name": "component/service discovery",
      "node_id": "MDU6TGFiZWwzNjU1Njc2NDE=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/component/service%20discovery"
    },
    {
      "color": "bfd4f2",
      "default": false,
      "description": "",
      "id": 1574803245,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwxNTc0ODAzMjQ1",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/kind/feature"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": null,
      "id": 647013637,
      "name": "priority/P3",
      "node_id": "MDU6TGFiZWw2NDcwMTM2Mzc=",
      "url": "https://api.github.com/repos/prometheus/prometheus/labels/priority/P3"
    }
  ],
  "labels_url": "https://api.github.com/repos/prometheus/prometheus/issues/7684/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2NjcxOTYxMzM=",
  "number": 7684,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/prometheus/prometheus",
  "state": "closed",
  "title": "Docker Swarm: Discover tasks and services exposed in overlay networks",
  "updated_at": "2020-08-03T13:46:04Z",
  "url": "https://api.github.com/repos/prometheus/prometheus/issues/7684",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/23334784?v=4",
    "events_url": "https://api.github.com/users/camo-f/events{/privacy}",
    "followers_url": "https://api.github.com/users/camo-f/followers",
    "following_url": "https://api.github.com/users/camo-f/following{/other_user}",
    "gists_url": "https://api.github.com/users/camo-f/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/camo-f",
    "id": 23334784,
    "login": "camo-f",
    "node_id": "MDQ6VXNlcjIzMzM0Nzg0",
    "organizations_url": "https://api.github.com/users/camo-f/orgs",
    "received_events_url": "https://api.github.com/users/camo-f/received_events",
    "repos_url": "https://api.github.com/users/camo-f/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/camo-f/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/camo-f/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/camo-f"
  }
}