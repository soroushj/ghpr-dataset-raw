{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
    "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpkrohling/followers",
    "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpkrohling",
    "id": 13387,
    "login": "jpkrohling",
    "node_id": "MDQ6VXNlcjEzMzg3",
    "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
    "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
    "repos_url": "https://api.github.com/users/jpkrohling/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpkrohling"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
      "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpkrohling/followers",
      "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpkrohling",
      "id": 13387,
      "login": "jpkrohling",
      "node_id": "MDQ6VXNlcjEzMzg3",
      "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
      "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
      "repos_url": "https://api.github.com/users/jpkrohling/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpkrohling"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "## Requirement - what kind of business use case are you trying to solve?\r\n\r\nTrying to run master and checking if everything works.\r\n\r\n## Problem - what in Jaeger blocks you from solving the requirement?\r\n\r\nDropping a small number of spans\r\n\r\n## Any open questions to address\r\n\r\nHere's more info:\r\nWe are currently running Jaeger with about 10K spans/sec on a host. But we noticed that `rate(jaeger_collector_spans_dropped_total[5m])` is `~1` on upgrade to master. Which shouldn't be there, because we have an insane queue capacity (300K).\r\n\r\nSo I put in some debug logging\r\n\r\n```\r\ndiff --git a/pkg/queue/bounded_queue.go b/pkg/queue/bounded_queue.go\r\nindex 077e7af..bbbabb7 100644\r\n--- a/pkg/queue/bounded_queue.go\r\n+++ b/pkg/queue/bounded_queue.go\r\n@@ -16,6 +16,7 @@\r\n package queue\r\n import (\r\n+       \"fmt\"\r\n        \"sync\"\r\n        \"sync/atomic\"\r\n        \"time\"\r\n@@ -99,8 +100,11 @@ func (q *BoundedQueue) Produce(item interface{}) bool {\r\n        // we might have two concurrent backing queues at the moment\r\n        // their combined size is stored in q.size, and their combined capacity\r\n        // should match the capacity of the new queue\r\n-       if q.Size() >= q.Capacity() {\r\n+       size := q.Size()\r\n+       capacity := q.Capacity()\r\n+       if size >= capacity {\r\n                // note that all items will be dropped if the capacity is 0\r\n+               fmt.Println(\"size is bigger than capacity! dropping span!\", size, capacity)\r\n                q.onDroppedItem(item)\r\n                return false\r\n        }\r\n@@ -111,6 +115,7 @@ func (q *BoundedQueue) Produce(item interface{}) bool {\r\n                return true\r\n        default:\r\n                // should not happen, as overflows should have been captured earlier\r\n+               fmt.Println(\"dropping span on overflow!\")\r\n                if q.onDroppedItem != nil {\r\n                        q.onDroppedItem(item)\r\n                }\r\n```\r\n\r\nAnd saw this in the logs:\r\n```\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\nsize is bigger than capacity! dropping span! 4294967295 300000\r\n```\r\n\r\nSo I see that recently the queue size handling moved to using ubers atomic package. And from int32 to uint32. I think before the size used to go to -1 but then it worked, but now it's broken.",
  "closed_at": "2020-01-28T10:27:35Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
    "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpkrohling/followers",
    "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpkrohling",
    "id": 13387,
    "login": "jpkrohling",
    "node_id": "MDQ6VXNlcjEzMzg3",
    "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
    "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
    "repos_url": "https://api.github.com/users/jpkrohling/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpkrohling"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2042/comments",
  "created_at": "2020-01-27T15:55:39Z",
  "events_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2042/events",
  "html_url": "https://github.com/jaegertracing/jaeger/issues/2042",
  "id": 555667900,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 358839838,
      "name": "bug",
      "node_id": "MDU6TGFiZWwzNTg4Mzk4Mzg=",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2042/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NTU2Njc5MDA=",
  "number": 2042,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/jaegertracing/jaeger",
  "state": "closed",
  "title": "Dropping small amount of spans on master",
  "updated_at": "2020-01-28T10:27:35Z",
  "url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2042",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7354143?v=4",
    "events_url": "https://api.github.com/users/gouthamve/events{/privacy}",
    "followers_url": "https://api.github.com/users/gouthamve/followers",
    "following_url": "https://api.github.com/users/gouthamve/following{/other_user}",
    "gists_url": "https://api.github.com/users/gouthamve/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/gouthamve",
    "id": 7354143,
    "login": "gouthamve",
    "node_id": "MDQ6VXNlcjczNTQxNDM=",
    "organizations_url": "https://api.github.com/users/gouthamve/orgs",
    "received_events_url": "https://api.github.com/users/gouthamve/received_events",
    "repos_url": "https://api.github.com/users/gouthamve/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/gouthamve/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gouthamve/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/gouthamve"
  }
}