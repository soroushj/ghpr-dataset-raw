{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!--\r\nWelcome to the Jaeger project! \ud83d\udc4b\ud83c\udf89\r\n\r\n- Please search for existing issues to avoid creating duplicate bugs/feature requests.\r\n- Please be respectful and considerate of others when commenting on issues.\r\n- Please provide as much information as possible so we all understand the issue.\r\n- If you only have a question, you may get a faster response by asking in\r\n    - our chat room https://gitter.im/jaegertracing/Lobby, or\r\n    - the forum https://groups.google.com/d/forum/jaeger-tracing\r\n    (but please don't double post)\r\n-->\r\n\r\nThis proposal is motivated by a PR comment originally posted by @yurishkuro in https://github.com/jaegertracing/jaeger/pull/2548#discussion_r502507111.\r\n\r\n## Requirement - what kind of business use case are you trying to solve?\r\n\r\n- Bring back the explanation of what `make build-ui` does under the hood, which contains valuable information for contributors.\r\n- Reduce the number of manual steps required to get started in [contributing.md](https://github.com/jaegertracing/jaeger/blob/master/CONTRIBUTING.md) instructions to at least:\r\n```\r\nmake install-tools\r\nmake test\r\n```\r\n- More correct make targets:\r\n  - Only run `build-ui` when UI assets are required.\r\n  - Clean up redundant make target dependencies and only assign the `build-ui` dependency to the most specific targets.\r\n  - Add missing `build-ui` dependencies to make targets that depend on UI assets, e.g. `build-all-in-one` should have a dependency on UI assets, but why only `build-all-in-one-linux` takes the `build-ui` dependency?\r\n\r\n## Problem - what in Jaeger blocks you from solving the requirement?\r\n\r\n[contributing.md](https://github.com/jaegertracing/jaeger/blob/master/CONTRIBUTING.md) currently requires these prerequisite steps:\r\n\r\n```\r\ngit submodule update --init --recursive\r\nmake install-tools\r\nmake test\r\n# if you wish to build platform binaries locally - the step below is needed.\r\nmake build-ui\r\n```\r\n\r\n`git submodule update --init --recursive` and `make build-ui` are specific to UI builds. Instead of making these prerequisites, could we make these an explicit dependency within our `Makefile` and only run them when performing UI-related builds?\r\n\r\nThis has the added benefit of automating these steps where required and, IMHO, is more correct. Consider the following scenarios:\r\n- Only run/build non-UI components; for example: testing agent->collector->kafka and validating with a consumer.\r\n- The jaeger-ui submodule commit is modified in upstream during development and we rebase to pick these changes up.\r\n\r\n## Proposal - what do you suggest to solve the problem or improve the existing situation?\r\n\r\n<!-- It's ok if you don't have one. -->\r\n\r\n- Reinstate what `make build-ui` does under the hood (which was removed in #2548) within the Makefile as part of the `build-ui` target, similar to the [`proto` make target](https://github.com/jaegertracing/jaeger/blob/master/Makefile#L454).\r\n\r\n- Add `build-ui` dependency to the \"lowest common denominator\" make targets, namely `build-query`, `build-all-in-one` and `run-all-in-one`.\r\n\r\n- `yarn install` and `yarn build` steps take well over a minute to complete even after prior calls, which is particularly undesirable for something like `make run-all-in-one`.\r\n  - Make `build-ui` idempotent by checking for existence of the asset files (`cmd/query/app/ui/*/gen_assets.go`). If there's a need to force UI asset rebuilds, either delete asset files via the `clean` target (this sounds nicer?) or introduce a `build-ui-force` option target.\r\n\r\n- As above, move `build-ui` dependency from `build-all-in-one-linux` to the more general `build-all-in-one` target to fix other OS builds.\r\n\r\n- Add `git submodule update --init --recursive` as part of the `build-ui` target given their fates are tied to one another (unless if I'm mistaken). This call is idempotent and so is relatively quick to complete after making the initial call. Added benefit of ensuring the correct commit is used in each build/run if it was modified in the upstream master.\r\n\r\n- Remove redundant `build-ui` from `docker` target given it is introduced as a dependency in `build-query` (`build-binaries-linux` -> `build-platform-binaries` -> `build-query` -> `build-ui`).\r\n\r\n- Simplify the [contributing.md](https://github.com/jaegertracing/jaeger/blob/master/CONTRIBUTING.md) Prerequisites section down to:\r\n```\r\nmake install-tools\r\nmake test\r\n```\r\n\r\n## Any open questions to address\r\n\r\n<!-- Questions that should be answered before proceeding with implementation. -->\r\n- Maybe there are good reasons to having `git submodule update...` and `make build-ui` as explicit prerequisite steps that I have overlooked?\r\n- What is the reason for requiring `make test` as a prerequisite?",
  "closed_at": "2020-10-20T05:50:37Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/3523016?v=4",
    "events_url": "https://api.github.com/users/yurishkuro/events{/privacy}",
    "followers_url": "https://api.github.com/users/yurishkuro/followers",
    "following_url": "https://api.github.com/users/yurishkuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/yurishkuro/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yurishkuro",
    "id": 3523016,
    "login": "yurishkuro",
    "node_id": "MDQ6VXNlcjM1MjMwMTY=",
    "organizations_url": "https://api.github.com/users/yurishkuro/orgs",
    "received_events_url": "https://api.github.com/users/yurishkuro/received_events",
    "repos_url": "https://api.github.com/users/yurishkuro/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yurishkuro/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yurishkuro"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2572/comments",
  "created_at": "2020-10-15T23:24:11Z",
  "events_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2572/events",
  "html_url": "https://github.com/jaegertracing/jaeger/issues/2572",
  "id": 722750236,
  "labels": [
    {
      "color": "ededed",
      "default": false,
      "description": null,
      "id": 1740680315,
      "name": "needs-triage",
      "node_id": "MDU6TGFiZWwxNzQwNjgwMzE1",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/needs-triage"
    }
  ],
  "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2572/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU3MjI3NTAyMzY=",
  "number": 2572,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/jaegertracing/jaeger",
  "state": "closed",
  "title": "Simplify contributing.md",
  "updated_at": "2020-10-20T05:50:37Z",
  "url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2572",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/26584478?v=4",
    "events_url": "https://api.github.com/users/albertteoh/events{/privacy}",
    "followers_url": "https://api.github.com/users/albertteoh/followers",
    "following_url": "https://api.github.com/users/albertteoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/albertteoh/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/albertteoh",
    "id": 26584478,
    "login": "albertteoh",
    "node_id": "MDQ6VXNlcjI2NTg0NDc4",
    "organizations_url": "https://api.github.com/users/albertteoh/orgs",
    "received_events_url": "https://api.github.com/users/albertteoh/received_events",
    "repos_url": "https://api.github.com/users/albertteoh/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/albertteoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/albertteoh/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/albertteoh"
  }
}