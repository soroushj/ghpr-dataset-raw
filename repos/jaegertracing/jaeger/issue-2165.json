{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "Using the following OpenTelemetry collector config (with image built from master):\r\n```\r\n    receivers:\r\n      jaeger:\r\n        protocols:\r\n          grpc:\r\n            endpoint: \"localhost:14250\"\r\n\r\n    processors:\r\n      queued_retry:\r\n\r\n    exporters:\r\n      logging:\r\n\r\n    service:\r\n      pipelines:\r\n        traces:\r\n          receivers: [jaeger]\r\n          processors: [queued_retry]\r\n          exporters: [logging]\r\n```\r\nand using the [business-application.yaml](https://github.com/open-telemetry/opentelemetry-operator/blob/master/examples/business-application.yaml) to create some test requests, it resulted in the following metrics:\r\n```\r\n# HELP otelcol_batches_dropped The number of span batches dropped.\r\n# TYPE otelcol_batches_dropped counter\r\notelcol_batches_dropped{processor=\"\",service=\"\",source_format=\"\"} 0\r\n# HELP otelcol_batches_received The number of span batches received.\r\n# TYPE otelcol_batches_received counter\r\notelcol_batches_received{processor=\"queued_retry\",service=\"inventory\",source_format=\"jaeger\"} 9\r\notelcol_batches_received{processor=\"queued_retry\",service=\"order\",source_format=\"jaeger\"} 9\r\n# HELP otelcol_oc_io_process_cpu_seconds CPU seconds for this process\r\n# TYPE otelcol_oc_io_process_cpu_seconds gauge\r\notelcol_oc_io_process_cpu_seconds 0\r\n# HELP otelcol_oc_io_process_memory_alloc Number of bytes currently allocated in use\r\n# TYPE otelcol_oc_io_process_memory_alloc gauge\r\notelcol_oc_io_process_memory_alloc 4.582904e+06\r\n# HELP otelcol_oc_io_process_sys_memory_alloc Number of bytes given to the process to use in total\r\n# TYPE otelcol_oc_io_process_sys_memory_alloc gauge\r\notelcol_oc_io_process_sys_memory_alloc 7.25486e+07\r\n# HELP otelcol_oc_io_process_total_memory_alloc Number of allocations in total\r\n# TYPE otelcol_oc_io_process_total_memory_alloc gauge\r\notelcol_oc_io_process_total_memory_alloc 6.415736e+06\r\n# HELP otelcol_otelcol_exporter_dropped_spans Counts the number of spans received by the exporter\r\n# TYPE otelcol_otelcol_exporter_dropped_spans counter\r\notelcol_otelcol_exporter_dropped_spans{otelsvc_exporter=\"logging\",otelsvc_receiver=\"\"} 0\r\n# HELP otelcol_otelcol_exporter_received_spans Counts the number of spans received by the exporter\r\n# TYPE otelcol_otelcol_exporter_received_spans counter\r\notelcol_otelcol_exporter_received_spans{otelsvc_exporter=\"logging\",otelsvc_receiver=\"\"} 252\r\n# HELP otelcol_otelcol_receiver_dropped_spans Counts the number of spans dropped by the receiver\r\n# TYPE otelcol_otelcol_receiver_dropped_spans counter\r\notelcol_otelcol_receiver_dropped_spans{otelsvc_receiver=\"jaeger-collector\"} 0\r\n# HELP otelcol_otelcol_receiver_received_spans Counts the number of spans received by the receiver\r\n# TYPE otelcol_otelcol_receiver_received_spans counter\r\notelcol_otelcol_receiver_received_spans{otelsvc_receiver=\"jaeger-collector\"} 252\r\n# HELP otelcol_queue_latency The \"in queue\" latency of the successful send operations.\r\n# TYPE otelcol_queue_latency histogram\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"10\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"25\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"50\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"75\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"100\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"250\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"500\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"750\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"1000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"2000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"3000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"4000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"5000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"10000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"20000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"30000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"50000\"} 18\r\notelcol_queue_latency_bucket{processor=\"queued_retry\",le=\"+Inf\"} 18\r\notelcol_queue_latency_sum{processor=\"queued_retry\"} 0\r\notelcol_queue_latency_count{processor=\"queued_retry\"} 18\r\n# HELP otelcol_queue_length Current number of batches in the queued exporter\r\n# TYPE otelcol_queue_length gauge\r\notelcol_queue_length{processor=\"queued_retry\"} 0\r\n# HELP otelcol_send_latency The latency of the successful send operations.\r\n# TYPE otelcol_send_latency histogram\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"10\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"25\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"50\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"75\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"100\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"250\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"500\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"750\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"1000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"2000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"3000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"4000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"5000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"10000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"20000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"30000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"50000\"} 18\r\notelcol_send_latency_bucket{processor=\"queued_retry\",le=\"+Inf\"} 18\r\notelcol_send_latency_sum{processor=\"queued_retry\"} 0\r\notelcol_send_latency_count{processor=\"queued_retry\"} 18\r\n# HELP otelcol_spans_dropped The number of spans dropped.\r\n# TYPE otelcol_spans_dropped counter\r\notelcol_spans_dropped{processor=\"\",service=\"\",source_format=\"\"} 0\r\n# HELP otelcol_spans_received The number of spans received.\r\n# TYPE otelcol_spans_received counter\r\notelcol_spans_received{processor=\"queued_retry\",service=\"inventory\",source_format=\"jaeger\"} 112\r\notelcol_spans_received{processor=\"queued_retry\",service=\"order\",source_format=\"jaeger\"} 140\r\n# HELP otelcol_success_send The number of successful send operations performed by queued exporter\r\n# TYPE otelcol_success_send counter\r\notelcol_success_send{processor=\"queued_retry\",service=\"inventory\",source_format=\"jaeger\"} 9\r\notelcol_success_send{processor=\"queued_retry\",service=\"order\",source_format=\"jaeger\"} 9\r\n```",
  "closed_at": "2020-09-03T12:38:05Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5618424?v=4",
    "events_url": "https://api.github.com/users/pavolloffay/events{/privacy}",
    "followers_url": "https://api.github.com/users/pavolloffay/followers",
    "following_url": "https://api.github.com/users/pavolloffay/following{/other_user}",
    "gists_url": "https://api.github.com/users/pavolloffay/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/pavolloffay",
    "id": 5618424,
    "login": "pavolloffay",
    "node_id": "MDQ6VXNlcjU2MTg0MjQ=",
    "organizations_url": "https://api.github.com/users/pavolloffay/orgs",
    "received_events_url": "https://api.github.com/users/pavolloffay/received_events",
    "repos_url": "https://api.github.com/users/pavolloffay/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pavolloffay/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/pavolloffay"
  },
  "comments": 25,
  "comments_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2165/comments",
  "created_at": "2020-02-12T16:15:36Z",
  "events_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2165/events",
  "html_url": "https://github.com/jaegertracing/jaeger/issues/2165",
  "id": 594902204,
  "labels": [
    {
      "color": "5319e7",
      "default": false,
      "description": "",
      "id": 1965406717,
      "name": "area/otel",
      "node_id": "MDU6TGFiZWwxOTY1NDA2NzE3",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/area/otel"
    }
  ],
  "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2165/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": null,
    "closed_issues": 10,
    "created_at": "2020-04-06T08:08:09Z",
    "creator": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/5618424?v=4",
      "events_url": "https://api.github.com/users/pavolloffay/events{/privacy}",
      "followers_url": "https://api.github.com/users/pavolloffay/followers",
      "following_url": "https://api.github.com/users/pavolloffay/following{/other_user}",
      "gists_url": "https://api.github.com/users/pavolloffay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pavolloffay",
      "id": 5618424,
      "login": "pavolloffay",
      "node_id": "MDQ6VXNlcjU2MTg0MjQ=",
      "organizations_url": "https://api.github.com/users/pavolloffay/orgs",
      "received_events_url": "https://api.github.com/users/pavolloffay/received_events",
      "repos_url": "https://api.github.com/users/pavolloffay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pavolloffay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pavolloffay"
    },
    "description": "This milestone is being used to track when the OpenTelemetry Collector, with custom Jaeger specific components, is at a suitable level of functionality to be considered as a replacement for the Jaeger Collector.",
    "due_on": null,
    "html_url": "https://github.com/jaegertracing/jaeger/milestone/12",
    "id": 5278462,
    "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/milestones/12/labels",
    "node_id": "MDk6TWlsZXN0b25lNTI3ODQ2Mg==",
    "number": 12,
    "open_issues": 6,
    "state": "open",
    "title": "OpenTelemetry-collector drop-in replacement",
    "updated_at": "2020-09-03T12:38:05Z",
    "url": "https://api.github.com/repos/jaegertracing/jaeger/milestones/12"
  },
  "node_id": "MDU6SXNzdWU1OTQ5MDIyMDQ=",
  "number": 2165,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/jaegertracing/jaeger",
  "state": "closed",
  "title": "Are the current set of collector metrics adequate?",
  "updated_at": "2020-09-03T12:38:05Z",
  "url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2165",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/164562?v=4",
    "events_url": "https://api.github.com/users/objectiser/events{/privacy}",
    "followers_url": "https://api.github.com/users/objectiser/followers",
    "following_url": "https://api.github.com/users/objectiser/following{/other_user}",
    "gists_url": "https://api.github.com/users/objectiser/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/objectiser",
    "id": 164562,
    "login": "objectiser",
    "node_id": "MDQ6VXNlcjE2NDU2Mg==",
    "organizations_url": "https://api.github.com/users/objectiser/orgs",
    "received_events_url": "https://api.github.com/users/objectiser/received_events",
    "repos_url": "https://api.github.com/users/objectiser/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/objectiser/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/objectiser/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/objectiser"
  }
}