{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
    "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpkrohling/followers",
    "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpkrohling",
    "id": 13387,
    "login": "jpkrohling",
    "node_id": "MDQ6VXNlcjEzMzg3",
    "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
    "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
    "repos_url": "https://api.github.com/users/jpkrohling/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpkrohling"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
      "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpkrohling/followers",
      "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpkrohling",
      "id": 13387,
      "login": "jpkrohling",
      "node_id": "MDQ6VXNlcjEzMzg3",
      "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
      "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
      "repos_url": "https://api.github.com/users/jpkrohling/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpkrohling"
    }
  ],
  "author_association": "NONE",
  "body": "**Describe the bug**\r\nThe jaeger agent is constantly logging `0` characters in the console whenever the `/sampling` endpoint is queried. This does not seem to be happening with the zap logger since the record is not formatted and changing the log level to `error` does not fix the behavior.\r\n\r\nIn production, most of our microservices refresh the remote sampling configuration every minutes causing pollution in the logs and in our Kibana as well since all the logstream is parsed.\r\n\r\n```\r\n2020/07/22 14:46:13 maxprocs: Updating GOMAXPROCS=1: using minimum allowed GOMAXPROCS\r\n{\"level\":\"info\",\"ts\":1595429173.690958,\"caller\":\"flags/service.go:116\",\"msg\":\"Mounting metrics handler on admin server\",\"route\":\"/metrics\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6913276,\"caller\":\"flags/admin.go:120\",\"msg\":\"Mounting health check on admin server\",\"route\":\"/\"}\r\n{\"level\":\"info\",\"ts\":1595429173.691403,\"caller\":\"flags/admin.go:126\",\"msg\":\"Starting admin HTTP server\",\"http-addr\":\":14271\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6914232,\"caller\":\"flags/admin.go:112\",\"msg\":\"Admin server started\",\"http.host-port\":\"[::]:14271\",\"health-status\":\"unavailable\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6923292,\"caller\":\"grpc/builder.go:66\",\"msg\":\"Agent requested insecure grpc connection to collector(s)\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6923819,\"caller\":\"grpc@v1.27.1/clientconn.go:106\",\"msg\":\"parsed scheme: \\\"\\\"\",\"system\":\"grpc\",\"grpc_log\":true}\r\n{\"level\":\"info\",\"ts\":1595429173.6924126,\"caller\":\"grpc@v1.27.1/clientconn.go:106\",\"msg\":\"scheme \\\"\\\" not registered, fallback to default scheme\",\"system\":\"grpc\",\"grpc_log\":true}\r\n{\"level\":\"info\",\"ts\":1595429173.692434,\"caller\":\"passthrough/passthrough.go:48\",\"msg\":\"ccResolverWrapper: sending update to cc: {[{collector-svc:14250  <nil> 0 <nil>}] <nil> <nil>}\",\"system\":\"grpc\",\"grpc_log\":true}\r\n{\"level\":\"info\",\"ts\":1595429173.6924582,\"caller\":\"grpc@v1.27.1/clientconn.go:948\",\"msg\":\"ClientConn switching balancer to \\\"round_robin\\\"\",\"system\":\"grpc\",\"grpc_log\":true}\r\n{\"level\":\"info\",\"ts\":1595429173.6941726,\"caller\":\"command-line-arguments/main.go:78\",\"msg\":\"Starting agent\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6942337,\"caller\":\"healthcheck/handler.go:128\",\"msg\":\"Health Check state change\",\"status\":\"ready\"}\r\n{\"level\":\"info\",\"ts\":1595429173.6956027,\"caller\":\"app/agent.go:69\",\"msg\":\"Starting jaeger-agent HTTP server\",\"http-port\":5778}\r\n{\"level\":\"info\",\"ts\":1595429173.7920358,\"caller\":\"base/balancer.go:196\",\"msg\":\"roundrobinPicker: newPicker called with info: {map[0xc00020e890:{{collector-svc:14250  <nil> 0 <nil>}}]}\",\"system\":\"grpc\",\"grpc_log\":true}\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n\r\n```\r\n\r\n```\r\njaeger_agent_collector_proxy_total{endpoint=\"sampling\",protocol=\"grpc\",result=\"err\"} 0\r\njaeger_agent_collector_proxy_total{endpoint=\"sampling\",protocol=\"grpc\",result=\"ok\"} 8\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Deploy Jaeger agent container. \r\n2. Open the log stream.\r\n3. Create a local port forwarding and curl that specific agent with `curl -v http://localhost:5778/sampling\\?service\\=dummy`\r\n4. A new line in the log should appear with the value `0`. \r\n\r\n**Expected behavior**\r\nThis log does not show up because it has no value. If the log has a value for some reason, it should be displayed with `debug` level only and formatted properly.\r\n\r\n**Version (please complete the following information):**\r\n - OS: Linux\r\n - Jaeger version: 1.8\r\n - Deployment: Kubernetes\r\n\r\n**What troubleshooting steps did you try?**\r\nI tried several requests like `http://localhost:14271/metrics` and `http://localhost:5778/baggageRestrictions` but these dont cause issues. When I execute `curl http://localhost:5778/sampling`, I get \r\n`'service' parameter must be provided once` and in that case there is no additional `0`. That means the \"log\" happens after https://github.com/jaegertracing/jaeger/blob/1803e05e5a5f261f788935035aa5dabb99bcbbea/pkg/clientcfg/clientcfghttp/handler.go#L129.\r\n\r\n\r\n**Additional context**\r\nThis is not causing any issues, it is just very annoying. I tried to find in the code where/why this is sent to the standard output. Since it is not a log, it is quite hard to find. Could it be the exit code of a process ?\r\n",
  "closed_at": "2020-08-11T11:57:03Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/13387?v=4",
    "events_url": "https://api.github.com/users/jpkrohling/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpkrohling/followers",
    "following_url": "https://api.github.com/users/jpkrohling/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpkrohling/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpkrohling",
    "id": 13387,
    "login": "jpkrohling",
    "node_id": "MDQ6VXNlcjEzMzg3",
    "organizations_url": "https://api.github.com/users/jpkrohling/orgs",
    "received_events_url": "https://api.github.com/users/jpkrohling/received_events",
    "repos_url": "https://api.github.com/users/jpkrohling/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpkrohling/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpkrohling"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2356/comments",
  "created_at": "2020-07-22T16:24:42Z",
  "events_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2356/events",
  "html_url": "https://github.com/jaegertracing/jaeger/issues/2356",
  "id": 663890656,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 358839838,
      "name": "bug",
      "node_id": "MDU6TGFiZWwzNTg4Mzk4Mzg=",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2356/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2NjM4OTA2NTY=",
  "number": 2356,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/jaegertracing/jaeger",
  "state": "closed",
  "title": "Jaeger agent logs \"0\" whenever sampling strategies are requested",
  "updated_at": "2020-08-11T11:57:03Z",
  "url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2356",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/47184027?v=4",
    "events_url": "https://api.github.com/users/agaudreault-jive/events{/privacy}",
    "followers_url": "https://api.github.com/users/agaudreault-jive/followers",
    "following_url": "https://api.github.com/users/agaudreault-jive/following{/other_user}",
    "gists_url": "https://api.github.com/users/agaudreault-jive/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/agaudreault-jive",
    "id": 47184027,
    "login": "agaudreault-jive",
    "node_id": "MDQ6VXNlcjQ3MTg0MDI3",
    "organizations_url": "https://api.github.com/users/agaudreault-jive/orgs",
    "received_events_url": "https://api.github.com/users/agaudreault-jive/received_events",
    "repos_url": "https://api.github.com/users/agaudreault-jive/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/agaudreault-jive/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/agaudreault-jive/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/agaudreault-jive"
  }
}