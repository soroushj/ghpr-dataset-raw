{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Describe the bug**\r\nJaeger Opentelemetry Ingester cannot correctly handle `kafka.consumer.encoding` when its value is `zipkin-thrift`. Also, the flag not accept the `otlp-proto` as value even Ingester's Kafka implementation is from OTel.\r\n\r\n**To Reproduce**\r\n1. Check helper\r\n```bash\r\n$ opentelemetry-ingester -h\r\n\r\n...\r\n--kafka.consumer.encoding string                     The encoding of spans (\"json\", \"protobuf\", \"zipkin-thrift\") consumed from kafka (default \"protobuf\")\r\n...\r\n```\r\n\r\n2. Use `zipkin-thrift` as encoding value\r\n\r\n```bash\r\n$ opentelemetry-ingester --kafka.consumer.encoding zipkin-thrift\r\n2020-10-20T14:04:31.624+0800\tINFO\tservice/service.go:396\tStarting Jaeger OpenTelemetry Ingester...\t{\"Version\": \"v1.20.0\", \"GitHash\": \"bd59f13478cdd35b41e85f67a6f04b6cb4d92df8\", \"NumCPU\": 4}\r\n2020-10-20T14:04:31.625+0800\tINFO\tservice/service.go:240\tSetting up own telemetry...\r\n2020-10-20T14:04:31.629+0800\tINFO\tservice/telemetry.go:110\tServing Prometheus metrics\t{\"address\": \"localhost:8888\", \"legacy_metrics\": false, \"new_metrics\": true, \"level\": 0, \"service.instance.id\": \"28b6a4ce-d467-4a53-8941-06840458019e\"}\r\npanic: zipkin-thrift is not a supported kafka encoding in the OTEL collector.\r\n\r\ngoroutine 1 [running]:\r\ngithub.com/jaegertracing/jaeger/cmd/opentelemetry/app/receiver/kafkareceiver.MustOtelEncodingForJaegerEncoding(...)\r\n\tgithub.com/jaegertracing/jaeger/cmd/opentelemetry/app/receiver/kafkareceiver/kafka_receiver.go:158\r\ngithub.com/jaegertracing/jaeger/cmd/opentelemetry/app/receiver/kafkareceiver.(*Factory).CreateDefaultConfig(0xc000488140, 0x46774a0, 0xc0008ee4b0)\r\n\tgithub.com/jaegertracing/jaeger/cmd/opentelemetry/app/receiver/kafkareceiver/kafka_receiver.go:62 +0x7e8\r\ngo.opentelemetry.io/collector/config/configcheck.ValidateConfigFromFactories(0xc0003de840, 0xc0003de900, 0xc0003de8d0, 0xc0003de7e0, 0x0, 0xc000407560)\r\n\tgo.opentelemetry.io/collector@v0.12.0/config/configcheck/configcheck.go:41 +0xe2\r\ngo.opentelemetry.io/collector/service.(*Application).setupConfigurationComponents(0xc000846000, 0x468dba0, 0xc0000560c8, 0xc000409610, 0x0, 0x3)\r\n\tgo.opentelemetry.io/collector@v0.12.0/service/service.go:273 +0x5a\r\ngo.opentelemetry.io/collector/service.(*Application).execute(0xc000846000, 0x468dba0, 0xc0000560c8, 0xc000409610, 0x0, 0x0)\r\n\tgo.opentelemetry.io/collector@v0.12.0/service/service.go:414 +0x4e5\r\ngo.opentelemetry.io/collector/service.New.func1(0xc00004e580, 0xc000489780, 0x0, 0x2, 0x0, 0x0)\r\n\tgo.opentelemetry.io/collector@v0.12.0/service/service.go:154 +0xa5\r\ngithub.com/spf13/cobra.(*Command).execute(0xc00004e580, 0xc00004c1c0, 0x2, 0x2, 0xc00004e580, 0xc00004c1c0)\r\n\tgithub.com/spf13/cobra@v1.0.0/command.go:842 +0x47c\r\ngithub.com/spf13/cobra.(*Command).ExecuteC(0xc00004e580, 0x0, 0x0, 0x3)\r\n\tgithub.com/spf13/cobra@v1.0.0/command.go:950 +0x375\r\ngithub.com/spf13/cobra.(*Command).Execute(...)\r\n\tgithub.com/spf13/cobra@v1.0.0/command.go:887\r\ngo.opentelemetry.io/collector/service.(*Application).Run(...)\r\n\tgo.opentelemetry.io/collector@v0.12.0/service/service.go:467\r\nmain.main()\r\n\tcommand-line-arguments/main.go:97 +0x8af\r\n```\r\n\r\n**Expected behavior**\r\nAccept `zipkin-thrift` or `otlp-proto`as its value since these values (nearly) work in the config file.\r\n\r\n**Version (please complete the following information):**\r\n - OS: macOS 10.15.6\r\n - Jaeger version: 3d998711700382c6729b83fa66f8b20a3aae5116 (master)\r\n",
  "closed_at": "2020-10-24T19:03:14Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/3523016?v=4",
    "events_url": "https://api.github.com/users/yurishkuro/events{/privacy}",
    "followers_url": "https://api.github.com/users/yurishkuro/followers",
    "following_url": "https://api.github.com/users/yurishkuro/following{/other_user}",
    "gists_url": "https://api.github.com/users/yurishkuro/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yurishkuro",
    "id": 3523016,
    "login": "yurishkuro",
    "node_id": "MDQ6VXNlcjM1MjMwMTY=",
    "organizations_url": "https://api.github.com/users/yurishkuro/orgs",
    "received_events_url": "https://api.github.com/users/yurishkuro/received_events",
    "repos_url": "https://api.github.com/users/yurishkuro/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yurishkuro/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yurishkuro"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2579/comments",
  "created_at": "2020-10-20T06:09:28Z",
  "events_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2579/events",
  "html_url": "https://github.com/jaegertracing/jaeger/issues/2579",
  "id": 725237385,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 358839838,
      "name": "bug",
      "node_id": "MDU6TGFiZWwzNTg4Mzk4Mzg=",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/bug"
    },
    {
      "color": "ededed",
      "default": false,
      "description": null,
      "id": 1740680315,
      "name": "needs-triage",
      "node_id": "MDU6TGFiZWwxNzQwNjgwMzE1",
      "url": "https://api.github.com/repos/jaegertracing/jaeger/labels/needs-triage"
    }
  ],
  "labels_url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2579/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU3MjUyMzczODU=",
  "number": 2579,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/jaegertracing/jaeger",
  "state": "closed",
  "title": "Jaeger Opentelemetry Ingester cannot correctly handle `kafka.consumer.encoding` flag",
  "updated_at": "2020-10-24T19:03:14Z",
  "url": "https://api.github.com/repos/jaegertracing/jaeger/issues/2579",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/11306772?v=4",
    "events_url": "https://api.github.com/users/XSAM/events{/privacy}",
    "followers_url": "https://api.github.com/users/XSAM/followers",
    "following_url": "https://api.github.com/users/XSAM/following{/other_user}",
    "gists_url": "https://api.github.com/users/XSAM/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/XSAM",
    "id": 11306772,
    "login": "XSAM",
    "node_id": "MDQ6VXNlcjExMzA2Nzcy",
    "organizations_url": "https://api.github.com/users/XSAM/orgs",
    "received_events_url": "https://api.github.com/users/XSAM/received_events",
    "repos_url": "https://api.github.com/users/XSAM/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/XSAM/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/XSAM/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/XSAM"
  }
}