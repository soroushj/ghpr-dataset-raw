{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- **Are you in the right place?**\r\n1. For issues or feature requests, please create an issue in this repository.\r\n2. For general technical and non-technical questions, we are happy to help you on our [Rook.io Slack](https://slack.rook.io/).\r\n3. Did you already search the existing open issues for anything similar? -->\r\n\r\n**Is this a bug report or feature request?**\r\n* Feature Request\r\n\r\n**What should the feature do:**\r\n\r\nIt would be a must have to be able to set (optionally) on the CephCluster CRD two fields:\r\n- public_network\r\n- cluster_network\r\n\r\nThose two configs fields would represent the same one as public network and cluster network in the ceph config global section (that is to say network adresses in the CIDR notation).\r\n\r\nRook could thanks to that try to discover the interface ip addresses to use for each OSD, checking the ip is contained in one of those CIDRs.\r\n\r\nToday I am doing something like this using rook-config-override configmap and running an ansible pass outside rook logic.\r\n\r\nGenerated config looks like:\r\n\r\n```\r\nkubectl get cm rook-config-override -n rook-ceph -o yaml\r\napiVersion: v1\r\ndata:\r\n  config: |\r\n    [global]\r\n    public network = 10.205.0.0/16\r\n    cluster network = 10.206.0.0/16\r\n    [osd.1]\r\n    cluster addr = 10.206.0.1\r\n    public ip = 10.205.0.1\r\n    [osd.2]\r\n    cluster addr = 10.206.0.1\r\n    public ip = 10.205.0.1\r\n    [osd.3]\r\n    cluster addr = 10.206.0.1\r\n    public ip = 10.205.0.1\r\n```\r\n\r\nThe ansible playbook fragment I am currently using to do this looks like the following one:\r\n\r\n```\r\n- name: Ceph tasks\r\n  hosts: \"{{ groups['kube-master'][0] }}\"\r\n  become: true\r\n  tasks:\r\n    - name: Get nodes OSDs\r\n      shell: \"kubectl get pods -n rook-ceph --field-selector spec.nodeName={{ item.1 }} -l app=rook-ceph-osd -o=jsonpath='{range .items[*]}{\\\"[osd.\\\"}{.metadata.labels.ceph-osd-id}{\\\"]\\\\ncluster addr = {{ hostvars[item.1].netplan_configuration.network.ethernets.eno50.addresses[0] | ipaddr('address') }}\\\\npublic ip = {{ hostvars[item.1].ansible_host }}\\\\n\\\"}{end}'\"\r\n      changed_when: False\r\n      register: nodes_osds\r\n      with_indexed_items: \"{{ groups['all'] }}\"\r\n    - k8s_raw:\r\n        state: present\r\n        resource_definition: |\r\n          apiVersion: v1\r\n          kind: ConfigMap\r\n          metadata:\r\n            name: rook-config-override\r\n            namespace: \"{{ item }}\"\r\n          data:\r\n            config: |\r\n              [global]\r\n              public network = {{ ceph_public_network }}\r\n              cluster network = {{ ceph_cluster_network }}\r\n          {{ nodes_osds.results | map(attribute='stdout') | map('regex_replace', '(.*)', '    \\1') | join('\\n') | regex_replace('\\\\n', \"\\n\") }}\r\n        kubeconfig: /etc/kubernetes/admin.conf\r\n        verify_ssl: no\r\n      with_items:\r\n        - \"rook-ceph\"\r\n```\r\n\r\n**What is use case behind this feature:**\r\n\r\nIt is a good practice with ceph to use two distinct networks, one for ceph client exchanges with the OSDs, another one for data sync between OSDs.\r\n\r\n**Environment**:\r\n<!-- Specific environment information that helps with the feature request -->\r\n",
  "closed_at": "2020-04-03T17:14:09Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1048514?v=4",
    "events_url": "https://api.github.com/users/travisn/events{/privacy}",
    "followers_url": "https://api.github.com/users/travisn/followers",
    "following_url": "https://api.github.com/users/travisn/following{/other_user}",
    "gists_url": "https://api.github.com/users/travisn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/travisn",
    "id": 1048514,
    "login": "travisn",
    "node_id": "MDQ6VXNlcjEwNDg1MTQ=",
    "organizations_url": "https://api.github.com/users/travisn/orgs",
    "received_events_url": "https://api.github.com/users/travisn/received_events",
    "repos_url": "https://api.github.com/users/travisn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/travisn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/travisn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/travisn"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/rook/rook/issues/4716/comments",
  "created_at": "2020-01-17T11:03:15Z",
  "events_url": "https://api.github.com/repos/rook/rook/issues/4716/events",
  "html_url": "https://github.com/rook/rook/issues/4716",
  "id": 551350237,
  "labels": [
    {
      "color": "84b6eb",
      "default": false,
      "description": "",
      "id": 405241117,
      "name": "feature",
      "node_id": "MDU6TGFiZWw0MDUyNDExMTc=",
      "url": "https://api.github.com/repos/rook/rook/labels/feature"
    }
  ],
  "labels_url": "https://api.github.com/repos/rook/rook/issues/4716/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NTEzNTAyMzc=",
  "number": 4716,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/rook/rook",
  "state": "closed",
  "title": "Config generation of discovered ips for each OSD satisfying IP CIDR",
  "updated_at": "2020-04-03T17:14:09Z",
  "url": "https://api.github.com/repos/rook/rook/issues/4716",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/11333624?v=4",
    "events_url": "https://api.github.com/users/hightoxicity/events{/privacy}",
    "followers_url": "https://api.github.com/users/hightoxicity/followers",
    "following_url": "https://api.github.com/users/hightoxicity/following{/other_user}",
    "gists_url": "https://api.github.com/users/hightoxicity/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hightoxicity",
    "id": 11333624,
    "login": "hightoxicity",
    "node_id": "MDQ6VXNlcjExMzMzNjI0",
    "organizations_url": "https://api.github.com/users/hightoxicity/orgs",
    "received_events_url": "https://api.github.com/users/hightoxicity/received_events",
    "repos_url": "https://api.github.com/users/hightoxicity/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hightoxicity/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hightoxicity/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hightoxicity"
  }
}