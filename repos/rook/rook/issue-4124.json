{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/9363998?v=4",
    "events_url": "https://api.github.com/users/sp98/events{/privacy}",
    "followers_url": "https://api.github.com/users/sp98/followers",
    "following_url": "https://api.github.com/users/sp98/following{/other_user}",
    "gists_url": "https://api.github.com/users/sp98/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sp98",
    "id": 9363998,
    "login": "sp98",
    "node_id": "MDQ6VXNlcjkzNjM5OTg=",
    "organizations_url": "https://api.github.com/users/sp98/orgs",
    "received_events_url": "https://api.github.com/users/sp98/received_events",
    "repos_url": "https://api.github.com/users/sp98/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sp98/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sp98/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sp98"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/9363998?v=4",
      "events_url": "https://api.github.com/users/sp98/events{/privacy}",
      "followers_url": "https://api.github.com/users/sp98/followers",
      "following_url": "https://api.github.com/users/sp98/following{/other_user}",
      "gists_url": "https://api.github.com/users/sp98/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sp98",
      "id": 9363998,
      "login": "sp98",
      "node_id": "MDQ6VXNlcjkzNjM5OTg=",
      "organizations_url": "https://api.github.com/users/sp98/orgs",
      "received_events_url": "https://api.github.com/users/sp98/received_events",
      "repos_url": "https://api.github.com/users/sp98/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sp98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sp98/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sp98"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- **Are you in the right place?**\r\n1. For issues or feature requests, please create an issue in this repository.\r\n2. For general technical and non-technical questions, we are happy to help you on our [Rook.io Slack](https://slack.rook.io/).\r\n3. Did you already search the existing open issues for anything similar? -->\r\n\r\n**Is this a bug report or feature request?**\r\n* Bug Report\r\n\r\n**Deviation from expected behavior:**\r\n- Orchestration of OSD on PVC restarts even after successful completion. It runs twice.\r\n\r\n**Expected behavior:**\r\n- Orchestration should run only once if its completed successfully. \r\n\r\n**How to reproduce it (minimal and precise):**\r\n<!-- Please let us know any circumstances for reproduction of your bug. -->\r\nStart Rook ceph cluster by\r\n1. Kubectl apply -f common.yaml.\r\n2. Kubectl apply -f operator.yaml.\r\n3. Kubectl apply -f cluster-on-pvc.yaml.\r\nObserve the orchestration restarts after successfully running OSD on PVC.\r\n\r\nlogs: \r\n```\r\n2019-10-17 07:42:14.100516 I | op-osd: starting 1 osd daemons on pvc set1-2-data-rn9db\r\n2019-10-17 07:42:14.190777 I | exec: Running command: ceph auth get-or-create-key osd.1 osd allow * mon allow profile osd --connect-timeout=15 --cluster=rook-ceph --conf=/var/lib/rook/rook-ceph/rook-ceph.config --keyring=/var/lib/rook/rook-ceph/client.admin.keyring --format json --out-file /tmp/467844062\r\n2019-10-17 07:42:14.997108 I | op-osd: started deployment for osd 1 (dir=false, type=)\r\n2019-10-17 07:42:23.009271 I | op-osd: osd orchestration status for node set1-0-data-cnj8s is completed\r\n2019-10-17 07:42:23.009305 I | op-osd: starting 1 osd daemons on pvc set1-0-data-cnj8s\r\n2019-10-17 07:42:23.031096 I | exec: Running command: ceph auth get-or-create-key osd.2 osd allow * mon allow profile osd --connect-timeout=15 --cluster=rook-ceph --conf=/var/lib/rook/rook-ceph/rook-ceph.config --keyring=/var/lib/rook/rook-ceph/client.admin.keyring --format json --out-file /tmp/450897829\r\n2019-10-17 07:42:23.765721 I | op-osd: started deployment for osd 2 (dir=false, type=)\r\n2019-10-17 07:42:23.779066 I | op-osd: 3/3 node(s) completed osd provisioning\r\n2019-10-17 07:42:23.779132 I | op-osd: start provisioning the osds on nodes, if needed\r\n2019-10-17 07:42:23.786378 I | op-osd: 0 of the 0 storage nodes are valid\r\n2019-10-17 07:42:23.786409 W | op-osd: no valid nodes available to run an osd in namespace rook-ceph. Rook will not create any new OSD nodes and will skip checking for removed nodes since removing all OSD nodes without destroying the Rook cluster is unlikely to be intentional\r\n2019-10-17 07:42:23.786530 I | exec: Running command: ceph versions --connect-timeout=15 --cluster=rook-ceph --conf=/var/lib/rook/rook-ceph/rook-ceph.config --keyring=/var/lib/rook/rook-ceph/client.admin.keyring --format json --out-file /tmp/907146944\r\n2019-10-17 07:42:24.292159 I | op-osd: completed running osds in namespace rook-ceph\r\n2019-10-17 07:42:24.292200 I | rbd-mirror: configure rbd-mirroring with 0 workers\r\n2019-10-17 07:42:24.297964 I | rbd-mirror: no extra daemons to remove\r\n2019-10-17 07:42:24.297987 I | op-cluster: Done creating rook instance in namespace rook-ceph\r\n2019-10-17 07:42:24.307844 I | op-mon: start running mons\r\n2019-10-17 07:42:24.320572 I | op-mon: created csi secret for cluster rook-ceph\r\n2019-10-17 07:42:24.324941 I | op-mon: parsing mon endpoints: a=172.30.0.63:6789,b=172.30.251.7:6789,c=172.30.2.104:6789\r\n2019-10-17 07:42:24.325023 I | op-mon: loaded: maxMonID=2, mons=map[a:0xc0008ba6a0 b:0xc0008ba740 c:0xc0008ba780], mapping=&{Node:map[a:<nil> b:<nil> c:<nil>]}\r\n2019-10-17 07:42:24.338938 I | op-mon: saved mon endpoints to config map map[csi-cluster-config-json:[{\"clusterID\":\"rook-ceph\",\"monitors\":[\"172.30.0.63:6789\",\"172.30.251.7:6789\",\"172.30.2.104:6789\"]}] data:a=172.30.0.63:6789,b=172.30.251.7:6789,c=172.30.2.104:6789 mapping:{\"node\":{\"a\":null,\"b\":null,\"c\":null}} maxMonId:2]\r\n2019-10-17 07:42:24.348270 I | cephconfig: writing config file /var/lib/rook/rook-ceph/rook-ceph.config\r\n2019-10-17 07:42:24.348468 I | cephconfig: generated admin config in /var/lib/rook/rook-ceph\r\n2019-10-17 07:42:26.111742 I | op-mon: targeting the mon count 3\r\n2019-10-17 07:42:26.111993 I | exec: Running command: ceph config set global mon_allow_pool_delete true --connect-timeout=15 --cluster=rook-ceph --conf=/var/lib/rook/rook-ceph/rook-ceph.config --keyring=/var/lib/rook/rook-ceph/client.admin.keyring --format json --out-file /tmp/013512991\r\n```\r\n**File(s) to submit**:\r\n\r\n* Cluster CR (custom resource), typically called `cluster.yaml`, if necessary\r\n* Operator's logs, if necessary\r\n* Crashing pod(s) logs, if necessary\r\n\r\n To get logs, use `kubectl -n <namespace> logs <pod name>`\r\nWhen pasting logs, always surround them with backticks or use the `insert code` button from the Github UI.\r\nRead [Github documentation if you need help](https://help.github.com/en/articles/creating-and-highlighting-code-blocks).\r\n\r\n**Environment**:\r\n* OS (e.g. from /etc/os-release):\r\n* Kernel (e.g. `uname -a`):\r\n* Cloud provider or hardware configuration:\r\n* Rook version (use `rook version` inside of a Rook Pod):\r\n* Storage backend version (e.g. for ceph do `ceph -v`):\r\n* Kubernetes version (use `kubectl version`):\r\n* Kubernetes cluster type (e.g. Tectonic, GKE, OpenShift):\r\n* Storage backend status (e.g. for Ceph use `ceph health` in the [Rook Ceph toolbox](https://rook.io/docs/rook/master/ceph-toolbox.html)):\r\n",
  "closed_at": "2019-10-30T19:11:28Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1048514?v=4",
    "events_url": "https://api.github.com/users/travisn/events{/privacy}",
    "followers_url": "https://api.github.com/users/travisn/followers",
    "following_url": "https://api.github.com/users/travisn/following{/other_user}",
    "gists_url": "https://api.github.com/users/travisn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/travisn",
    "id": 1048514,
    "login": "travisn",
    "node_id": "MDQ6VXNlcjEwNDg1MTQ=",
    "organizations_url": "https://api.github.com/users/travisn/orgs",
    "received_events_url": "https://api.github.com/users/travisn/received_events",
    "repos_url": "https://api.github.com/users/travisn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/travisn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/travisn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/travisn"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/rook/rook/issues/4124/comments",
  "created_at": "2019-10-17T09:52:18Z",
  "events_url": "https://api.github.com/repos/rook/rook/issues/4124/events",
  "html_url": "https://github.com/rook/rook/issues/4124",
  "id": 508363784,
  "labels": [
    {
      "color": "ee0000",
      "default": true,
      "description": "",
      "id": 405241115,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MDUyNDExMTU=",
      "url": "https://api.github.com/repos/rook/rook/labels/bug"
    },
    {
      "color": "ef5c55",
      "default": false,
      "description": "main ceph tag",
      "id": 479456042,
      "name": "ceph",
      "node_id": "MDU6TGFiZWw0Nzk0NTYwNDI=",
      "url": "https://api.github.com/repos/rook/rook/labels/ceph"
    }
  ],
  "labels_url": "https://api.github.com/repos/rook/rook/issues/4124/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MDgzNjM3ODQ=",
  "number": 4124,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/rook/rook",
  "state": "closed",
  "title": "[OSD on PVC] orchestration restarts on device config map update. ",
  "updated_at": "2019-10-30T19:11:28Z",
  "url": "https://api.github.com/repos/rook/rook/issues/4124",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/9363998?v=4",
    "events_url": "https://api.github.com/users/sp98/events{/privacy}",
    "followers_url": "https://api.github.com/users/sp98/followers",
    "following_url": "https://api.github.com/users/sp98/following{/other_user}",
    "gists_url": "https://api.github.com/users/sp98/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sp98",
    "id": 9363998,
    "login": "sp98",
    "node_id": "MDQ6VXNlcjkzNjM5OTg=",
    "organizations_url": "https://api.github.com/users/sp98/orgs",
    "received_events_url": "https://api.github.com/users/sp98/received_events",
    "repos_url": "https://api.github.com/users/sp98/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sp98/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sp98/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sp98"
  }
}