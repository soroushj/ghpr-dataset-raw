{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- **Are you in the right place?**\r\n1. For issues or feature requests, please create an issue in this repository.\r\n2. For general technical and non-technical questions, we are happy to help you on our [Rook.io Slack](https://slack.rook.io/).\r\n3. Did you already search the existing open issues for anything similar? -->\r\n\r\n**Is this a bug report or feature request?**\r\n* Bug Report\r\n\r\n**Deviation from expected behavior:**\r\nAfter defining the annotation in cluster.yaml, the annotations are not propagated to the pods.\r\n**Expected behavior:**\r\nAnnotations should propagate to the pods\r\n**How to reproduce it (minimal and precise):**\r\n<!-- Please let us know any circumstances for reproduction of your bug. -->\r\n\r\n**File(s) to submit**:\r\n\r\n* Cluster CR (custom resource), typically called `cluster.yaml`, if necessary \r\n[cluster.txt](https://github.com/rook/rook/files/4389698/cluster.txt)\r\n```\r\n# Source: cassandra-cluster/templates/cluster.yaml\r\napiVersion: cassandra.rook.io/v1alpha1\r\nkind: Cluster\r\nmetadata:\r\n  name: rook-cassandra\r\n  namespace: \"2269-cassandra\"\r\n  labels: \r\n    app.kubernetes.io/name: cassandra-cluster\r\n    helm.sh/chart: cassandra-cluster-0.1.0\r\n    app.kubernetes.io/instance: cassandra-cluster\r\n    app.kubernetes.io/version: \"1.0\"\r\n    app.kubernetes.io/managed-by: Tiller\r\n    app.kubernetes.io/component: rook-cassandra-member\r\nspec:\r\n  version: 3.11.6\r\n  mode: cassandra\r\n  repository: cassandra\r\n  annotations:\r\n    sidecar.istio.io/inject: \"false\"\r\n  datacenter:\r\n    name: local\r\n    racks:\r\n        - name: local-0\r\n          members: 1\r\n          jmxExporterConfigMapName: cassandra-jmx-exporter\r\n          storage:\r\n            volumeClaimTemplates:\r\n              - metadata:\r\n                  name: local-0-data\r\n                spec:\r\n                  accessModes: [ \"ReadWriteOnce\" ]\r\n                  storageClassName: \r\n                  resources:\r\n                    requests:\r\n                      storage: 1Gi\r\n          resources:\r\n            limits:\r\n              cpu: 800m\r\n              memory: 800Mi\r\n            requests:\r\n              cpu: 800m\r\n              memory: 800Mi\r\n          annotations:\r\n            sidecar.istio.io/inject: \"false\"\r\n          placement:\r\n        - name: local-1\r\n          members: 1\r\n          jmxExporterConfigMapName: cassandra-jmx-exporter\r\n          storage:\r\n            volumeClaimTemplates:\r\n              - metadata:\r\n                  name: local-1-data\r\n                spec:\r\n                  accessModes: [ \"ReadWriteOnce\" ]\r\n                  storageClassName: \r\n                  resources:\r\n                    requests:\r\n                      storage: 1Gi\r\n          resources:\r\n            limits:\r\n              cpu: 800m\r\n              memory: 800Mi\r\n            requests:\r\n              cpu: 800m\r\n              memory: 800Mi\r\n          annotations:\r\n            sidecar.istio.io/inject: \"false\"\r\n          placement:\r\n```\r\n* Operator's logs, if necessary \r\n[cassandra-operator.log](https://github.com/rook/rook/files/4389703/cassandra-operator.log)\r\n\r\n``` 2020-03-26 19:51:26.238197 I | cassandra-controller: handling cluster object: (*v1alpha1.Cluster)(0xc000afc000)({\r\n TypeMeta: (v1.TypeMeta) &TypeMeta{Kind:,APIVersion:,},\r\n ObjectMeta: (v1.ObjectMeta) &ObjectMeta{Name:rook-cassandra,GenerateName:,Namespace:2269-cassandra,SelfLink:/apis/cassandra.rook.io/v1alpha1/namespaces/2269-cassandra/clusters/rook-cassandra,UID:8d14e9f4-f5bf-4762-b750-4758bd2d7743,ResourceVersion:334777,Generation:7,CreationTimestamp:2020-03-26 19:50:01 +0000 UTC,DeletionTimestamp:<nil>,DeletionGracePeriodSeconds:nil,Labels:map[string]string{app.kubernetes.io/component: rook-cassandra-member,app.kubernetes.io/instance: cassandra-cluster,app.kubernetes.io/managed-by: Tiller,app.kubernetes.io/name: cassandra-cluster,app.kubernetes.io/version: 1.0,helm.sh/chart: cassandra-cluster-0.1.0,},Annotations:map[string]string{kubectl.kubernetes.io/last-applied-configuration: {\"apiVersion\":\"cassandra.rook.io/v1alpha1\",\"kind\":\"Cluster\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.kubernetes.io/component\":\"rook-cassandra-member\",\"app.kubernetes.io/instance\":\"cassandra-cluster\",\"app.kubernetes.io/managed-by\":\"Tiller\",\"app.kubernetes.io/name\":\"cassandra-cluster\",\"app.kubernetes.io/version\":\"1.0\",\"helm.sh/chart\":\"cassandra-cluster-0.1.0\"},\"name\":\"rook-cassandra\",\"namespace\":\"2269-cassandra\"},\"spec\":{\"annotations\":{\"sidecar.istio.io/inject\":\"false\"},\"datacenter\":{\"name\":\"local\",\"racks\":[{\"annotations\":{\"sidecar.istio.io/inject\":\"false\"},\"jmxExporterConfigMapName\":\"cassandra-jmx-exporter\",\"members\":1,\"name\":\"local-0\",\"placement\":null,\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"800Mi\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"800Mi\"}},\"storage\":{\"volumeClaimTemplates\":[{\"metadata\":{\"name\":\"local-0-data\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":null}}]}},{\"annotations\":{\"sidecar.istio.io/inject\":\"false\"},\"jmxExporterConfigMapName\":\"cassandra-jmx-exporter\",\"members\":1,\"name\":\"local-1\",\"placement\":null,\"resources\":{\"limits\":{\"cpu\":\"800m\",\"memory\":\"800Mi\"},\"requests\":{\"cpu\":\"800m\",\"memory\":\"800Mi\"}},\"storage\":{\"volumeClaimTemplates\":[{\"metadata\":{\"name\":\"local-1-data\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":null}}]}}]},\"mode\":\"cassandra\",\"repository\":\"cassandra\",\"version\":\"3.11.6\"}}\r\n,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,ManagedFields:[],},\r\n Spec: (v1alpha1.ClusterSpec) {\r\n  Annotations: (v1alpha2.Annotations) <nil>,\r\n  Version: (string) (len=6) \"3.11.6\",\r\n  Repository: (*string)(0xc000b07be0)((len=9) \"cassandra\"),\r\n  Mode: (v1alpha1.ClusterMode) (len=9) \"cassandra\",\r\n  Datacenter: (v1alpha1.DatacenterSpec) {\r\n   Name: (string) (len=5) \"local\",\r\n   Racks: ([]v1alpha1.RackSpec) (len=2 cap=2) {\r\n    (v1alpha1.RackSpec) {\r\n     Name: (string) (len=7) \"local-0\",\r\n     Members: (int32) 1,\r\n     ConfigMapName: (*string)(<nil>),\r\n     Storage: (v1alpha2.StorageScopeSpec) {\r\n      Nodes: ([]v1alpha2.Node) <nil>,\r\n      UseAllNodes: (bool) false,\r\n      NodeCount: (int) 0,\r\n      Config: (map[string]string) <nil>,\r\n      Selection: (v1alpha2.Selection) {\r\n       UseAllDevices: (*bool)(<nil>),\r\n       DeviceFilter: (string) \"\",\r\n       DevicePathFilter: (string) \"\",\r\n       Devices: ([]v1alpha2.Device) <nil>,\r\n       Directories: ([]v1alpha2.Directory) <nil>,\r\n       VolumeClaimTemplates: ([]v1.PersistentVolumeClaim) (len=1 cap=1) {\r\n        (v1.PersistentVolumeClaim) &PersistentVolumeClaim{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:local-0-data,GenerateName:,Namespace:,SelfLink:,UID:,ResourceVersion:,Generation:0,CreationTimestamp:0001-01-01 00:00:00 +0000 UTC,DeletionTimestamp:<nil>,DeletionGracePeriodSeconds:nil,Labels:map[string]string{},Annotations:map[string]string{},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,ManagedFields:[],},Spec:PersistentVolumeClaimSpec{AccessModes:[ReadWriteOnce],Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{storage: {{1073741824 0} {<nil>} 1Gi BinarySI},},},VolumeName:,Selector:nil,StorageClassName:nil,VolumeMode:nil,DataSource:nil,},Status:PersistentVolumeClaimStatus{Phase:,AccessModes:[],Capacity:ResourceList{},Conditions:[],},}\r\n       }\r\n      },\r\n      VolumeSources: ([]v1alpha2.VolumeSource) <nil>,\r\n      StorageClassDeviceSets: ([]v1alpha2.StorageClassDeviceSet) <nil>\r\n     },\r\n     Annotations: (v1alpha2.Annotations) <nil>,\r\n     Placement: (*v1alpha2.Placement)(<nil>),\r\n     Resources: (v1.ResourceRequirements) &ResourceRequirements{Limits:ResourceList{cpu: {{800 -3} {<nil>} 800m DecimalSI},memory: {{838860800 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{800 -3} {<nil>} 800m DecimalSI},memory: {{838860800 0} {<nil>}  BinarySI},},}\r\n    },\r\n    (v1alpha1.RackSpec) {\r\n     Name: (string) (len=7) \"local-1\",\r\n     Members: (int32) 1,\r\n     ConfigMapName: (*string)(<nil>),\r\n     Storage: (v1alpha2.StorageScopeSpec) {\r\n      Nodes: ([]v1alpha2.Node) <nil>,\r\n      UseAllNodes: (bool) false,\r\n      NodeCount: (int) 0,\r\n      Config: (map[string]string) <nil>,\r\n      Selection: (v1alpha2.Selection) {\r\n       UseAllDevices: (*bool)(<nil>),\r\n       DeviceFilter: (string) \"\",\r\n       DevicePathFilter: (string) \"\",\r\n       Devices: ([]v1alpha2.Device) <nil>,\r\n       Directories: ([]v1alpha2.Directory) <nil>,\r\n       VolumeClaimTemplates: ([]v1.PersistentVolumeClaim) (len=1 cap=1) {\r\n        (v1.PersistentVolumeClaim) &PersistentVolumeClaim{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:local-1-data,GenerateName:,Namespace:,SelfLink:,UID:,ResourceVersion:,Generation:0,CreationTimestamp:0001-01-01 00:00:00 +0000 UTC,DeletionTimestamp:<nil>,DeletionGracePeriodSeconds:nil,Labels:map[string]string{},Annotations:map[string]string{},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,ManagedFields:[],},Spec:PersistentVolumeClaimSpec{AccessModes:[ReadWriteOnce],Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{storage: {{1073741824 0} {<nil>} 1Gi BinarySI},},},VolumeName:,Selector:nil,StorageClassName:nil,VolumeMode:nil,DataSource:nil,},Status:PersistentVolumeClaimStatus{Phase:,AccessModes:[],Capacity:ResourceList{},Conditions:[],},}\r\n       }\r\n      },\r\n      VolumeSources: ([]v1alpha2.VolumeSource) <nil>,\r\n      StorageClassDeviceSets: ([]v1alpha2.StorageClassDeviceSet) <nil>\r\n     },\r\n     Annotations: (v1alpha2.Annotations) <nil>,\r\n     Placement: (*v1alpha2.Placement)(<nil>),\r\n     Resources: (v1.ResourceRequirements) &ResourceRequirements{Limits:ResourceList{cpu: {{800 -3} {<nil>} 800m DecimalSI},memory: {{838860800 0} {<nil>}  BinarySI},},Requests:ResourceList{cpu: {{800 -3} {<nil>} 800m DecimalSI},memory: {{838860800 0} {<nil>}  BinarySI},},}\r\n    }\r\n   }\r\n  },\r\n  SidecarImage: (*v1alpha1.ImageSpec)(<nil>)\r\n },\r\n Status: (v1alpha1.ClusterStatus) {\r\n  Racks: (map[string]*v1alpha1.RackStatus) (len=2) {\r\n   (string) (len=7) \"local-0\": (*v1alpha1.RackStatus)(0xc0009ec840)({\r\n    Members: (int32) 1,\r\n    ReadyMembers: (int32) 1,\r\n    Conditions: ([]v1alpha1.RackCondition) <nil>\r\n   }),\r\n   (string) (len=7) \"local-1\": (*v1alpha1.RackStatus)(0xc0009ec860)({\r\n    Members: (int32) 1,\r\n    ReadyMembers: (int32) 0,\r\n    Conditions: ([]v1alpha1.RackCondition) <nil>\r\n   })\r\n  }\r\n }\r\n})\r\n2020-03-26 19:51:26.239402 I | cassandra-controller: 2269-cassandra/rook-cassandra - Successfully cleaned up cluster.\r\n2020-03-26 19:51:26.239712 I | cassandra-controller: Syncing ClusterHeadlessService `rook-cassandra-client` for Cluster `rook-cassandra`\r\n2020-03-26 19:51:26.239767 I | cassandra-controller: Syncing MemberServices for Cluster `rook-cassandra`\r\n2020-03-26 19:51:26.240412 I | cassandra-controller: Updating Status for cluster rook-cassandra in namespace 2269-cassandra\r\n2020-03-26 19:51:26.283813 I | cassandra-controller: Successfully synced '2269-cassandra/rook-cassandra'\r\n```\r\n**Environment**:\r\n* OS (e.g. from /etc/os-release): macOS Catalina 10.15.4\r\n* Kernel (e.g. `uname -a`): Darwin 19.4.0\r\n* Cloud provider or hardware configuration: docker for mac\r\n* Rook version (use `rook version` inside of a Rook Pod): 1.2.6\r\n* Storage backend version (e.g. for ceph do `ceph -v`): Cassandra 3.11.6\r\n* Kubernetes version (use `kubectl version`): 1.15.5\r\n* Kubernetes cluster type (e.g. Tectonic, GKE, OpenShift): docker for mac\r\n* Storage backend status (e.g. for Ceph use `ceph health` in the [Rook Ceph toolbox](https://rook.io/docs/rook/master/ceph-toolbox.html)):\r\n",
  "closed_at": "2020-05-26T21:34:25Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1048514?v=4",
    "events_url": "https://api.github.com/users/travisn/events{/privacy}",
    "followers_url": "https://api.github.com/users/travisn/followers",
    "following_url": "https://api.github.com/users/travisn/following{/other_user}",
    "gists_url": "https://api.github.com/users/travisn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/travisn",
    "id": 1048514,
    "login": "travisn",
    "node_id": "MDQ6VXNlcjEwNDg1MTQ=",
    "organizations_url": "https://api.github.com/users/travisn/orgs",
    "received_events_url": "https://api.github.com/users/travisn/received_events",
    "repos_url": "https://api.github.com/users/travisn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/travisn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/travisn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/travisn"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/rook/rook/issues/5097/comments",
  "created_at": "2020-03-26T20:14:51Z",
  "events_url": "https://api.github.com/repos/rook/rook/issues/5097/events",
  "html_url": "https://github.com/rook/rook/issues/5097",
  "id": 588699031,
  "labels": [
    {
      "color": "ee0000",
      "default": true,
      "description": "",
      "id": 405241115,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MDUyNDExMTU=",
      "url": "https://api.github.com/repos/rook/rook/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/rook/rook/issues/5097/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1ODg2OTkwMzE=",
  "number": 5097,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/rook/rook",
  "state": "closed",
  "title": "[Cassandra] Annotations not being propagated to pods ",
  "updated_at": "2020-05-26T21:34:25Z",
  "url": "https://api.github.com/repos/rook/rook/issues/5097",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/61473824?v=4",
    "events_url": "https://api.github.com/users/ar-mi6/events{/privacy}",
    "followers_url": "https://api.github.com/users/ar-mi6/followers",
    "following_url": "https://api.github.com/users/ar-mi6/following{/other_user}",
    "gists_url": "https://api.github.com/users/ar-mi6/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ar-mi6",
    "id": 61473824,
    "login": "ar-mi6",
    "node_id": "MDQ6VXNlcjYxNDczODI0",
    "organizations_url": "https://api.github.com/users/ar-mi6/orgs",
    "received_events_url": "https://api.github.com/users/ar-mi6/received_events",
    "repos_url": "https://api.github.com/users/ar-mi6/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ar-mi6/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ar-mi6/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ar-mi6"
  }
}