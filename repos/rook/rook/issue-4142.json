{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- **Are you in the right place?**\r\n1. For issues or feature requests, please create an issue in this repository.\r\n2. For general technical and non-technical questions, we are happy to help you on our [Rook.io Slack](https://slack.rook.io/).\r\n3. Did you already search the existing open issues for anything similar? -->\r\n\r\n**Is this a bug report or feature request?**\r\n* Bug Report\r\n\r\n**Deviation from expected behavior:**\r\nRestarting ETCD in the k8s cluster appears to cause resources to disappear and nfs pod terminates without coming back.\r\nEverything that has been developed deploys and works. I am able to write to the NFS share thats created and everything looks good up until the point ETCD is restarted.\r\nUpon ETCD restarting the statefulset, configmap and controllerrevision resources disappear and the NFS pod goes into terminating. What is left behind is the nfsserver resource and the PV's/PVC's and storage class.\r\n\r\n**Expected behavior:**\r\nTo be able to restart the k8s components (etcd) and the NFS pod recreate itself successfully.\r\n\r\n**How to reproduce it (minimal and precise):**\r\nCreate a nfs server which is backed by local storage and restart ETCD in the cluster.\r\n\r\nThe mapping in my env is:\r\nPV <-- PVC <-- NFS <-- NFS Storage Class <-- NFS PVC\r\n\r\n**File(s) to submit**:\r\nPV.yaml\r\napiVersion: v1\r\nkind: PersistentVolume\r\nmetadata:\r\n  name: logstash-pv\r\n  namespace: rook-nfs\r\n  labels:\r\n    type: local\r\nspec:\r\n  storageClassName: local-storage\r\n  capacity:\r\n    storage: 10Gi\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  hostPath:\r\n    path: \"/mnt/disks/nfs/logstash\"\r\n  claimRef:\r\n    name: logstash-pvc\r\n\r\nPVC.yaml\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: logstash-pvc\r\n  namespace: rook-nfs\r\nspec:\r\n  storageClassName: local-storage\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n\r\nNFS.yaml\r\napiVersion: nfs.rook.io/v1alpha1\r\nkind: NFSServer\r\nmetadata:\r\n  name: logstash-nfs\r\n  namespace: rook-nfs\r\nspec:\r\n  replicas: 1\r\n  exports:\r\n  - name: logstash\r\n    server:\r\n      accessMode: ReadWrite\r\n      squash: \"none\"\r\n    persistentVolumeClaim:\r\n      claimName: logstash-pvc\r\n\r\nNFS_SC.yaml\r\napiVersion: storage.k8s.io/v1\r\nkind: StorageClass\r\nmetadata:\r\n  name: logstash-nfs-share\r\n  labels:\r\n    app: logstash-nfs\r\n    name: logstash-nfs-share\r\nparameters:\r\n  exportName: logstash\r\n  nfsServerName: logstash-nfs\r\n  nfsServerNamespace: rook-nfs\r\nprovisioner: rook.io/nfs-provisioner\r\nreclaimPolicy: Delete\r\nvolumeBindingMode: Immediate\r\n\r\nNFS_PVC.yaml\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  name: logstash-share-pvc\r\n  namespace: rook-nfs\r\nspec:\r\n  storageClassName: \"logstash-nfs-share\"\r\n  accessModes:\r\n    - ReadWriteMany\r\n  resources:\r\n    requests:\r\n      storage: 10Gi\r\n\r\n\r\nThe logs from the pod show nothing in relation to the error. The below are the events from describing the pod just before it is permanently terminated.\r\n\r\nEvents:\r\n  Type     Reason          Age              From                                    Message\r\n  ----     ------          ----             ----                                    -------\r\n  Normal   Scheduled       19m              default-scheduler                       Successfully assigned rook-nfs/logstash-nfs-0 to ip-*.ec2.internal\r\n  Normal   Pulled          19m              kubelet, ip-*.ec2.internal  Container image \"rook/nfs:master\" already present on machine\r\n  Normal   Created         19m              kubelet, ip-*.ec2.internal  Created container\r\n  Normal   Started         19m              kubelet, ip-*.ec2.internal  Started container\r\n  Normal   SandboxChanged  33s              kubelet, ip-*.ec2.internal  Pod sandbox changed, it will be killed and re-created.\r\n  Normal   Pulled          32s              kubelet, ip-*.ec2.internal  Container image \"rook/nfs:master\" already present on machine\r\n  Normal   Created         32s              kubelet, ip-*.ec2.internal  Created container\r\n  Normal   Started         32s              kubelet, ip-*.ec2.internal  Started container\r\n  Normal   Killing         5s               kubelet, ip-*.ec2.internal  Killing container with id docker://logstash-nfs:Need to kill Pod\r\n  Warning  FailedMount     1s (x3 over 4s)  kubelet, ip-*.ec2.internal  MountVolume.SetUp failed for volume \"logstash-nfs\" : configmaps \"logstash-nfs\" not found\r\n\r\n\r\n**Environment**:\r\n* OS (e.g. from /etc/os-release): Centos7\r\n* Kernel (e.g. `uname -a`):  3.10.0-957.el7.x86_64\r\n* Cloud provider or hardware configuration: AWS\r\n* Rook version (use `rook version` inside of a Rook Pod): v1.1.0-beta.0.299.g1081c58\r\n* Storage backend version (e.g. for ceph do `ceph -v`): local-storage\r\n* Kubernetes version (use `kubectl version`): 1.13.8\r\n* Kubernetes cluster type (e.g. Tectonic, GKE, OpenShift): Kubespray\r\n* Storage backend status (e.g. for Ceph use `ceph health` in the [Rook Ceph toolbox](https://rook.io/docs/rook/master/ceph-toolbox.html)): local-storage\r\n",
  "closed_at": "2019-10-25T08:21:07Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/912735?v=4",
    "events_url": "https://api.github.com/users/leseb/events{/privacy}",
    "followers_url": "https://api.github.com/users/leseb/followers",
    "following_url": "https://api.github.com/users/leseb/following{/other_user}",
    "gists_url": "https://api.github.com/users/leseb/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/leseb",
    "id": 912735,
    "login": "leseb",
    "node_id": "MDQ6VXNlcjkxMjczNQ==",
    "organizations_url": "https://api.github.com/users/leseb/orgs",
    "received_events_url": "https://api.github.com/users/leseb/received_events",
    "repos_url": "https://api.github.com/users/leseb/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/leseb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/leseb/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/leseb"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/rook/rook/issues/4142/comments",
  "created_at": "2019-10-22T09:20:03Z",
  "events_url": "https://api.github.com/repos/rook/rook/issues/4142/events",
  "html_url": "https://github.com/rook/rook/issues/4142",
  "id": 510529772,
  "labels": [
    {
      "color": "ee0000",
      "default": true,
      "description": "",
      "id": 405241115,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MDUyNDExMTU=",
      "url": "https://api.github.com/repos/rook/rook/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/rook/rook/issues/4142/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTA1Mjk3NzI=",
  "number": 4142,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/rook/rook",
  "state": "closed",
  "title": "NFS Server resources disappear following ETCD restart.",
  "updated_at": "2019-10-25T15:05:57Z",
  "url": "https://api.github.com/repos/rook/rook/issues/4142",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/48589765?v=4",
    "events_url": "https://api.github.com/users/github-cooper/events{/privacy}",
    "followers_url": "https://api.github.com/users/github-cooper/followers",
    "following_url": "https://api.github.com/users/github-cooper/following{/other_user}",
    "gists_url": "https://api.github.com/users/github-cooper/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/github-cooper",
    "id": 48589765,
    "login": "github-cooper",
    "node_id": "MDQ6VXNlcjQ4NTg5NzY1",
    "organizations_url": "https://api.github.com/users/github-cooper/orgs",
    "received_events_url": "https://api.github.com/users/github-cooper/received_events",
    "repos_url": "https://api.github.com/users/github-cooper/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/github-cooper/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/github-cooper/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/github-cooper"
  }
}