{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "*Title*: `HDS`: envoy crashes upon receival of a `HealthCheckSpecifier` message without `interval` field\r\n\r\n*Description*:\r\n\r\n* due to discrepancy between `HDS` API spec and implementation,  Envoy crashes upon receival of a valid `HealthCheckSpecifier` message\r\n* `HDS` API defines `HealthCheckSpecifier` [as follows](https://github.com/envoyproxy/data-plane-api/blob/5d91278/envoy/service/discovery/v3alpha/hds.proto#L128-L133):\r\n   ```yaml\r\n   message HealthCheckSpecifier {\r\n     repeated ClusterHealthCheck cluster_health_checks = 1;\r\n\r\n     // The default is 1 second.\r\n     google.protobuf.Duration interval = 2;\r\n   }\r\n   ```\r\n\r\n   Notice that `interval` field:\r\n   1.  is not mandatory\r\n   2. according to the doc, has a default value\r\n* however, Envoy crashes if it receives a `HealthCheckSpecifier` message without `interval`  field\r\n* I suspect, the crash is happening [at the following line](https://github.com/envoyproxy/envoy/blob/cc057ce/source/common/upstream/health_discovery_service.cc#L181):\r\n  ```\r\n  // Set response\r\n  auto server_response_ms = PROTOBUF_GET_MS_REQUIRED(*message, interval);\r\n  ``` \r\n\r\n*Repro steps*:\r\n\r\n* create an `HDS` server that sends a predefined `HealthCheckSpecifier` message without `interval`  field (see example response below)\r\n* configure Envoy with that `HDS` server (see  example `envoy.yaml` below)\r\n\r\n*Admin and Stats Output*:\r\nN/A\r\n\r\n*Config*:\r\n\r\nenvoy.yaml\r\n```yaml\r\n#\r\n# Demoes Health Discovery Service\r\n#\r\nadmin:\r\n  access_log_path: /tmp/admin_access.log\r\n  address:\r\n    socket_address:\r\n      protocol: TCP\r\n      address: 127.0.0.1\r\n      port_value: 9901\r\nstatic_resources:\r\n  listeners:\r\n  - name: listener_0\r\n    address:\r\n      socket_address:\r\n        protocol: TCP\r\n        address: 0.0.0.0\r\n        port_value: 10000\r\n    filter_chains:\r\n    - filters:\r\n      - name: envoy.tcp_proxy\r\n        typedConfig:\r\n          '@type': type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy\r\n          cluster: service_responder\r\n          statPrefix: service_responder\r\n  clusters:\r\n  - name: service_responder\r\n    connect_timeout: 0.25s\r\n    type: STATIC\r\n    lb_policy: ROUND_ROBIN\r\n    load_assignment:\r\n      cluster_name: service_responder\r\n      endpoints:\r\n      - lb_endpoints:\r\n        - endpoint:\r\n            address:\r\n              socket_address:\r\n                address: 127.0.0.1\r\n                port_value: 8081\r\n        - endpoint:\r\n            address:\r\n              socket_address:\r\n                address: 127.0.0.1\r\n                port_value: 18081\r\n  - name: hds_cluster\r\n    connect_timeout: 1s\r\n    type: STATIC\r\n    lb_policy: ROUND_ROBIN\r\n    http2_protocol_options: {}\r\n    upstream_connection_options:\r\n      # configure a TCP keep-alive to detect and reconnect to the admin\r\n      # server in the event of a TCP socket half open connection\r\n      tcp_keepalive: {}\r\n    circuit_breakers: null\r\n    load_assignment:\r\n      cluster_name: hds_cluster\r\n      endpoints:\r\n      - lb_endpoints:\r\n        - endpoint:\r\n            address:\r\n              socket_address:\r\n                address: 127.0.0.1\r\n                port_value: 5401\r\nhds_config:\r\n  api_type: GRPC\r\n  grpc_services:\r\n  - envoy_grpc:\r\n      cluster_name: hds_cluster\r\n```\r\n\r\n`HealthCheckSpecifier` message sent by the `HDS` server:\r\n\r\n```yaml\r\nclusterHealthChecks:\r\n- clusterName: 127.0.0.1:8081\r\n  healthChecks:\r\n  - eventLogPath: /tmp/127.0.0.1_8081.log\r\n    healthyThreshold: 2\r\n    interval: 3s\r\n    tcpHealthCheck: {}\r\n    timeout: 1s\r\n    unhealthyThreshold: 3\r\n  localityEndpoints:\r\n  - endpoints:\r\n    - address:\r\n        socketAddress:\r\n          address: 127.0.0.1\r\n          portValue: 8081\r\n    locality:\r\n      region: eu\r\n      subZone: demo\r\n      zone: eu-west-1a\r\n```\r\n\r\n*Logs* and *Call Stack*:\r\n\r\n```\r\n[2019-11-02 14:59:15.174][401][debug][upstream] [source/common/upstream/upstream_impl.cc:250] transport socket match, socket default selected for host with address 192.168.65.2:5401\r\n[2019-11-02 14:59:15.354][401][debug][upstream] [source/common/upstream/health_discovery_service.cc:66] Establishing new gRPC bidi stream for rpc StreamHealthCheck(stream .envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse) returns (stream .envoy.service.discovery.v2.HealthCheckSpecifier);\r\n\r\n[2019-11-02 14:59:15.355][401][debug][upstream] [source/common/upstream/health_discovery_service.cc:74] Sending HealthCheckRequest health_check_request {\r\n  node {\r\n    build_version: \"ab30cafa0c033f8ef77c54dd98badea62b78506e/1.12.0/Clean/RELEASE/BoringSSL\"\r\n  }\r\n  capability {\r\n    health_check_protocols: HTTP\r\n    health_check_protocols: TCP\r\n  }\r\n}\r\n \r\n[2019-11-02 14:59:15.360][401][debug][upstream] [source/common/upstream/health_discovery_service.cc:175] New health check response message cluster_health_checks {\r\n  cluster_name: \"127.0.0.1:8081\"\r\n  health_checks {\r\n    timeout {\r\n      seconds: 1\r\n    }\r\n    interval {\r\n      seconds: 3\r\n    }\r\n    unhealthy_threshold {\r\n      value: 3\r\n    }\r\n    healthy_threshold {\r\n      value: 2\r\n    }\r\n    tcp_health_check {\r\n    }\r\n    event_log_path: \"/tmp/127.0.0.1_8081.log\"\r\n  }\r\n  locality_endpoints {\r\n    locality {\r\n      region: \"eu\"\r\n      zone: \"eu-west-1a\"\r\n      sub_zone: \"demo\"\r\n    }\r\n    endpoints {\r\n      address {\r\n        socket_address {\r\n          address: \"127.0.0.1\"\r\n          port_value: 8081\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n \r\n[2019-11-02 14:59:15.390][401][critical][main] [source/exe/terminate_handler.cc:13] std::terminate called! (possible uncaught exception, see trace)\r\n[2019-11-02 14:59:15.390][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:70] Backtrace (use tools/stack_decode.py to get line numbers):\r\n[2019-11-02 14:59:15.390][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:71] Envoy version: ab30cafa0c033f8ef77c54dd98badea62b78506e/1.12.0/Clean/RELEASE/BoringSSL\r\n[2019-11-02 14:59:15.435][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #0: Envoy::TerminateHandler::logOnTerminate()::$_0::operator()() [0x55586be223de]\r\n[2019-11-02 14:59:15.443][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:77] #1: [0x55586be222e9]\r\n[2019-11-02 14:59:15.449][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #2: __cxxabiv1::__terminate() [0x55586c128356]\r\n[2019-11-02 14:59:15.449][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:83] Caught Aborted, suspect faulting address 0x1f600000191\r\n[2019-11-02 14:59:15.450][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:70] Backtrace (use tools/stack_decode.py to get line numbers):\r\n[2019-11-02 14:59:15.451][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:71] Envoy version: ab30cafa0c033f8ef77c54dd98badea62b78506e/1.12.0/Clean/RELEASE/BoringSSL\r\n[2019-11-02 14:59:15.451][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #0: __restore_rt [0x7fb125672390]\r\n[2019-11-02 14:59:15.455][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:77] #1: [0x55586be222e9]\r\n[2019-11-02 14:59:15.455][401][critical][backtrace] [bazel-out/k8-opt/bin/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #2: __cxxabiv1::__terminate() [0x55586c128356]\r\nAsyncClient 0x55586e6d3b00, stream_id_: 10351199544903444021\r\n&stream_info_: \r\n  StreamInfoImpl 0x55586e6d3c70, protocol_: 1, response_code_: null, response_code_details_: via_upstream, health_check_request_: 0, route_name_:\r\n```\r\n",
  "closed_at": "2019-11-04T00:00:48Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8863/comments",
  "created_at": "2019-11-02T15:22:02Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8863/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/8863",
  "id": 516627388,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8863/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2020-01-21T19:28:37Z",
    "closed_issues": 72,
    "created_at": "2019-10-10T03:07:36Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/12",
    "id": 4738243,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/12/labels",
    "node_id": "MDk6TWlsZXN0b25lNDczODI0Mw==",
    "number": 12,
    "open_issues": 2,
    "state": "closed",
    "title": "1.13.0",
    "updated_at": "2020-10-21T19:03:40Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/12"
  },
  "node_id": "MDU6SXNzdWU1MTY2MjczODg=",
  "number": 8863,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "HDS: envoy crashes upon receival of a `HealthCheckSpecifier` message without `interval` field",
  "updated_at": "2019-11-04T00:00:48Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/8863",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/19395458?v=4",
    "events_url": "https://api.github.com/users/yskopets/events{/privacy}",
    "followers_url": "https://api.github.com/users/yskopets/followers",
    "following_url": "https://api.github.com/users/yskopets/following{/other_user}",
    "gists_url": "https://api.github.com/users/yskopets/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yskopets",
    "id": 19395458,
    "login": "yskopets",
    "node_id": "MDQ6VXNlcjE5Mzk1NDU4",
    "organizations_url": "https://api.github.com/users/yskopets/orgs",
    "received_events_url": "https://api.github.com/users/yskopets/received_events",
    "repos_url": "https://api.github.com/users/yskopets/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yskopets/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yskopets/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yskopets"
  }
}