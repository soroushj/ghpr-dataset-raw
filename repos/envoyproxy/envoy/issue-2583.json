{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "*Description*:\r\nI tried Native gRPC health chekcer which was implemented with https://github.com/envoyproxy/envoy/pull/2316, but the checker does not send `sceheme` header. The `scheme` header is required for valid HTTP/2 request:\r\n\r\n>All HTTP/2 requests MUST include exactly one valid value for the :method, :scheme, and :path pseudo-header fields, unless it is a CONNECT request\r\n\r\nhttps://http2.github.io/http2-spec/#rfc.section.8.1.2.3\r\n\r\nThe problem is, some gRPC server implementations (in my case, it's Ruby implementation) reset streams with the malformed request, so Envoy can not correctly do health checkes to the servers.\r\n\r\nThe temporal fix is below, but we need consider upstream TLS context and apply this fix to other gRPC clients in Envoy if needed:\r\n\r\n```diff\r\ndiff --git a/source/common/grpc/common.cc b/source/common/grpc/common.cc\r\nindex 84b97ead1..a301c859b 100644\r\n--- a/source/common/grpc/common.cc\r\n+++ b/source/common/grpc/common.cc\r\n@@ -234,6 +234,7 @@ Http::MessagePtr Common::prepareHeaders(const std::string& upstream_cluster,\r\n                                         const std::string& method_name) {\r\n   Http::MessagePtr message(new Http::RequestMessageImpl());\r\n   message->headers().insertMethod().value().setReference(Http::Headers::get().MethodValues.Post);\r\n+  message->headers().insertScheme().value().setReference(Http::Headers::get().SchemeValues.Http);\r\n   message->headers().insertPath().value().append(\"/\", 1);\r\n   message->headers().insertPath().value().append(service_full_name.c_str(),\r\n                                                  service_full_name.size());\r\n```\r\n\r\nEnvoy's request headers from a packet capture:\r\n\r\n```\r\n        [Header Length: 170]\r\n        [Header Count: 6]\r\n        Header: :method: POST\r\n            Name Length: 7\r\n            Name: :method\r\n            Value Length: 4\r\n            Value: POST\r\n            Representation: Indexed Header Field\r\n            Index: 3\r\n        Header: :path: /grpc.health.v1.Health/Check\r\n            Name Length: 5\r\n            Name: :path\r\n            Value Length: 28\r\n            Value: /grpc.health.v1.Health/Check\r\n            Representation: Literal Header Field without Indexing - Indexed Name\r\n            Index: 4\r\n        Header: :authority: some_service\r\n            Name Length: 10\r\n            Name: :authority\r\n            Value Length: 12\r\n            Value: some_service\r\n            Representation: Literal Header Field with Incremental Indexing - Indexed Name\r\n            Index: 1\r\n        Header: content-type: application/grpc\r\n            Name Length: 12\r\n            Name: content-type\r\n            Value Length: 16\r\n            Value: application/grpc\r\n            Representation: Literal Header Field with Incremental Indexing - Indexed Name\r\n            Index: 31\r\n        Header: te: trailers\r\n            Name Length: 2\r\n            Name: te\r\n            Value Length: 8\r\n            Value: trailers\r\n            Representation: Literal Header Field with Incremental Indexing - New Name\r\n        Header: user-agent: Envoy/HC\r\n            Name Length: 10\r\n            Name: user-agent\r\n            Value Length: 8\r\n            Value: Envoy/HC\r\n            Representation: Literal Header Field with Incremental Indexing - Indexed Name\r\n            Index: 58\r\n```\r\n\r\n*Repro steps*:\r\nBuilding Ruby gRPC server with https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto. Then configure gRPC health checks.\r\n\r\n*Admin and Stats Output*:\r\n```\r\ncluster.some_service.health_check.attempt: 1\r\ncluster.some_service.health_check.failure: 1\r\ncluster.some_service.health_check.healthy: 0\r\ncluster.some_service.health_check.network_failure: 1\r\ncluster.some_service.health_check.passive_failure: 0\r\ncluster.some_service.health_check.success: 0\r\ncluster.some_service.health_check.verify_cluster: 0\r\n```\r\n\r\n*Config*:\r\n```yaml\r\nadmin:\r\n  access_log_path: /tmp/admin_access.log\r\n  address:\r\n    socket_address: { address: 127.0.0.1, port_value: 9901 }\r\n\r\nstatic_resources:\r\n  listeners:\r\n  - name: listener_0\r\n    address:\r\n      socket_address: { address: 127.0.0.1, port_value: 9211 }\r\n    filter_chains:\r\n    - filters:\r\n      - name: envoy.http_connection_manager\r\n        config:\r\n          stat_prefix: ingress_http\r\n          codec_type: AUTO\r\n          route_config:\r\n            name: local_route\r\n            virtual_hosts:\r\n            - name: local_service\r\n              domains: [\"*\"]\r\n              routes:\r\n              - match: { prefix: \"/\" }\r\n                route: { cluster: some_service }\r\n          http_filters:\r\n          - name: envoy.router\r\n  clusters:\r\n  - name: some_service\r\n    http2_protocol_options: {}\r\n    connect_timeout: { seconds: 10 }\r\n    type: STATIC\r\n    lb_policy: ROUND_ROBIN\r\n    hosts: [{ socket_address: { address: 127.0.0.1, port_value: 8080 }}]\r\n    health_checks:\r\n      - grpc_health_check: { service_name: 'test' }\r\n        timeout: { seconds: 10 }\r\n        interval: { seconds: 10 }\r\n        unhealthy_threshold: 2\r\n        healthy_threshold: 2\r\n```\r\n\r\n*Logs*:\r\n```\r\n[2018-02-12 04:44:36.891][1553850][debug][hc] source/common/upstream/health_checker_impl.cc:748] [C1] connection/stream error health_flags=/failed_active_hc\r\n```",
  "closed_at": "2018-02-13T00:16:16Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/2583/comments",
  "created_at": "2018-02-11T19:54:24Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/2583/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/2583",
  "id": 296219660,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/2583/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2018-03-20T20:42:42Z",
    "closed_issues": 58,
    "created_at": "2017-11-03T00:16:48Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/5",
    "id": 2884977,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/5/labels",
    "node_id": "MDk6TWlsZXN0b25lMjg4NDk3Nw==",
    "number": 5,
    "open_issues": 0,
    "state": "closed",
    "title": "1.6.0",
    "updated_at": "2018-03-20T20:42:42Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/5"
  },
  "node_id": "MDU6SXNzdWUyOTYyMTk2NjA=",
  "number": 2583,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Native gRPC health checker must send a `scheme` header",
  "updated_at": "2018-02-13T00:16:16Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/2583",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1460043?v=4",
    "events_url": "https://api.github.com/users/taiki45/events{/privacy}",
    "followers_url": "https://api.github.com/users/taiki45/followers",
    "following_url": "https://api.github.com/users/taiki45/following{/other_user}",
    "gists_url": "https://api.github.com/users/taiki45/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/taiki45",
    "id": 1460043,
    "login": "taiki45",
    "node_id": "MDQ6VXNlcjE0NjAwNDM=",
    "organizations_url": "https://api.github.com/users/taiki45/orgs",
    "received_events_url": "https://api.github.com/users/taiki45/received_events",
    "repos_url": "https://api.github.com/users/taiki45/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/taiki45/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/taiki45/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/taiki45"
  }
}