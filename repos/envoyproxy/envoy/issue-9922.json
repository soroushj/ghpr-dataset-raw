{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "*Title*: *Unexpected error on upgrade to v1.13.0.*\r\n\r\n*Description*:\r\n>I've experienced an unexpected error on upgrade from v1.12.0 to the latest version v1.13.0.\r\n\r\n```\r\nError: Received unexpected error:\r\n           rpc error: code = Unknown desc = grpc: client streaming protocol violation: get <nil>, want <EOF>\r\n```\r\n\r\nI suspect it can be related to \"envoy.filters.http.grpc_http1_reverse_bridge\" (but I'm not sure).\r\nI need to enable this bridge for the rest of the routes and disable for \"/rpc.PingService/\" ping service route (`per_filter_config.envoy.filters.http.grpc_http1_reverse_bridge.disabled: true`).\r\nIf I remove the `envoy.filters.http.grpc_http1_reverse_bridge` to test only \"/rpc.PingService/\" using v1.13.0 works properly. \r\n\r\nDo I have to add any change to the envoy config?\r\nDo I forget anything?\r\n\r\nThanks in advance.\r\n\r\n*Repro steps*:\r\n> Integration test that I used to reproduce the error:\r\n```\r\n...\r\nconst (\r\n\tenvoyLocalAddr = \"envoy:10002\"\r\n)\r\n\r\nfunc TestPingServiceServer_Ping_Integration(t *testing.T) {\r\n\tt.Run(\"ping service\", func(t *testing.T) {\r\n\t\ta := assert.New(t)\r\n\t\tr := require.New(t)\r\n\r\n\t\tcc, err := grpc.Dial(envoyLocalAddr, grpc.WithInsecure())\r\n\t\tr.NoError(err)\r\n\r\n\t\tdefer func() {\r\n\t\t\t_ = cc.Close()\r\n\t\t}()\r\n\r\n\t\tclient := proto.NewPingServiceClient(cc)\r\n\t\tresp, err := client.Ping(context.Background(), &proto.Ping_Request{})\r\n\t\ta.NotNil(resp)\r\n\t\tr.NoError(err)\r\n\t})\r\n}\r\n...\r\n```\r\n>Ping service\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"net\"\r\n         ping ...\r\n         proto ...\r\n\t\"google.golang.org/grpc\"\r\n)\r\n...\r\nconst (\r\n\taddr = \":10005\"\r\n)\r\n\r\nfunc main() {\r\n\tlis, err := net.Listen(\"tcp\", addr)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tgrpcServer := grpc.NewServer()\r\n\tproto.RegisterPingServiceServer(grpcServer, ping.ServiceServer())\r\n\terr = grpcServer.Serve(lis)\r\n\tif err != nil {\r\n\t\tpanic(err.Error())\r\n\t}\r\n}\r\n...\r\n```\r\n>Ping service implementation\r\n```\r\npackage ping\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"github.com/golang/protobuf/ptypes/empty\"\r\n\tproto ...\r\n)\r\n\r\nfunc ServiceServer() proto.PingServiceServer {\r\n\treturn &serviceServer{}\r\n}\r\n\r\ntype serviceServer struct {\r\n}\r\n\r\nfunc (s *serviceServer) Ping(context.Context, *proto.Ping_Request) (*empty.Empty, error) {\r\n\treturn &empty.Empty{}, nil\r\n}\r\n```\r\n> Ping proto\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage ...\r\n\r\nimport \"google/protobuf/empty.proto\";\r\nimport \".../request_context.proto\";\r\n\r\nservice PingService {\r\n    rpc Ping(Ping.Request) returns (google.protobuf.Empty);\r\n}\r\n\r\nmessage Ping {\r\n    message Request {\r\n        RequestContext context = 1;\r\n    }\r\n}\r\n```\r\n\r\n*Config*:\r\nConfig working properly in v1.12.0.\r\n```\r\nstatic_resources:\r\n  listeners:\r\n    - name: listener_1\r\n      address:\r\n        socket_address:\r\n          address: 0.0.0.0\r\n          port_value: 10002\r\n      filter_chains:\r\n        - filters:\r\n            - name: envoy.http_connection_manager\r\n              config:\r\n                access_log:\r\n                  - name: envoy.file_access_log\r\n                    config:\r\n                      path: /dev/stdout\r\n                stat_prefix: ingress_http\r\n                route_config:\r\n                  name: ping\r\n                  virtual_hosts:\r\n                    - ...\r\n                    - name: ping\r\n                      domains: [\"*\"]\r\n                      routes:\r\n                        - match:\r\n                            prefix: \"/rpc.PingService/\"\r\n                          route:\r\n                            host_rewrite: ping\r\n                            cluster: ping\r\n                            timeout: 2.00s\r\n                          per_filter_config:\r\n                            envoy.filters.http.grpc_http1_reverse_bridge:\r\n                              disabled: true\r\n                http_filters:\r\n                  - name: envoy.filters.http.grpc_http1_reverse_bridge\r\n                    config:\r\n                      content_type: application/grpc+proto\r\n                      withhold_grpc_frames: true\r\n                  - name: envoy.router\r\n  clusters:\r\n    - ...\r\n    - name: ping\r\n      connect_timeout: 2.00s\r\n      type: strict_dns\r\n      lb_policy: round_robin\r\n      http2_protocol_options: {}\r\n      load_assignment:\r\n        cluster_name: ping\r\n        endpoints:\r\n          - lb_endpoints:\r\n              - endpoint:\r\n                  address:\r\n                    socket_address:\r\n                      address: ping\r\n                      port_value: 10005\r\nadmin:\r\n  access_log_path: /dev/stdout\r\n  address:\r\n    socket_address:\r\n      address: 0.0.0.0\r\n      port_value: 9902\r\n```",
  "closed_at": "2020-05-21T01:59:32Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
    "events_url": "https://api.github.com/users/htuch/events{/privacy}",
    "followers_url": "https://api.github.com/users/htuch/followers",
    "following_url": "https://api.github.com/users/htuch/following{/other_user}",
    "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/htuch",
    "id": 10914751,
    "login": "htuch",
    "node_id": "MDQ6VXNlcjEwOTE0NzUx",
    "organizations_url": "https://api.github.com/users/htuch/orgs",
    "received_events_url": "https://api.github.com/users/htuch/received_events",
    "repos_url": "https://api.github.com/users/htuch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/htuch"
  },
  "comments": 14,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/9922/comments",
  "created_at": "2020-02-04T10:51:52Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/9922/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/9922",
  "id": 559637780,
  "labels": [
    {
      "color": "c3ed1e",
      "default": false,
      "description": "",
      "id": 1898025732,
      "name": "area/grpc",
      "node_id": "MDU6TGFiZWwxODk4MDI1NzMy",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/grpc"
    },
    {
      "color": "d4c5f9",
      "default": false,
      "description": "",
      "id": 1715341036,
      "name": "area/http",
      "node_id": "MDU6TGFiZWwxNzE1MzQxMDM2",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/http"
    },
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    },
    {
      "color": "fbca04",
      "default": true,
      "description": "Needs help!",
      "id": 645516726,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw2NDU1MTY3MjY=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/help%20wanted"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/9922/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2020-07-13T18:51:09Z",
    "closed_issues": 62,
    "created_at": "2020-03-10T00:01:47Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/14",
    "id": 5185398,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/14/labels",
    "node_id": "MDk6TWlsZXN0b25lNTE4NTM5OA==",
    "number": 14,
    "open_issues": 0,
    "state": "closed",
    "title": "1.15.0",
    "updated_at": "2020-09-30T23:30:38Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/14"
  },
  "node_id": "MDU6SXNzdWU1NTk2Mzc3ODA=",
  "number": 9922,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Unexpected error on upgrade to v1.13.0.",
  "updated_at": "2020-05-21T01:59:32Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/9922",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8776679?v=4",
    "events_url": "https://api.github.com/users/sp-manuel-jurado/events{/privacy}",
    "followers_url": "https://api.github.com/users/sp-manuel-jurado/followers",
    "following_url": "https://api.github.com/users/sp-manuel-jurado/following{/other_user}",
    "gists_url": "https://api.github.com/users/sp-manuel-jurado/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sp-manuel-jurado",
    "id": 8776679,
    "login": "sp-manuel-jurado",
    "node_id": "MDQ6VXNlcjg3NzY2Nzk=",
    "organizations_url": "https://api.github.com/users/sp-manuel-jurado/orgs",
    "received_events_url": "https://api.github.com/users/sp-manuel-jurado/received_events",
    "repos_url": "https://api.github.com/users/sp-manuel-jurado/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sp-manuel-jurado/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sp-manuel-jurado/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sp-manuel-jurado"
  }
}