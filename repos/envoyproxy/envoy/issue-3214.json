{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "If a CDS response contains multiple clusters with different properties but the same name, they each get quickly added and removed in the cluster manager. Something in Envoy isn't properly handling this, and we got a bunch of segfaults from an accidental duplication in our config.\r\n\r\nThe stack traces are different each time, possibly due to version differences or slightly different execution paths. We got a core dump from one, and were able to catch two others in Valgrind.\r\n\r\n---\r\n\r\nConfigs+commands for reproducing the issue:\r\n\r\n```\r\n$ valgrind ./envoy-static --config-path local-sds.yaml --v2-config-only --service-cluster cluster-foo --service-node node-foo\r\n```\r\n\r\n```yaml\r\n# local-sds.yaml\r\nadmin:\r\n  access_log_path: \"/dev/null\"\r\n  address:\r\n    socket_address:\r\n      address: \"127.0.0.1\"\r\n      port_value: 9000\r\n\r\nstatic_resources:\r\n  listeners:\r\n    name: \"main-listener\"\r\n    address:\r\n      socket_address:\r\n        address: \"127.0.0.1\"\r\n        port_value: 9001\r\n    filter_chains:\r\n      filters:\r\n        - name: \"envoy.http_connection_manager\"\r\n          config:\r\n            codec_type: \"AUTO\"\r\n            stat_prefix: \"outbound_http\"\r\n            access_log:\r\n              - name: \"envoy.file_access_log\"\r\n                config:\r\n                  path: \"/dev/null\"\r\n            http_filters:\r\n              - name: envoy.router\r\n                config: {}\r\n            rds:\r\n              route_config_name: \"default\"\r\n              config_source:\r\n                api_config_source:\r\n                  api_type: \"REST_LEGACY\"\r\n                  cluster_names: [\"cds-source\"]\r\n                  refresh_delay:\r\n                    seconds: 1\r\n\r\n  clusters:\r\n    name: cds-source\r\n    connect_timeout: 5s\r\n    type: strict_dns\r\n    lb_policy: round_robin\r\n    hosts:\r\n      - socket_address:\r\n          address: \"127.0.0.1\"\r\n          port_value: 9002\r\n\r\ndynamic_resources:\r\n  cds_config:\r\n    api_config_source:\r\n      api_type: \"REST_LEGACY\"\r\n      cluster_names: [\"cds-source\"]\r\n      refresh_delay:\r\n        seconds: 1\r\n  deprecated_v1:\r\n    sds_config:\r\n      api_config_source:\r\n        api_type: \"REST_LEGACY\"\r\n        cluster_names: [\"cds-source\"]\r\n        refresh_delay:\r\n          seconds: 1\r\n```\r\n\r\nCDS config:\r\n```json\r\n{\r\n  \"clusters\": [\r\n    {\r\n      \"name\": \"cluster-from-cds\",\r\n      \"hosts\": [{\"url\": \"tcp://127.0.0.1:8078\"}],\r\n      \"connect_timeout_ms\": 10000,\r\n      \"type\": \"static\",\r\n      \"lb_type\": \"round_robin\",\r\n      \"max_requests_per_connection\": 1\r\n    },\r\n    {\r\n      \"name\": \"cluster-from-cds\",\r\n      \"hosts\": [{\"url\": \"tcp://127.0.0.1:8079\"}],\r\n      \"connect_timeout_ms\": 10000,\r\n      \"type\": \"static\",\r\n      \"lb_type\": \"round_robin\",\r\n      \"max_requests_per_connection\": 1\r\n    },\r\n    {\r\n      \"name\": \"cluster-from-cds\",\r\n      \"hosts\": [{\"url\": \"tcp://127.0.0.1:8080\"}],\r\n      \"connect_timeout_ms\": 10000,\r\n      \"type\": \"static\",\r\n      \"lb_type\": \"round_robin\",\r\n      \"max_requests_per_connection\": 1\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nRDS config:\r\n```json\r\n{\r\n  \"virtual_hosts\": [{\r\n    \"name\": \"vhost-from-cds\",\r\n    \"domains\": [\"*\"],\r\n    \"routes\": [{\r\n      \"prefix\": \"/\",\r\n      \"cluster\": \"cluster-from-cds\"\r\n    }]\r\n  }]\r\n}\r\n```\r\n\r\n---\r\n\r\nStack trace 1 (core + gdb, envoy version 97b69ce6a507471180c0585b6742c627962b433b)\r\n```\r\n(gdb) bt\r\n#0  0x00007fb1bf9f81fb in raise () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n#1  0x00000000008f7a23 in Envoy::SignalAction::sigHandler (sig=11, info=<optimized out>, context=<optimized out>) at external/envoy/source/exe/signal_action.cc:39\r\n#2  <signal handler called>\r\n#3  0x0000000007f28720 in ?? ()\r\n#4  0x000000000064013c in Envoy::Ssl::ContextImpl::logHandshake (this=0x43df340, ssl=0x7ebfe08) at external/envoy/source/common/ssl/context_impl.cc:268\r\n#5  0x000000000053f3a3 in Envoy::Ssl::SslSocket::doHandshake (this=this@entry=0x446f650) at external/envoy/source/common/ssl/ssl_socket.cc:96\r\n#6  0x000000000053f91b in Envoy::Ssl::SslSocket::doWrite (this=0x446f650, write_buffer=...) at external/envoy/source/common/ssl/ssl_socket.cc:143\r\n#7  0x000000000053cd48 in Envoy::Network::ConnectionImpl::onWriteReady (this=this@entry=0x434e280) at external/envoy/source/common/network/connection_impl.cc:421\r\n#8  0x000000000053d078 in Envoy::Network::ConnectionImpl::onFileEvent (this=0x434e280, events=3) at external/envoy/source/common/network/connection_impl.cc:364\r\n#9  0x0000000000536b38 in operator() (__args#0=3, this=<optimized out>) at /usr/include/c++/5/functional:2267\r\n#10 operator() (__closure=0x0, arg=<optimized out>, what=<optimized out>) at external/envoy/source/common/event/file_event_impl.cc:60\r\n#11 Envoy::Event::FileEventImpl::<lambda(int, short int, void*)>::_FUN(int, short, void *) () at external/envoy/source/common/event/file_event_impl.cc:61\r\n#12 0x000000000092abd2 in event_persist_closure (ev=<optimized out>, base=0x265e2c0) at event.c:1580\r\n#13 event_process_active_single_queue (base=base@entry=0x265e2c0, max_to_process=max_to_process@entry=2147483647, endtime=endtime@entry=0x0, activeq=<optimized out>) at event.c:1639\r\n#14 0x000000000092b32f in event_process_active (base=0x265e2c0) at event.c:1738\r\n#15 event_base_loop (base=0x265e2c0, flags=0) at event.c:1961\r\n#16 0x000000000051e868 in Envoy::Server::InstanceImpl::run (this=this@entry=0x7ffdc2090720) at external/envoy/source/server/server.cc:362\r\n#17 0x000000000045c7ad in Envoy::main_common (options=...) at external/envoy/source/exe/main_common.cc:91\r\n#18 0x00000000004153be in main (argc=16, argv=0x7ffdc2090d78) at external/envoy/source/exe/main.cc:54\r\n```\r\n\r\nStack trace 2 (valgrind, envoy version 97b69ce6a507471180c0585b6742c627962b433b) (note, this one using a TLS-enabled cluster list because we thought the crash was related to BoringSSL)\r\n```\r\n[2018-04-25 22:04:12.628][96556][info][upstream] external/envoy/source/common/upstream/cluster_manager_impl.cc:355] add/update cluster cluster-from-cds\r\n==96556== Thread 19:\r\n==96556== Invalid read of size 8\r\n==96556==    at 0x65F9CB: runLowWatermarkCallbacks (codec_helper.h:18)\r\n==96556==    by 0x65F9CB: Envoy::Http::Http1::ClientConnectionImpl::onBelowLowWatermark() (codec_impl.cc:684)\r\n==96556==    by 0x5FCDE5: complete (timespan.h:24)\r\n==96556==    by 0x5FCDE5: Envoy::Http::Http2::ConnPoolImpl::onConnectionEvent(Envoy::Http::Http2::ConnPoolImpl::ActiveClient&, Envoy::Network::ConnectionEvent) (conn_pool.cc:143)\r\n==96556==    by 0x539634: Envoy::Network::ConnectionImpl::raiseEvent(Envoy::Network::ConnectionEvent) (connection_impl.cc:249)\r\n==96556==    by 0x53F3B1: Envoy::Ssl::SslSocket::doHandshake() (ssl_socket.cc:97)\r\n==96556==    by 0x53F91A: Envoy::Ssl::SslSocket::doWrite(Envoy::Buffer::Instance&) (ssl_socket.cc:143)\r\n==96556==    by 0x53CD47: Envoy::Network::ConnectionImpl::onWriteReady() (connection_impl.cc:421)\r\n==96556==    by 0x53D077: Envoy::Network::ConnectionImpl::onFileEvent(unsigned int) (connection_impl.cc:364)\r\n==96556==    by 0x536B37: Envoy::Event::FileEventImpl::assignEvents(unsigned int)::{lambda(int, short, void*)#1}::_FUN(int, short, void*) (functional:2267)\r\n==96556==    by 0x92ABD1: event_persist_closure (event.c:1580)\r\n==96556==    by 0x92ABD1: event_process_active_single_queue.isra.29 (event.c:1639)\r\n==96556==    by 0x92B32E: event_process_active (event.c:1738)\r\n==96556==    by 0x92B32E: event_base_loop (event.c:1961)\r\n==96556==    by 0x532208: Envoy::Server::WorkerImpl::threadRoutine(Envoy::Server::GuardDog&) (worker_impl.cc:94)\r\n==96556==    by 0x934A7D: operator() (functional:2267)\r\n==96556==    by 0x934A7D: operator() (thread.cc:20)\r\n==96556==    by 0x934A7D: Envoy::Thread::Thread::Thread(std::function<void ()>)::{lambda(void*)#1}::_FUN(void*) (thread.cc:22)\r\n==96556==  Address 0x45503063c303e51 is not stack'd, malloc'd or (recently) free'd\r\n```\r\n\r\nStack trace 3 (valgrind, envoy version a328bc5d69a9e90ed3197a6735997ec48a850351)\r\n```\r\n[2018-04-25 22:41:17.238][59208][info][upstream] external/envoy/source/common/upstream/cluster_manager_impl.cc:392] warming cluster cluster-from-cds complete\r\n==59208== Thread 6:\r\n==59208== Jump to the invalid address stated on the next line\r\n==59208==    at 0x1E: ???\r\n==59208==    by 0x73E567: Envoy::Http::Http2::ConnPoolImpl::newStream(Envoy::Http::StreamDecoder&, Envoy::Http::ConnectionPool::Callbacks&) (conn_pool.cc:89)\r\n==59208==    by 0x770360: encodeHeaders (router.cc:853)\r\n==59208==    by 0x770360: Envoy::Router::Filter::decodeHeaders(Envoy::Http::HeaderMap&, bool) (router.cc:313)\r\n==59208==    by 0x7A88A3: Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(Envoy::Http::ConnectionManagerImpl::ActiveStreamDecoderFilter*, Envoy::Http::HeaderMap&, bool) (conn_manager_impl.cc:665)\r\n==59208==    by 0x7A9936: Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders(std::unique_ptr<Envoy::Http::HeaderMap, std::default_delete<Envoy::Http::HeaderMap> >&&, bool) (conn_manager_impl.cc:593)\r\n==59208==    by 0x7E03C9: Envoy::Http::Http1::ServerConnectionImpl::onMessageComplete() (codec_impl.cc:549)\r\n==59208==    by 0x7DC89D: operator() (codec_impl.cc:270)\r\n==59208==    by 0x7DC89D: Envoy::Http::Http1::ConnectionImpl::{lambda(http_parser*)#7}::_FUN(http_parser*) (codec_impl.cc:272)\r\n==59208==    by 0x7E285F: http_parser_execute (in /pay/home/jmillikin/build-b887d182a3da1cda937a4fc063280a9c940accea/envoy-stripe)\r\n==59208==    by 0x7DDFE0: Envoy::Http::Http1::ConnectionImpl::dispatchSlice(char const*, unsigned long) (codec_impl.cc:327)\r\n==59208==    by 0x7E016A: Envoy::Http::Http1::ConnectionImpl::dispatch(Envoy::Buffer::Instance&) (codec_impl.cc:316)\r\n==59208==    by 0x7A646F: Envoy::Http::ConnectionManagerImpl::onData(Envoy::Buffer::Instance&, bool) (conn_manager_impl.cc:226)\r\n==59208==    by 0x64F8E6: Envoy::Network::FilterManagerImpl::onContinueReading(Envoy::Network::FilterManagerImpl::ActiveReadFilter*) (filter_manager_impl.cc:56)\r\n==59208==  Address 0x1e is not stack'd, malloc'd or (recently) free'd\r\n==59208== \r\n[2018-04-25 22:41:18.548][59586][critical][backtrace] bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:114] Caught Segmentation fault, suspect faulting address 0x1e\r\n```",
  "closed_at": "2018-05-01T04:38:40Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 11,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3214/comments",
  "created_at": "2018-04-25T22:56:30Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3214/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/3214",
  "id": 317821762,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3214/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2018-06-23T16:17:31Z",
    "closed_issues": 70,
    "created_at": "2018-03-05T22:43:00Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/6",
    "id": 3163642,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/6/labels",
    "node_id": "MDk6TWlsZXN0b25lMzE2MzY0Mg==",
    "number": 6,
    "open_issues": 0,
    "state": "closed",
    "title": "1.7.0",
    "updated_at": "2018-06-23T16:17:31Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/6"
  },
  "node_id": "MDU6SXNzdWUzMTc4MjE3NjI=",
  "number": 3214,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Segfaults when CDS data contains conflicting clusters with the same name",
  "updated_at": "2018-05-01T04:38:40Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/3214",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/28275929?v=4",
    "events_url": "https://api.github.com/users/jmillikin-stripe/events{/privacy}",
    "followers_url": "https://api.github.com/users/jmillikin-stripe/followers",
    "following_url": "https://api.github.com/users/jmillikin-stripe/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmillikin-stripe/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jmillikin-stripe",
    "id": 28275929,
    "login": "jmillikin-stripe",
    "node_id": "MDQ6VXNlcjI4Mjc1OTI5",
    "organizations_url": "https://api.github.com/users/jmillikin-stripe/orgs",
    "received_events_url": "https://api.github.com/users/jmillikin-stripe/received_events",
    "repos_url": "https://api.github.com/users/jmillikin-stripe/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jmillikin-stripe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmillikin-stripe/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jmillikin-stripe"
  }
}