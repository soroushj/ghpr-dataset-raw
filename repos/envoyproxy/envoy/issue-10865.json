{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "__Description__:\r\n\r\nThe current LuaJIT version used by envoy will, by default, pass in the `MAP_32BIT` flag to all of it's `mmap` calls. This restricts the LuaJIT's `mmap` allocations to 1gb of memory. When running with several lua scripts at a high enough concurrency, mmap will exhause the set of usable memory and error. This results in a `NULL` lua state object and results in a segfault.\r\n\r\nWe have witnessed this behavior when running _without_ the `--concurrency` option on a machine with 36 cores. We were able to work around the issue by limiting our concurrency to 16. I have reproduced the crash easily by setting `--concurrency` to a reasonably high value and monitored the process's use of memory-maps with `pmap -X <PID>`. \r\n\r\nMy research has led me to believe that, on modern CPUs, there isn't a good reason to use MAP_32BIT for performance or otherwise. ([fun read on MAP_32BIT](http://timetobleed.com/digging-out-the-craziest-bug-you-never-heard-about-from-2008-a-linux-threading-regression/)). There is a flag within the LuaJIT Makefile to control this behavior and I have confirmed that setting it works around the problem.\r\n\r\n```patch\r\n@@ -111,7 +111,7 @@ XCFLAGS=\r\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\r\n#\r\n# Enable GC64 mode for x64.\r\n-#XCFLAGS+= -DLUAJIT_ENABLE_GC64\r\n+XCFLAGS+= -DLUAJIT_ENABLE_GC64\r\n# \r\n##############################################################################\r\n\r\n```\r\n\r\nTested running with 2.5k threads (I realize a ridiculous number) and consuming >3gb via mmap. I would be willing to make a PR, but I am unsure if this is desired universally. It may be worth pointing out that in LuaJIT `master`, this is the default behavior and the flag flips to optionally turn `MAP_32BIT` _back on_. \r\n\r\n\r\n__Repro steps__:\r\n\r\n  1. Configure to use several Lua scripts\r\n  1. Launch with high `--concurrency` value\r\n  1. Process should crash when launching worker threads (monitor anonymous mmap usage with `pmap -X <PID>`\r\n\r\n\r\n\r\n__Call Stack__:\r\n\r\n```\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #0: __restore_rt [0x7f461107a390]\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #1: luaL_openlibs [0x56521a4f71be]\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #2: Envoy::Extensions::Filters::Common::Lua::ThreadLocalState::LuaThreadLocal::LuaThreadLocal() [0x56521a4dc35f]\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #3: std::_Function_handler<>::_M_invoke() [0x56521a4dc3eb]\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #4: std::_Function_handler<>::_M_invoke() [0x56521ac4c6fc]\r\nazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75] #5: std::_Function_handler<>::_M_invoke() [0x56521ac50e4b]\r\n```\r\n",
  "closed_at": "2020-04-21T15:24:18Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10865/comments",
  "created_at": "2020-04-20T18:55:27Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10865/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/10865",
  "id": 603459237,
  "labels": [
    {
      "color": "9526c9",
      "default": false,
      "description": "",
      "id": 1801610371,
      "name": "area/lua",
      "node_id": "MDU6TGFiZWwxODAxNjEwMzcx",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/lua"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10865/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MDM0NTkyMzc=",
  "number": 10865,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "SegFault - LuaJIT unable to initialize state due to mmap exhaustion",
  "updated_at": "2020-04-21T15:24:18Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/10865",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/63568820?v=4",
    "events_url": "https://api.github.com/users/murray-stripe/events{/privacy}",
    "followers_url": "https://api.github.com/users/murray-stripe/followers",
    "following_url": "https://api.github.com/users/murray-stripe/following{/other_user}",
    "gists_url": "https://api.github.com/users/murray-stripe/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/murray-stripe",
    "id": 63568820,
    "login": "murray-stripe",
    "node_id": "MDQ6VXNlcjYzNTY4ODIw",
    "organizations_url": "https://api.github.com/users/murray-stripe/orgs",
    "received_events_url": "https://api.github.com/users/murray-stripe/received_events",
    "repos_url": "https://api.github.com/users/murray-stripe/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/murray-stripe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/murray-stripe/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/murray-stripe"
  }
}