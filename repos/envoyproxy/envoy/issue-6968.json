{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1016047?v=4",
    "events_url": "https://api.github.com/users/lizan/events{/privacy}",
    "followers_url": "https://api.github.com/users/lizan/followers",
    "following_url": "https://api.github.com/users/lizan/following{/other_user}",
    "gists_url": "https://api.github.com/users/lizan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lizan",
    "id": 1016047,
    "login": "lizan",
    "node_id": "MDQ6VXNlcjEwMTYwNDc=",
    "organizations_url": "https://api.github.com/users/lizan/orgs",
    "received_events_url": "https://api.github.com/users/lizan/received_events",
    "repos_url": "https://api.github.com/users/lizan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lizan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lizan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lizan"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1016047?v=4",
      "events_url": "https://api.github.com/users/lizan/events{/privacy}",
      "followers_url": "https://api.github.com/users/lizan/followers",
      "following_url": "https://api.github.com/users/lizan/following{/other_user}",
      "gists_url": "https://api.github.com/users/lizan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lizan",
      "id": 1016047,
      "login": "lizan",
      "node_id": "MDQ6VXNlcjEwMTYwNDc=",
      "organizations_url": "https://api.github.com/users/lizan/orgs",
      "received_events_url": "https://api.github.com/users/lizan/received_events",
      "repos_url": "https://api.github.com/users/lizan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lizan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lizan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lizan"
    }
  ],
  "author_association": "NONE",
  "body": "Hello,\r\n\r\nI'm trying to flip the Bazel flag --incompatible_do_not_split_linking_cmdline:\r\nhttps://github.com/bazelbuild/bazel/issues/7687\r\n\r\n`bazel test --incompatible_do_not_split_linking_cmdline  //test/exe:envoy_static_test`\r\nwill start failing with:\r\nexec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\r\nExecuting tests from //test/exe:envoy_static_test\r\n```\r\n-----------------------------------------------------------------------------\r\nlibstdc++ and/or libgcc are dynamically linked:\r\n\tlinux-vdso.so.1 (0x00007ffcdc7ee000)\r\n\tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f7162a6b000)\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f7162867000)\r\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f7162648000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f71622aa000)\r\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f7161f21000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f7161b30000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00007f7165999000)\r\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f7161918000)\r\n```\r\n\r\nYou have a [script](https://github.com/envoyproxy/envoy/blob/master/bazel/cc_wrapper.py#L37) to ensure that libstdc++ and libgcc are linked statically. \r\n\r\nThe issue is that the link tool is not being invoked that way anymore. It used to be:\r\n`/bin/linktool -someflag -someflag2  -Wl,@parameter_file_with_more_flags`\r\n\r\nbut now it's\r\n`/bin/linktool  @all_flags`\r\n\r\nThe script is very dependent on how the arguments to the tool were passed. I ask you to please make that script compatible with the new way so that I can flip this Bazel flag for 0.27. You can apply most of the same logic after reading every line from the all_flags parameter file. I don't think that you can still rely on [\"-E\", \"-xc++\", \"-\", \"-v\"] being the first arguments in the file but there must be an equivalent way of doing that.\r\n\r\nThe script will have to be compatible with current release too. So you could detect if one of the argv parameters starts with @ and take the new code path, if it starts with -Wl,@ the old one.\r\n\r\nPlease let me know if I can help.\r\n\r\nThank you.\r\n\r\n",
  "closed_at": "2019-05-31T21:29:53Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
    "events_url": "https://api.github.com/users/htuch/events{/privacy}",
    "followers_url": "https://api.github.com/users/htuch/followers",
    "following_url": "https://api.github.com/users/htuch/following{/other_user}",
    "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/htuch",
    "id": 10914751,
    "login": "htuch",
    "node_id": "MDQ6VXNlcjEwOTE0NzUx",
    "organizations_url": "https://api.github.com/users/htuch/orgs",
    "received_events_url": "https://api.github.com/users/htuch/received_events",
    "repos_url": "https://api.github.com/users/htuch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/htuch"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6968/comments",
  "created_at": "2019-05-16T18:22:11Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6968/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/6968",
  "id": 445096142,
  "labels": [
    {
      "color": "5319e7",
      "default": false,
      "description": "",
      "id": 545563713,
      "name": "area/build",
      "node_id": "MDU6TGFiZWw1NDU1NjM3MTM=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/build"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6968/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NDUwOTYxNDI=",
  "number": 6968,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "libgcc and libstdc++ not linking statically with incompatible Bazel flag",
  "updated_at": "2019-05-31T21:29:53Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/6968",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/23365806?v=4",
    "events_url": "https://api.github.com/users/oquenchil/events{/privacy}",
    "followers_url": "https://api.github.com/users/oquenchil/followers",
    "following_url": "https://api.github.com/users/oquenchil/following{/other_user}",
    "gists_url": "https://api.github.com/users/oquenchil/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/oquenchil",
    "id": 23365806,
    "login": "oquenchil",
    "node_id": "MDQ6VXNlcjIzMzY1ODA2",
    "organizations_url": "https://api.github.com/users/oquenchil/orgs",
    "received_events_url": "https://api.github.com/users/oquenchil/received_events",
    "repos_url": "https://api.github.com/users/oquenchil/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/oquenchil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oquenchil/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/oquenchil"
  }
}