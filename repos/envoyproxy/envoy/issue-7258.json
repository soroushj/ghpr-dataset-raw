{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
    "events_url": "https://api.github.com/users/htuch/events{/privacy}",
    "followers_url": "https://api.github.com/users/htuch/followers",
    "following_url": "https://api.github.com/users/htuch/following{/other_user}",
    "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/htuch",
    "id": 10914751,
    "login": "htuch",
    "node_id": "MDQ6VXNlcjEwOTE0NzUx",
    "organizations_url": "https://api.github.com/users/htuch/orgs",
    "received_events_url": "https://api.github.com/users/htuch/received_events",
    "repos_url": "https://api.github.com/users/htuch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/htuch"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
      "events_url": "https://api.github.com/users/htuch/events{/privacy}",
      "followers_url": "https://api.github.com/users/htuch/followers",
      "following_url": "https://api.github.com/users/htuch/following{/other_user}",
      "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/htuch",
      "id": 10914751,
      "login": "htuch",
      "node_id": "MDQ6VXNlcjEwOTE0NzUx",
      "organizations_url": "https://api.github.com/users/htuch/orgs",
      "received_events_url": "https://api.github.com/users/htuch/received_events",
      "repos_url": "https://api.github.com/users/htuch/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/htuch"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "#3165 added additional file path sanity checking to avoid legitimate bad cases found during fuzz testing.\r\n\r\nUnfortunately it breaks one valid case we have.\r\n\r\nFor background: Consul Connect need to configure Envoy's bootstrap to point it to the local Consul agent as an xDS endpoint. In order to enforce our security model where an agent is shared between different services/pods, the bootstrap therefore has to include a secret value that can be used to Authenticate the caller when passed in gRPC headers:\r\n\r\nhttps://github.com/hashicorp/consul/blob/acfcc7daf4b795a9c531f4da275d5628a4b0017e/command/connect/envoy/bootstrap_tpl.go#L159-L166\r\n\r\n```json\r\n...\r\n    \"ads_config\": {\r\n      \"api_type\": \"GRPC\",\r\n      \"grpc_services\": {\r\n        \"initial_metadata\": [\r\n          {\r\n            \"key\": \"x-consul-token\",\r\n            \"value\": \"{{ .Token }}\"\r\n          }\r\n...\r\n```\r\n\r\nWe then have a helper command `consul connect envoy` that generates to correct bootstrap based on the local environment and the central proxy configuration in Consul before execing the envoy binary directly. (It is possible to just output the config for use with container etc. but the exec form is a nice shorthand where both consul and envoy binaries are available e.g. in Dev).\r\n\r\nThis left us with an unpleasant choice about how to pass the bootstrap config:\r\n 1. Write it to a file and pass the path\r\n 2. Pass it in the command arg\r\n\r\n1 is unpleasant because you are writing a secret to disk somewhere silently without direct user control. 2 is even worse because although the secret isn't on disk it's now visible to most users on the system that can access the /proc info for the command and see it's arguments.\r\n\r\nThe solution we came up with was to create a temp file, and immediately unlink (without closing) it so it's not accessible in the file system, disable CLOEXEC on it, write the bootstrap content to it, and then exec Envoy. We then pass Envoy the `/dev/fd/<fd>` path as the config file which allows it to open the file directly from the inherited open FD even though the file is not present on the filesystem. Code for this is in https://github.com/hashicorp/consul/blob/master/command/connect/envoy/exec_unix.go.\r\n\r\nOf course this mechanism is now broken in 1.10 by the check for `/dev`.\r\n\r\nIt seems reasonable to me to relax the checking and allow `/dev/fd/*` for this purpose.\r\n\r\nWe'd also be open to exploring alternative secure ways to pass bootstrap config to Envoy.\r\n\r\nThanks!\r\n\r\n",
  "closed_at": "2019-07-12T12:34:03Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
    "events_url": "https://api.github.com/users/htuch/events{/privacy}",
    "followers_url": "https://api.github.com/users/htuch/followers",
    "following_url": "https://api.github.com/users/htuch/following{/other_user}",
    "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/htuch",
    "id": 10914751,
    "login": "htuch",
    "node_id": "MDQ6VXNlcjEwOTE0NzUx",
    "organizations_url": "https://api.github.com/users/htuch/orgs",
    "received_events_url": "https://api.github.com/users/htuch/received_events",
    "repos_url": "https://api.github.com/users/htuch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/htuch"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7258/comments",
  "created_at": "2019-06-13T11:41:06Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7258/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/7258",
  "id": 455691740,
  "labels": [
    {
      "color": "c5def5",
      "default": false,
      "description": "Needs design doc/proposal before implementation",
      "id": 620444894,
      "name": "design proposal",
      "node_id": "MDU6TGFiZWw2MjA0NDQ4OTQ=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/design%20proposal"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7258/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NTU2OTE3NDA=",
  "number": 7258,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Consider relaxing /dev config file restrictions for /dev/fd/*",
  "updated_at": "2019-07-12T12:34:03Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/7258",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/120915?v=4",
    "events_url": "https://api.github.com/users/banks/events{/privacy}",
    "followers_url": "https://api.github.com/users/banks/followers",
    "following_url": "https://api.github.com/users/banks/following{/other_user}",
    "gists_url": "https://api.github.com/users/banks/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/banks",
    "id": 120915,
    "login": "banks",
    "node_id": "MDQ6VXNlcjEyMDkxNQ==",
    "organizations_url": "https://api.github.com/users/banks/orgs",
    "received_events_url": "https://api.github.com/users/banks/received_events",
    "repos_url": "https://api.github.com/users/banks/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/banks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/banks/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/banks"
  }
}