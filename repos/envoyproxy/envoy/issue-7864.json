{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "I find we might miss a return value of `ListenerFilter::onAccept(ListenerFilterCallbacks& cb)`\r\n\r\nSee the return type below.\r\n```\r\nenum class FilterStatus {\r\n  // Continue to further filters.\r\n  Continue,\r\n  // Stop executing further filters.\r\n  StopIteration\r\n};\r\n```\r\nSo it's impossible to express that onAccept find an error. \r\n\r\nCurrently if a listener filter wants to report an error, it must\r\n- return StopIteration at onAccept\r\n- register an event\r\n- the callback of the above event call `cb.continueFilterChain`\r\n\r\nThe drawback of this detour is that we have to report that error at the second event cycle.\r\nWhat's worse, as long as it potentially report error, we have to wait another event cycle. See https://github.com/envoyproxy/envoy/blob/b3c130679fc735696a9c5bd861caf663da73d6cf/source/extensions/filters/listener/tls_inspector/tls_inspector.cc#L71-L92 \r\n\r\nI am proposing \r\n\r\n**add a FilterStatus::Error**  \r\n\r\nallow onAccept return it, and handle this value in [ActiveSocket::continueFilterChain](https://github.com/envoyproxy/envoy/blob/master/source/server/connection_handler_impl.cc#L181)\r\n\r\nAlternatively, since the FilterStatus type is also used by NetworkFilter, we can let onAccept return a new `ListenerFilterStatus` and only add Error here.\r\n\r\nThe benefits: we can save one epoll cycle on tls_inspector and http_inspector each, every time a connection is connected on listener which owns such filter.\r\n\r\n@lizan @PiotrSikora  thoughts?\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2019-08-29T02:10:08Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1016047?v=4",
    "events_url": "https://api.github.com/users/lizan/events{/privacy}",
    "followers_url": "https://api.github.com/users/lizan/followers",
    "following_url": "https://api.github.com/users/lizan/following{/other_user}",
    "gists_url": "https://api.github.com/users/lizan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lizan",
    "id": 1016047,
    "login": "lizan",
    "node_id": "MDQ6VXNlcjEwMTYwNDc=",
    "organizations_url": "https://api.github.com/users/lizan/orgs",
    "received_events_url": "https://api.github.com/users/lizan/received_events",
    "repos_url": "https://api.github.com/users/lizan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lizan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lizan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lizan"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7864/comments",
  "created_at": "2019-08-08T07:37:24Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7864/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/7864",
  "id": 478302181,
  "labels": [
    {
      "color": "cc317c",
      "default": true,
      "description": "Questions that are neither investigations, bugs, nor enhancements",
      "id": 421403912,
      "name": "question",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MTI=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/question"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7864/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NzgzMDIxODE=",
  "number": 7864,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Add a (Listener)FilterStatus::Error?",
  "updated_at": "2019-08-29T02:10:08Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/7864",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/209726?v=4",
    "events_url": "https://api.github.com/users/lambdai/events{/privacy}",
    "followers_url": "https://api.github.com/users/lambdai/followers",
    "following_url": "https://api.github.com/users/lambdai/following{/other_user}",
    "gists_url": "https://api.github.com/users/lambdai/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lambdai",
    "id": 209726,
    "login": "lambdai",
    "node_id": "MDQ6VXNlcjIwOTcyNg==",
    "organizations_url": "https://api.github.com/users/lambdai/orgs",
    "received_events_url": "https://api.github.com/users/lambdai/received_events",
    "repos_url": "https://api.github.com/users/lambdai/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lambdai/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lambdai/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lambdai"
  }
}