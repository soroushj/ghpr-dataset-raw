{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "*Title*: \r\nWhen making client requests that contain invalid chars in an HTTP header to an Envoy instance (\"envoy-one\") that's configured to proxy over H/2 to an upstream Envoy (\"envoy-two\"), we see envoy-one return a 503 response with response flags \"UR\", without proxying the request to \u201cenvoy-two\u201d.  If we change the Envoy \u2190\u2192 Envoy communication to use HTTP/1.1, we don\u2019t see this behavior, and the request is happily proxied to the upstream Envoy.\r\n\r\n*Description*:\r\nWhile investigating some strange errors we were seeing in one of our applications, I wrote a quick test harness, so that I could make requests that contained invalid ASCII chars in HTTP headers.\r\n\r\nThe \u201cinvalid ASCII chars\u201d are defined by the relevant RFC specs [0] [1].  In this specific test case, I inserted an ASCII control char (ASCII value 31, or `0x1F`) into an HTTP header value and executed that request against our stack (Envoy \u2192 Envoy \u2192 application).\r\n\r\n*Relevant Links*:\r\n[0] https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\r\n[1]  https://www.w3.org/Protocols/rfc2616/rfc2616-sec2.html#sec2.2\r\n\r\nI saw that this would generate a 503 from the first Envoy before the request ever reaches our application, since it sits upstream of the second Envoy.\r\n\r\n\r\n*Repro steps*:\r\nThe repro config and necessary files are located in a github repo: https://github.com/dcarney/envoy-repro\r\n\r\nReproing this scenario involves setting up the following topography:\r\n<img width=\"701\" alt=\"diagram\" src=\"https://user-images.githubusercontent.com/43550801/58272017-52ae9f00-7d42-11e9-9f32-198858225f3e.png\">\r\n\r\nI have the HTTP request saved in the `request.txt` file.  It includes the HTTP header value with an invalid ASCII control character, along with other random characters.\r\n\r\nThe included Docker Compose file sets up the following:\r\n- envoy-one\r\n  - a listener on port :10001\r\n  - a cluster configured to use HTTP/2\r\n  - all traffic from the listener is sent to cluster \u201cenvoy-two\u201d on port :10002\r\n- envoy-two\r\n  - a listener on port :10002\r\n  - a cluster configured to point to https://www.google.com (The actual upstream is irrelevant, as we\u2019ll see)\r\n\r\nEach envoy has its listener port and admin port mounted to the host, and the two Envoys are able to reach each other over the Docker network \u201cenvoytest\u201d.\r\n\r\nBuild the two Envoy containers, and start everything up with:\r\n```\r\n$ docker build -t envoy:one -f Dockerfile.one .\r\n$ docker build -t envoy:two -f Dockerfile.two .\r\n$ docker-compose up\r\n```\r\n\r\nIn another terminal, run the following, in order to make the HTTP request to the first Envoy (\u201cenvoy-one\u201d):\r\n\r\n```\r\n$ cat request.txt | nc -n -i 127.0.0.1:10001\r\n```\r\n\r\nYou should see the 503 response, which is emitted by the first Envoy (\u201cenvoy-one\u201d):\r\n\r\n```\r\nHTTP/1.1 503 Service Unavailable\r\ncontent-length: 85\r\ncontent-type: text/plain\r\ndate: Wed, 22 May 2019 20:43:43 GMT\r\nserver: envoy\r\n\r\nupstream connect error or disconnect/reset before headers. reset reason: remote reset%\r\n```\r\n\r\nEnvoy access logs for the \u201cclient Envoy\u201d (envoy-one) show that the \u201cresponse flags\u201d for this request are \u201cUR\u201d, which according to the Envoy docs means:\r\n\r\n> UR: Upstream remote reset in addition to 503 response code.\r\n\r\nWe can change the connection between \u201cenvoy-one\u201d and \u201cenvoy-two\u201d to use HTTP/1.1, by removing line 43-45 in `envoy-one.yaml`:\r\n```\r\n35   clusters:\r\n...\r\n40     dns_lookup_family: V4_ONLY\r\n41     lb_policy: ROUND_ROBIN\r\n42     tls_context:\r\n43     http2_protocol_options: \r\n44       hpack_table_size:\r\n45       max_concurrent_streams:\r\n46     load_assignment:\r\n47       cluster_name: service_foobar\r\n```\r\n\r\nIf we re-build the containers, restart the Docker Compose topology, and execute the request again, we find that we now get a 404 response from https://www.google.com/foo, which is what we expect when the request is successfully proxied through both Envoys.\r\n\r\nI've included packet captures from `tcpdump` from both Envoys in the repo (`envoy-{one,two}.pcap`).  Looking at them in Wireshark clearly shows the upstream Envoy resetting the stream because of a \"protocol error\":\r\n\r\n<img width=\"1084\" alt=\"Screen Shot 2019-05-23 at 9 36 28 AM\" src=\"https://user-images.githubusercontent.com/43550801/58272454-6575a380-7d43-11e9-886f-97e3161b9d97.png\">\r\n\r\nSimilarly, in the [trace logs](https://github.com/dcarney/envoy-repro/blob/e19b4b450728a91c2cd15a233283ad0f0db9fdf4/trace.log), we see this message from the \"client Envoy\":\r\n```\r\nenvoy-one_1 [2019-05-23 16:31:36.076][11][debug][router] [source/common/router/router.cc:676] [C0][S8542315413287350126] upstream reset: reset reason remote reset\r\n```\r\n\r\nAnd this message from the upstream Envoy:\r\n```\r\nenvoy-two_1 [2019-05-23 16:31:36.074][11][debug][http2] [source/common/http/http2/codec_impl.cc:539] [C0] invalid frame: Invalid HTTP header field was received on stream 1\r\n```\r\n\r\nI would _expect_ that the client Envoy would return a 400 error, rather than constructing an H/2 request that fails to parse in the upstream Envoy.\r\n\r\n*Config*:\r\n[envoy-one config](https://github.com/dcarney/envoy-repro/blob/e19b4b450728a91c2cd15a233283ad0f0db9fdf4/envoy-one.yaml)\r\n[envoy-two config](https://github.com/dcarney/envoy-repro/blob/e19b4b450728a91c2cd15a233283ad0f0db9fdf4/envoy-two.yaml)\r\n\r\n*Logs*:\r\n[trace logs from both Envoys](https://github.com/dcarney/envoy-repro/blob/e19b4b450728a91c2cd15a233283ad0f0db9fdf4/trace.log)\r\n\r\nI'm happy to provide any more details you might need.  Thanks for looking!",
  "closed_at": "2019-07-15T21:28:02Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/18220477?v=4",
    "events_url": "https://api.github.com/users/alyssawilk/events{/privacy}",
    "followers_url": "https://api.github.com/users/alyssawilk/followers",
    "following_url": "https://api.github.com/users/alyssawilk/following{/other_user}",
    "gists_url": "https://api.github.com/users/alyssawilk/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/alyssawilk",
    "id": 18220477,
    "login": "alyssawilk",
    "node_id": "MDQ6VXNlcjE4MjIwNDc3",
    "organizations_url": "https://api.github.com/users/alyssawilk/orgs",
    "received_events_url": "https://api.github.com/users/alyssawilk/received_events",
    "repos_url": "https://api.github.com/users/alyssawilk/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/alyssawilk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alyssawilk/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/alyssawilk"
  },
  "comments": 16,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7061/comments",
  "created_at": "2019-05-23T17:19:22Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7061/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/7061",
  "id": 447781885,
  "labels": [
    {
      "color": "84b6eb",
      "default": true,
      "description": "Feature requests. Not bugs or questions.",
      "id": 421403909,
      "name": "enhancement",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDk=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/enhancement"
    },
    {
      "color": "fbca04",
      "default": true,
      "description": "Needs help!",
      "id": 645516726,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw2NDU1MTY3MjY=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/help%20wanted"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/7061/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2019-11-03T23:59:23Z",
    "closed_issues": 73,
    "created_at": "2019-07-03T16:32:43Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/11",
    "id": 4463348,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/11/labels",
    "node_id": "MDk6TWlsZXN0b25lNDQ2MzM0OA==",
    "number": 11,
    "open_issues": 0,
    "state": "closed",
    "title": "1.12.0",
    "updated_at": "2019-11-09T17:21:27Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/11"
  },
  "node_id": "MDU6SXNzdWU0NDc3ODE4ODU=",
  "number": 7061,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Malformed HTTP headers cause Envoy to 503 when proxying via HTTP/2",
  "updated_at": "2019-07-15T21:28:02Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/7061",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/43550801?v=4",
    "events_url": "https://api.github.com/users/dcarney-stripe/events{/privacy}",
    "followers_url": "https://api.github.com/users/dcarney-stripe/followers",
    "following_url": "https://api.github.com/users/dcarney-stripe/following{/other_user}",
    "gists_url": "https://api.github.com/users/dcarney-stripe/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/dcarney-stripe",
    "id": 43550801,
    "login": "dcarney-stripe",
    "node_id": "MDQ6VXNlcjQzNTUwODAx",
    "organizations_url": "https://api.github.com/users/dcarney-stripe/orgs",
    "received_events_url": "https://api.github.com/users/dcarney-stripe/received_events",
    "repos_url": "https://api.github.com/users/dcarney-stripe/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/dcarney-stripe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dcarney-stripe/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/dcarney-stripe"
  }
}