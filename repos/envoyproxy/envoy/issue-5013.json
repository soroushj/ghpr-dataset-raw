{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/2023366?v=4",
    "events_url": "https://api.github.com/users/snowp/events{/privacy}",
    "followers_url": "https://api.github.com/users/snowp/followers",
    "following_url": "https://api.github.com/users/snowp/following{/other_user}",
    "gists_url": "https://api.github.com/users/snowp/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/snowp",
    "id": 2023366,
    "login": "snowp",
    "node_id": "MDQ6VXNlcjIwMjMzNjY=",
    "organizations_url": "https://api.github.com/users/snowp/orgs",
    "received_events_url": "https://api.github.com/users/snowp/received_events",
    "repos_url": "https://api.github.com/users/snowp/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/snowp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/snowp/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/snowp"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/2023366?v=4",
      "events_url": "https://api.github.com/users/snowp/events{/privacy}",
      "followers_url": "https://api.github.com/users/snowp/followers",
      "following_url": "https://api.github.com/users/snowp/following{/other_user}",
      "gists_url": "https://api.github.com/users/snowp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/snowp",
      "id": 2023366,
      "login": "snowp",
      "node_id": "MDQ6VXNlcjIwMjMzNjY=",
      "organizations_url": "https://api.github.com/users/snowp/orgs",
      "received_events_url": "https://api.github.com/users/snowp/received_events",
      "repos_url": "https://api.github.com/users/snowp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/snowp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snowp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/snowp"
    }
  ],
  "author_association": "MEMBER",
  "body": "We have seen this crash a few times. Somehow we are trying to delete a host that the health checker doesn't know about. I would imagine this somehow has to do with us specifying the same DNS host multiple times but I'm not sure. \r\n\r\ncc @dio @snowp for recent work in this area. cc @tonya11en who can explain the config we use that might be causing this. I haven't looked into this in any detail yet.\r\n\r\n```\r\nBacktrace:\r\n#0  operator() (this=0x6ba7428, __den=23, __num=<optimized out>) at /usr/include/c++/5/bits/hashtable_policy.h:446\r\n#0  operator() (this=0x6ba7428, __den=23, __num=<optimized out>) at /usr/include/c++/5/bits/hashtable_policy.h:446\r\n#1  _M_bucket_index (this=0x6ba7428, __n=23, __p=0x0) at /usr/include/c++/5/bits/hashtable_policy.h:1180\r\n#2  _M_bucket_index (this=0x6ba7428, __n=0x0) at /usr/include/c++/5/bits/hashtable.h:617\r\n#3  erase (__it=..., this=0x6ba7428) at /usr/include/c++/5/bits/hashtable.h:1732\r\n#4  erase (__it=..., this=0x6ba7428) at /usr/include/c++/5/bits/hashtable.h:745\r\n#5  erase (__position=..., this=0x6ba7428) at /usr/include/c++/5/bits/unordered_map.h:523\r\n#6  Envoy::Upstream::HealthCheckerImplBase::onClusterMemberUpdate (this=0x6ba7350, hosts_added=..., hosts_removed=...) at external/envoy/source/common/upstream/health_checker_base_impl.cc:126\r\n#7  0x000000000067448f in operator() (__args#2=..., __args#1=..., __args#0=1, this=<optimized out>) at /usr/include/c++/5/functional:2267\r\n#8  runCallbacks (args#2=..., args#1=..., args#0=1, this=<optimized out>) at bazel-out/k8-opt/bin/external/envoy/source/common/common/_virtual_includes/callback_impl_lib/common/common/callback_impl.h:40\r\n#9  runUpdateCallbacks (hosts_removed=..., hosts_added=..., priority=1, this=<optimized out>) at bazel-out/k8-opt/bin/external/envoy/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:348\r\n#10 operator() (hosts_removed=..., hosts_added=..., priority=1, __closure=<optimized out>) at external/envoy/source/common/upstream/upstream_impl.cc:295\r\n#11 std::_Function_handler<void(unsigned int, const std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > >&, const std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > >&), Envoy::Upstream::PrioritySetImpl::getOrCreateHostSet(uint32_t, absl::optional<unsigned int>)::<lambda(uint32_t, const HostVector&, const HostVector&)> >::_M_invoke(const std::_Any_data &, <unknown type in /usr/sbin/envoy, CU 0x51da897, DIE 0x52faca0>, const std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > > &, const std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > > &) (__functor=..., __args#0=<optimized out>, __args#1=..., __args#2=...) at /usr/include/c++/5/functional:1871\r\n#12 0x000000000067b25c in operator() (__args#2=..., __args#1=..., __args#0=1, this=<optimized out>) at /usr/include/c++/5/functional:2267\r\n#13 runCallbacks (args#2=..., args#1=..., args#0=1, this=0x9ad6a70) at bazel-out/k8-opt/bin/external/envoy/source/common/common/_virtual_includes/callback_impl_lib/common/common/callback_impl.h:40\r\n#14 runUpdateCallbacks (hosts_removed=..., hosts_added=..., this=0x9ad6a20) at bazel-out/k8-opt/bin/external/envoy/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:289\r\n#15 Envoy::Upstream::HostSetImpl::updateHosts (this=this@entry=0x9ad6a20, hosts=..., healthy_hosts=..., hosts_per_locality=..., healthy_hosts_per_locality=..., locality_weights=..., hosts_added=..., hosts_removed=..., overprovisioning_factor=...) at external/envoy/source/common/upstream/upstream_impl.cc:255\r\n#16 0x0000000000685b1e in Envoy::Upstream::PriorityStateManager::updateClusterPrioritySet(unsigned int, std::shared_ptr<std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > > >&&, absl::optional<std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > > > const&, absl::optional<std::vector<std::shared_ptr<Envoy::Upstream::Host>, std::allocator<std::shared_ptr<Envoy::Upstream::Host> > > > const&, absl::optional<Envoy::Upstream::Host::HealthFlag>, absl::optional<unsigned int>) (this=this@entry=0x7ffd1a372bf0, priority=priority@entry=1, current_hosts=current_hosts@entry=<unknown type in /usr/sbin/envoy, CU 0x51da897, DIE 0x5378365>, hosts_added=..., hosts_removed=..., health_checker_flag=..., health_checker_flag@entry=..., overprovisioning_factor=...) at external/envoy/source/common/upstream/upstream_impl.cc:862\r\n#17 0x00000000006864d1 in Envoy::Upstream::StrictDnsClusterImpl::updateAllHosts (this=0x6ba6dc0, hosts_added=..., hosts_removed=..., current_priority=1) at external/envoy/source/common/upstream/upstream_impl.cc:1158\r\n#18 0x0000000000686bc5 in operator() (address_list=<optimized out>, __closure=0x141f81e8) at external/envoy/source/common/upstream/upstream_impl.cc:1210\r\n#19 std::_Function_handler<void(const std::list<std::shared_ptr<const Envoy::Network::Address::Instance>, std::allocator<std::shared_ptr<const Envoy::Network::Address::Instance> > >&&), Envoy::Upstream::StrictDnsClusterImpl::ResolveTarget::startResolve()::<lambda(const std::list<std::shared_ptr<const Envoy::Network::Address::Instance>, std::allocator<std::shared_ptr<const Envoy::Network::Address::Instance> > >&&)> >::_M_invoke(const std::_Any_data &, <unknown type in /usr/sbin/envoy, CU 0x51da897, DIE 0x537de5c>) (__functor=..., __args#0=<unknown type in /usr/sbin/envoy, CU 0x51da897, DIE 0x537de5c>) at /usr/include/c++/5/functional:1871\r\n#20 0x00000000005fb62e in operator() (__args#0=<optimized out>, this=0x141f81e8) at /usr/include/c++/5/functional:2267\r\n#21 Envoy::Network::DnsResolverImpl::PendingResolution::onAresHostCallback (this=0x141f81e0, status=<optimized out>, timeouts=2, hostent=0x0) at external/envoy/source/common/network/dns_impl.cc:124\r\n#22 0x00000000005fcb7a in end_hquery (hquery=0x16a5ccc0, status=<optimized out>, host=0x0) at ../ares_gethostbyname.c:234\r\n#23 0x00000000005fcdfc in next_lookup (hquery=hquery@entry=0x16a5ccc0, status_code=status_code@entry=12) at ../ares_gethostbyname.c:176\r\n#24 0x00000000005fcf72 in host_callback (arg=0x16a5ccc0, status=12, timeouts=<optimized out>, abuf=<optimized out>, alen=<optimized out>) at ../ares_gethostbyname.c:228\r\n#25 0x0000000000603c2c in end_squery (squery=0xcf4a100, status=<optimized out>, abuf=<optimized out>, alen=<optimized out>) at ../ares_search.c:210\r\n#26 0x0000000000603d12 in search_callback (arg=0xcf4a100, status=<optimized out>, timeouts=<optimized out>, abuf=<optimized out>, alen=<optimized out>) at ../ares_search.c:157\r\n#27 0x00000000006039bb in qcallback (arg=0x17c87a60, status=<optimized out>, timeouts=<optimized out>, abuf=<optimized out>, alen=<optimized out>) at ../ares_query.c:183\r\n#28 0x0000000000602084 in end_query (channel=0x2194000, query=0x167acc30, status=12, abuf=abuf@entry=0x0, alen=alen@entry=0) at ../ares_process.c:1437\r\n#29 0x00000000006029a7 in next_server (channel=channel@entry=0x2194000, query=<optimized out>, now=now@entry=0x7ffd1a3730c0) at ../ares_process.c:802\r\n#30 0x00000000006036f4 in process_timeouts (now=0x7ffd1a3730c0, channel=0x2194000) at ../ares_process.c:561\r\n#31 processfds (channel=0x2194000, read_fds=read_fds@entry=0x0, read_fd=read_fd@entry=-1, write_fds=write_fds@entry=0x0, write_fd=write_fd@entry=-1) at ../ares_process.c:132\r\n#32 0x0000000000603973 in ares_process_fd (channel=<optimized out>, read_fd=read_fd@entry=-1, write_fd=write_fd@entry=-1) at ../ares_process.c:152\r\n#33 0x00000000005fbd9c in onEventCallback (events=0, fd=-1, this=0x20d4720) at external/envoy/source/common/network/dns_impl.cc:168\r\n#34 operator() (__closure=<optimized out>) at external/envoy/source/common/network/dns_impl.cc:27\r\n#35 std::_Function_handler<void(), Envoy::Network::DnsResolverImpl::DnsResolverImpl(Envoy::Event::Dispatcher&, const std::vector<std::shared_ptr<const Envoy::Network::Address::Instance> >&)::<lambda()> >::_M_invoke(const std::_Any_data &) (__functor=...) at /usr/include/c++/5/functional:1871\r\n#36 0x00000000008aef80 in event_process_active_single_queue (base=base@entry=0x21922c0, max_to_process=max_to_process@entry=2147483647, endtime=endtime@entry=0x0, activeq=<optimized out>) at ../event.c:1646\r\n#37 0x00000000008af65f in event_process_active (base=base@entry=0x21922c0) at ../event.c:1738\r\n#38 0x00000000008b23b8 in event_base_loop (base=0x21922c0, flags=<optimized out>) at ../event.c:1961\r\n#39 0x00000000005b75cc in Envoy::Server::InstanceImpl::run (this=0x2192000) at external/envoy/source/server/server.cc:460\r\n#40 0x0000000000452671 in Envoy::MainCommonBase::run (this=this@entry=0x20f0870) at external/envoy/source/exe/main_common.cc:102\r\n#41 0x0000000000409a53 in run (this=<optimized out>) at bazel-out/k8-opt/bin/external/envoy/source/exe/_virtual_includes/envoy_main_common_lib/exe/main_common.h:81\r\n#42 main (argc=17, argv=0x7ffd1a3734b8) at external/envoy/source/exe/main.cc:37\r\n```",
  "closed_at": "2018-11-24T18:57:27Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/5013/comments",
  "created_at": "2018-11-12T00:06:13Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/5013/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/5013",
  "id": 379579510,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    },
    {
      "color": "fbca04",
      "default": true,
      "description": "Needs help!",
      "id": 645516726,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw2NDU1MTY3MjY=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/help%20wanted"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/5013/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2018-12-21T19:26:51Z",
    "closed_issues": 62,
    "created_at": "2018-09-21T05:26:05Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
      "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattklein123/followers",
      "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattklein123",
      "id": 6305260,
      "login": "mattklein123",
      "node_id": "MDQ6VXNlcjYzMDUyNjA=",
      "organizations_url": "https://api.github.com/users/mattklein123/orgs",
      "received_events_url": "https://api.github.com/users/mattklein123/received_events",
      "repos_url": "https://api.github.com/users/mattklein123/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattklein123"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/envoyproxy/envoy/milestone/8",
    "id": 3676682,
    "labels_url": "https://api.github.com/repos/envoyproxy/envoy/milestones/8/labels",
    "node_id": "MDk6TWlsZXN0b25lMzY3NjY4Mg==",
    "number": 8,
    "open_issues": 0,
    "state": "closed",
    "title": "1.9.0",
    "updated_at": "2018-12-21T19:26:51Z",
    "url": "https://api.github.com/repos/envoyproxy/envoy/milestones/8"
  },
  "node_id": "MDU6SXNzdWUzNzk1Nzk1MTA=",
  "number": 5013,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "crash deleting unknown host from health checker",
  "updated_at": "2018-11-24T18:57:27Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/5013",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  }
}