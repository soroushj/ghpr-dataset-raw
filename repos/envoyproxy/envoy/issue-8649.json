{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "*Title*: ext_authz filter should allow multiple `Set-Cookie` headers to be added by the `Check` response\r\n\r\n*Description*:\r\n\r\nWe are writing an implementation of the [ext_authz](https://github.com/envoyproxy/envoy/tree/master/test/extensions/filters/http/ext_authz)'s `Check` interface. Our implementation would like to return a `Denied` status, set the http response to be a 302, and add multiple `Set-Cookie` headers to the http response to manipulate multiple cookies.\r\n\r\nAs additional background, it is not possible in many browsers to manipulate multiple cookies in a single `Set-Cookie` header because it is disallowed by [Section 3 of RFC 6265](https://tools.ietf.org/html/rfc6265#section-3):\r\n\r\n> Origin servers SHOULD NOT fold multiple Set-Cookie header fields into a single header field.\r\n\r\nAs a result, when given a `Set-Cookie` header of the form `Set-Cookie: a=1, b=2`, modern browsers will ignore the `b` cookie.  Instead, they need the header to be repeated like this:\r\n```\r\nSet-Cookie: a=1\r\nSet-Cookie: b=2\r\n```\r\n\r\nSo, we would like to add multiple `Set-Cookie` headers, but it seems that the `ext_authz` filter is preventing this.\r\n\r\nToday, when multiple headers of the same name are added by the `Check` response, the ext_authz filter always only adds the last one.  You can see the relevant code in [ext_authz.cc](https://github.com/envoyproxy/envoy/blob/6def4a4a4cecdd1f54024cea6084a2bc1d9ef83d/source/extensions/filters/http/ext_authz/ext_authz.cc#L211).\r\n\r\nIt seems like the `response_headers.remove(header.first)` line is intended to satisfy the requirement described by the [OverrideEncodingHeaders unit test](https://github.com/envoyproxy/envoy/blob/6def4a4a4cecdd1f54024cea6084a2bc1d9ef83d/test/extensions/filters/http/ext_authz/ext_authz_test.cc#L1171).  However, that line of code also seems to cause it to ignore the `Check` response's intention to add multiple headers of the same name.\r\n\r\n*Proposed Solution*:\r\n\r\nOne possible solution would be for the `ext_authz` filter to ensure that headers from the `Check` response do override existing headers, while also allowing the `Check` response to override a single existing header with multiple headers of the same name.  For example, this could be implemented in two passes: first, call `remove` on all of the headers set by the `Check` response, and then in a second pass add all of the headers set by the `Check` response. The [`addCopy`](https://github.com/envoyproxy/envoy/blob/6def4a4a4cecdd1f54024cea6084a2bc1d9ef83d/source/common/http/header_map_impl.cc#L427) method already has the smarts built-in to decide if a header with multiple values should be folded (combined into a single header with multiple values separated by commas) or should be repeated as separate headers of the same name. Specifically, the `addCopy` method is already smart enough to avoid folding `Set-Cookie` headers, which is exactly what we need.\r\n\r\n*Relevant Links*:\r\n\r\n- [There was a similar issue filed against Envoy](https://github.com/envoyproxy/envoy/issues/7488), but it was determined that Envoy was correctly allowing multiple `Set-Cookie` headers to be added.\r\n- [There was also a similar issue in Istio Mixer](https://github.com/istio/istio/pull/15581) and that fix was merged.\r\n",
  "closed_at": "2019-11-06T19:26:22Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1016047?v=4",
    "events_url": "https://api.github.com/users/lizan/events{/privacy}",
    "followers_url": "https://api.github.com/users/lizan/followers",
    "following_url": "https://api.github.com/users/lizan/following{/other_user}",
    "gists_url": "https://api.github.com/users/lizan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lizan",
    "id": 1016047,
    "login": "lizan",
    "node_id": "MDQ6VXNlcjEwMTYwNDc=",
    "organizations_url": "https://api.github.com/users/lizan/orgs",
    "received_events_url": "https://api.github.com/users/lizan/received_events",
    "repos_url": "https://api.github.com/users/lizan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lizan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lizan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lizan"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8649/comments",
  "created_at": "2019-10-17T18:45:47Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8649/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/8649",
  "id": 508655570,
  "labels": [
    {
      "color": "84b6eb",
      "default": true,
      "description": "Feature requests. Not bugs or questions.",
      "id": 421403909,
      "name": "enhancement",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDk=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/enhancement"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8649/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MDg2NTU1NzA=",
  "number": 8649,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "ext_authz filter should allow multiple `Set-Cookie` headers to be added by the `Check` response",
  "updated_at": "2019-11-06T19:26:22Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/8649",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/25013435?v=4",
    "events_url": "https://api.github.com/users/cfryanr/events{/privacy}",
    "followers_url": "https://api.github.com/users/cfryanr/followers",
    "following_url": "https://api.github.com/users/cfryanr/following{/other_user}",
    "gists_url": "https://api.github.com/users/cfryanr/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/cfryanr",
    "id": 25013435,
    "login": "cfryanr",
    "node_id": "MDQ6VXNlcjI1MDEzNDM1",
    "organizations_url": "https://api.github.com/users/cfryanr/orgs",
    "received_events_url": "https://api.github.com/users/cfryanr/received_events",
    "repos_url": "https://api.github.com/users/cfryanr/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/cfryanr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cfryanr/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/cfryanr"
  }
}