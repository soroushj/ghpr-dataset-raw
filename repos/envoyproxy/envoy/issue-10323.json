{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "\r\n***Description*:**\r\n\r\nCurrently, the Envoy [fault injection filter](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/fault_filter#config-http-filters-fault-injection) supports the ability to inject an \u2018abort\u2019 fault into a response stream. These faults can be [configured](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/fault/v2/fault.proto#envoy-api-msg-config-filter-http-fault-v2-faultabort) with an HTTP status code that will be returned to the client when the request is failed.\r\n\r\nFor gRPC services, the status of the request is returned to the caller in a combination of both an HTTP status code and a gRPC status code, both of which are carried in HTTP/2 headers (or trailers). Envoy\u2019s fault injection filter doesn\u2019t currently support a way of specifying the gRPC status code to return in case of failure, instead, it implicitly maps the HTTP status code to gRPC status code based on [this](https://github.com/envoyproxy/envoy/blob/c85bf324753414c205f1006724d2f5e67dec2d76/source/common/grpc/status.cc#L6). In order to simulate specific gRPC failure modes, we need to add support for configuring gRPC status code in abort fault similar to the HTTP status code.\r\n\r\n***Implementation details***\r\n\r\nA new \u2018grpc_status\u2019 field will be added to the envoy fault injection filter configuration. When this field is set and the conditions for fault injection are met, Envoy will fail the gRPC call. The upstream service will not be invoked and a [\u2018Trailers-Only\u2019](https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md) gRPC response will be sent to the client. The gRPC status code in this response will be set to the configured value.\r\n\r\nThe [utility function](https://github.com/envoyproxy/envoy/blob/9be85fbc561c373875a0102dddf9baf5a86543c1/source/common/http/utility.h#L191) which is being used to send the fault response, already has the functionality to use a specific gRPC status code instead of deriving it based on an HTTP status code, but it is currently being passed null for the gRPC status code.\r\n\r\nChanges required to achieve this functionality will be:\r\n\r\n- [ ] Introduce a new field \u201cgrpc_status\u201d (uint32) in envoy\u2019s fault filter configuration inside FaultAbort [here](https://github.com/envoyproxy/envoy/blob/139f926c1517672cdcc833e44c3b64d480e6ef39/api/envoy/config/filter/http/fault/v2/fault.proto#L30)\r\n- [ ] Read the new field and pass it to the [utility function](https://github.com/envoyproxy/envoy/blob/9be85fbc561c373875a0102dddf9baf5a86543c1/source/common/http/utility.h#L191) via [this](https://github.com/envoyproxy/envoy/blob/c5f4302325223765b660f0f366ce25bf8570e7a5/source/extensions/filters/http/fault/fault_filter.cc#L367) when set.\r\n- [ ] Add new unit test(s) for gRPC code [here](https://github.com/envoyproxy/envoy/blob/a0d952048c536c2da29be79df480a046ccf2be89/test/extensions/filters/http/fault/fault_filter_test.cc#L225)\r\n- [ ] Documentation update [here](https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/fault/v2/fault.proto#config-filter-http-fault-v2-faultabort) and [here](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/fault_filter#runtime)\r\n",
  "closed_at": "2020-04-27T20:19:44Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10323/comments",
  "created_at": "2020-03-10T22:50:59Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10323/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/10323",
  "id": 578906233,
  "labels": [
    {
      "color": "e99695",
      "default": false,
      "description": "",
      "id": 1717583979,
      "name": "area/fault",
      "node_id": "MDU6TGFiZWwxNzE3NTgzOTc5",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/fault"
    },
    {
      "color": "fbca04",
      "default": true,
      "description": "Needs help!",
      "id": 645516726,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw2NDU1MTY3MjY=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/help%20wanted"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/10323/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1Nzg5MDYyMzM=",
  "number": 10323,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Fault Injection: Support gRPC status code in abort fault",
  "updated_at": "2020-04-27T20:19:44Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/10323",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/48493084?v=4",
    "events_url": "https://api.github.com/users/vijayrajput1/events{/privacy}",
    "followers_url": "https://api.github.com/users/vijayrajput1/followers",
    "following_url": "https://api.github.com/users/vijayrajput1/following{/other_user}",
    "gists_url": "https://api.github.com/users/vijayrajput1/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/vijayrajput1",
    "id": 48493084,
    "login": "vijayrajput1",
    "node_id": "MDQ6VXNlcjQ4NDkzMDg0",
    "organizations_url": "https://api.github.com/users/vijayrajput1/orgs",
    "received_events_url": "https://api.github.com/users/vijayrajput1/received_events",
    "repos_url": "https://api.github.com/users/vijayrajput1/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/vijayrajput1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vijayrajput1/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/vijayrajput1"
  }
}