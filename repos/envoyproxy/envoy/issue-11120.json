{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/17607122?v=4",
    "events_url": "https://api.github.com/users/Shikugawa/events{/privacy}",
    "followers_url": "https://api.github.com/users/Shikugawa/followers",
    "following_url": "https://api.github.com/users/Shikugawa/following{/other_user}",
    "gists_url": "https://api.github.com/users/Shikugawa/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Shikugawa",
    "id": 17607122,
    "login": "Shikugawa",
    "node_id": "MDQ6VXNlcjE3NjA3MTIy",
    "organizations_url": "https://api.github.com/users/Shikugawa/orgs",
    "received_events_url": "https://api.github.com/users/Shikugawa/received_events",
    "repos_url": "https://api.github.com/users/Shikugawa/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Shikugawa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Shikugawa/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Shikugawa"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/17607122?v=4",
      "events_url": "https://api.github.com/users/Shikugawa/events{/privacy}",
      "followers_url": "https://api.github.com/users/Shikugawa/followers",
      "following_url": "https://api.github.com/users/Shikugawa/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shikugawa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Shikugawa",
      "id": 17607122,
      "login": "Shikugawa",
      "node_id": "MDQ6VXNlcjE3NjA3MTIy",
      "organizations_url": "https://api.github.com/users/Shikugawa/orgs",
      "received_events_url": "https://api.github.com/users/Shikugawa/received_events",
      "repos_url": "https://api.github.com/users/Shikugawa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Shikugawa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shikugawa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Shikugawa"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "When creating clusters that reference SDS certificates, the warming behavior does not seem correct. My expectation is that until the secret is sent, the cluster will be marked as \"warming\" until the initial_fetch_timeout, and block the rest of initialization from occuring.\r\n\r\nWhat I am actually seeing is initialization *is* blocked, but there is nothing indicating the clusters are warming.\r\n\r\nUsing this config:\r\n`docker run -v $HOME/kube/local:/config -p 15000:15000 envoyproxy/envoy-dev -c /config/envoy-sds-lds.yaml --log-format-prefix-with-location 0 --reject-unknown-dynamic-fields`\r\n\r\nwith `envoy  version: 49efb9841a58ebdc43a666f55c445911c8e4181c/1.15.0-dev/Clean/RELEASE/BoringSSL`\r\n\r\nand config files: \r\n\r\ncds.yaml:\r\n```yaml\r\nresources:\r\n- \"@type\": type.googleapis.com/envoy.config.cluster.v3.Cluster\r\n  name: outbound_cluster_tls\r\n  connect_timeout: 5s\r\n  max_requests_per_connection: 1\r\n  load_assignment:\r\n    cluster_name: xds-grpc\r\n    endpoints:\r\n    - lb_endpoints:\r\n      - endpoint:\r\n          address:\r\n            socket_address:\r\n              address: 127.0.0.1\r\n              port_value: 8080\r\n  type: STATIC\r\n  transport_socket:\r\n    name: envoy.transport_sockets.tls\r\n    typed_config:\r\n      \"@type\": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext\r\n      common_tls_context:\r\n        tls_certificate_sds_secret_configs:\r\n          - name: \"default\"\r\n            sds_config:\r\n              initial_fetch_timeout: 20s\r\n              api_config_source:\r\n                api_type: GRPC\r\n                grpc_services:\r\n                  - envoy_grpc:\r\n                      cluster_name: \"sds-grpc\"\r\n                refresh_delay: 60s\r\n        combined_validation_context:\r\n          default_validation_context: {}\r\n          validation_context_sds_secret_config:\r\n            name: ROOTCA\r\n            sds_config:\r\n              initial_fetch_timeout: 20s\r\n              api_config_source:\r\n                api_type: GRPC\r\n                grpc_services:\r\n                - envoy_grpc:\r\n                    cluster_name: sds-grpc    \r\n```\r\n\r\nenvoy-sds-lds.yaml:\r\n```yaml\r\nadmin:\r\n  access_log_path: /dev/null\r\n  address:\r\n    socket_address:\r\n      address: 0.0.0.0\r\n      port_value: 15000\r\nnode:\r\n  id: id\r\n  cluster: sdstest\r\ndynamic_resources:\r\n  lds_config:\r\n    api_config_source:\r\n      api_type: GRPC\r\n      grpc_services:\r\n        envoy_grpc:\r\n          cluster_name: lds\r\n  cds_config:\r\n    path: /config/cds.yaml\r\nstatic_resources:\r\n  clusters:    \r\n  - name: sds-grpc\r\n    type: STATIC\r\n    http2_protocol_options: {}\r\n    connect_timeout: 5s\r\n    lb_policy: ROUND_ROBIN\r\n  - name: lds\r\n    type: STATIC\r\n    http2_protocol_options: {}\r\n    connect_timeout: 5s\r\n    lb_policy: ROUND_ROBIN\r\n```\r\n\r\nBasically what should happen here is we get a dynamic CDS cluster with SDS config. This SDS config fails, as the sds server is not setup. We have initial_fetch_timeout, so for 20s everything should be warming.\r\n\r\nWhat we see instead:\r\n\r\n* Stats are not showing warming:\r\n```\r\ncluster_manager.cds.init_fetch_timeout: 0\r\ncluster_manager.cds.update_attempt: 1\r\ncluster_manager.cds.update_failure: 0\r\ncluster_manager.cds.update_rejected: 0\r\ncluster_manager.cds.update_success: 1\r\ncluster_manager.cds.update_time: 1588972075968\r\ncluster_manager.cds.version: 17241709254077376921\r\ncluster_manager.cluster_added: 3\r\ncluster_manager.cluster_modified: 0\r\ncluster_manager.cluster_removed: 0\r\ncluster_manager.cluster_updated: 0\r\ncluster_manager.cluster_updated_via_merge: 0\r\ncluster_manager.update_merge_cancelled: 0\r\ncluster_manager.update_out_of_merge_window: 0\r\ncluster_manager.warming_clusters: 0\r\n```\r\n\r\nWe also see `init_fetch_timeout` is `0`; this does not change after 20s\r\n\r\n* LDS is not requested until 20s later, indicating the initial_fetch_timeout is respected. This can be seen in the logs:\r\n(note - for simple testing I don't have a real LDS server, but we can see its not even attempted until 20s in)\r\n```\r\n[2020-05-08 21:07:55.967][1][info][upstream] cds: add 1 cluster(s), remove 2 cluster(s)\r\n[2020-05-08 21:07:55.968][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:55.968][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:55.968][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:55.968][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:55.968][1][info][upstream] cds: add/update cluster 'outbound_cluster_tls'\r\n[2020-05-08 21:07:55.968][1][info][main] starting main dispatch loop\r\n[2020-05-08 21:07:56.703][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:56.703][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:56.938][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:56.938][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:57.135][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:57.135][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:57.682][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:57.682][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:07:58.671][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:07:58.671][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:08:08.992][1][warning][config] StreamSecrets gRPC config stream closed: 14, no healthy upstream\r\n[2020-05-08 21:08:08.992][1][warning][config] Unable to establish new stream\r\n[2020-05-08 21:08:15.967][1][info][upstream] cm init: all clusters initialized\r\n[2020-05-08 21:08:15.967][1][info][main] all clusters initialized. initializing init manager\r\n[2020-05-08 21:08:15.967][1][warning][config] StreamListeners gRPC config stream closed: 14, no healthy upstream\r\n```\r\n\r\n* `dynamic_active_clusters` shows the cluster in cds.yaml. I would expect it to be \"warming\".\r\n\r\nThis example above is meant to simplify it, I have originally seen this with a normal deployment using ADS gRPC server (Istio) not just files.",
  "closed_at": "2020-10-27T18:35:23Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1016047?v=4",
    "events_url": "https://api.github.com/users/lizan/events{/privacy}",
    "followers_url": "https://api.github.com/users/lizan/followers",
    "following_url": "https://api.github.com/users/lizan/following{/other_user}",
    "gists_url": "https://api.github.com/users/lizan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lizan",
    "id": 1016047,
    "login": "lizan",
    "node_id": "MDQ6VXNlcjEwMTYwNDc=",
    "organizations_url": "https://api.github.com/users/lizan/orgs",
    "received_events_url": "https://api.github.com/users/lizan/received_events",
    "repos_url": "https://api.github.com/users/lizan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lizan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lizan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lizan"
  },
  "comments": 24,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/11120/comments",
  "created_at": "2020-05-08T21:11:27Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/11120/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/11120",
  "id": 614989397,
  "labels": [
    {
      "color": "bcdbf4",
      "default": false,
      "description": "SDS related",
      "id": 2054167604,
      "name": "area/sds",
      "node_id": "MDU6TGFiZWwyMDU0MTY3NjA0",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/sds"
    },
    {
      "color": "0e8a16",
      "default": false,
      "description": "",
      "id": 1715345012,
      "name": "area/service discovery",
      "node_id": "MDU6TGFiZWwxNzE1MzQ1MDEy",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/area/service%20discovery"
    },
    {
      "color": "0052cc",
      "default": false,
      "description": "Potential bug that needs verification",
      "id": 1715341851,
      "name": "investigate",
      "node_id": "MDU6TGFiZWwxNzE1MzQxODUx",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/investigate"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/11120/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MTQ5ODkzOTc=",
  "number": 11120,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "sds: cluster not warming while certificates are being fetched; immediately marked active",
  "updated_at": "2020-10-27T18:35:23Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/11120",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/623453?v=4",
    "events_url": "https://api.github.com/users/howardjohn/events{/privacy}",
    "followers_url": "https://api.github.com/users/howardjohn/followers",
    "following_url": "https://api.github.com/users/howardjohn/following{/other_user}",
    "gists_url": "https://api.github.com/users/howardjohn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/howardjohn",
    "id": 623453,
    "login": "howardjohn",
    "node_id": "MDQ6VXNlcjYyMzQ1Mw==",
    "organizations_url": "https://api.github.com/users/howardjohn/orgs",
    "received_events_url": "https://api.github.com/users/howardjohn/received_events",
    "repos_url": "https://api.github.com/users/howardjohn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/howardjohn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/howardjohn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/howardjohn"
  }
}