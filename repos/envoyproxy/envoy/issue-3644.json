{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8603643?v=4",
    "events_url": "https://api.github.com/users/ggreenway/events{/privacy}",
    "followers_url": "https://api.github.com/users/ggreenway/followers",
    "following_url": "https://api.github.com/users/ggreenway/following{/other_user}",
    "gists_url": "https://api.github.com/users/ggreenway/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ggreenway",
    "id": 8603643,
    "login": "ggreenway",
    "node_id": "MDQ6VXNlcjg2MDM2NDM=",
    "organizations_url": "https://api.github.com/users/ggreenway/orgs",
    "received_events_url": "https://api.github.com/users/ggreenway/received_events",
    "repos_url": "https://api.github.com/users/ggreenway/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ggreenway/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ggreenway/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ggreenway"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/8603643?v=4",
      "events_url": "https://api.github.com/users/ggreenway/events{/privacy}",
      "followers_url": "https://api.github.com/users/ggreenway/followers",
      "following_url": "https://api.github.com/users/ggreenway/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggreenway/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ggreenway",
      "id": 8603643,
      "login": "ggreenway",
      "node_id": "MDQ6VXNlcjg2MDM2NDM=",
      "organizations_url": "https://api.github.com/users/ggreenway/orgs",
      "received_events_url": "https://api.github.com/users/ggreenway/received_events",
      "repos_url": "https://api.github.com/users/ggreenway/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ggreenway/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggreenway/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ggreenway"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "```\r\nvoid DispatcherImpl::runPostCallbacks() {\r\n  std::function<void()> callback;\r\n  while (true) {\r\n    {\r\n      Thread::LockGuard lock(post_lock_);\r\n      if (post_callbacks_.empty()) {\r\n        return;\r\n      }\r\n      callback = post_callbacks_.front();\r\n      post_callbacks_.pop_front();\r\n    }\r\n    callback();\r\n  }\r\n}\r\n```\r\n\r\nIn DispatcherImpl::runPostCallbacks(), callback is declared outside the loop and assigned to on each iteration. Then we release the lock and call the callback, then repeat.\r\n\r\nThe problem is on the next iteration. We assign callback again. This causes the previous iteration callback to get destructed. If that lambda holds an object that gets destructed, the destructor is run while holding the post_lock_. If running the destructor causes some chain of events that result in post()ing back to the same thread, the thread will deadlock itself.\r\n\r\nCallstack showing this:\r\n\r\n```\r\n#7  0x000000000092427d in absl::Mutex::Lock() ()\r\n#8  0x0000000000678fa3 in Envoy::Thread::MutexBasicLockable::lock (this=0x38b6070) at bazel-out/k8-opt/bin/source/common/common/_virtual_includes/thread_lib/common/common/thread.h:45\r\n#9  Envoy::Thread::LockGuard::LockGuard (lock=..., this=<synthetic pointer>) at bazel-out/k8-opt/bin/source/common/common/_virtual_includes/lock_guard_lib/common/common/lock_guard.h:103\r\n#10 Envoy::Event::DispatcherImpl::post(std::function<void ()>) (this=0x38b6000, callback=...) at source/common/event/dispatcher_impl.cc:142\r\n#11 0x000000000069f72e in Envoy::Stats::ThreadLocalStoreImpl::releaseScopeCrossThread (this=0x380a420, scope=scope@entry=0xcd876c0) at source/common/stats/thread_local_store.cc:139\r\n#12 0x00000000006a09dd in Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::~ScopeImpl (this=0xcd876c0, __in_chrg=<optimized out>) at source/common/stats/thread_local_store.cc:173\r\n#13 0x00000000006a0b41 in Envoy::Stats::ThreadLocalStoreImpl::ScopeImpl::~ScopeImpl (this=0xcd876c0, __in_chrg=<optimized out>) at source/common/stats/thread_local_store.cc:173\r\n#14 0x00000000006eff83 in std::default_delete<Envoy::Stats::Scope>::operator() (this=<optimized out>, __ptr=<optimized out>) at /usr/include/c++/5/bits/unique_ptr.h:76\r\n#15 std::unique_ptr<Envoy::Stats::Scope, std::default_delete<Envoy::Stats::Scope> >::~unique_ptr (this=0x6988068, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/unique_ptr.h:236\r\n#16 Envoy::Upstream::ClusterInfoImpl::~ClusterInfoImpl (this=0x6988000, __in_chrg=<optimized out>)\r\n    at bazel-out/k8-opt/bin/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:309\r\n#17 0x00000000006efff1 in Envoy::Upstream::ClusterInfoImpl::~ClusterInfoImpl (this=0x6988000, __in_chrg=<optimized out>)\r\n    at bazel-out/k8-opt/bin/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:309\r\n#18 0x00000000006efbea in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1195bf80) at /usr/include/c++/5/bits/shared_ptr_base.h:150\r\n#19 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7650310, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:659\r\n#20 std::__shared_ptr<Envoy::Upstream::ClusterInfo const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7650308, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:925\r\n#21 std::shared_ptr<Envoy::Upstream::ClusterInfo const>::~shared_ptr (this=0x7650308, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr.h:93\r\n#22 Envoy::Upstream::HostDescriptionImpl::~HostDescriptionImpl (__vtt_parm=0xc314e0 <VTT for Envoy::Upstream::HostImpl+8>, this=0x7650300, __in_chrg=<optimized out>)\r\n    at bazel-out/k8-opt/bin/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:55\r\n#23 Envoy::Upstream::HostImpl::~HostImpl (this=0x7650300, __in_chrg=<optimized out>, __vtt_parm=<optimized out>)\r\n    at bazel-out/k8-opt/bin/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:122\r\n#24 Envoy::Upstream::HostImpl::~HostImpl (this=0x7650300, __in_chrg=<optimized out>, __vtt_parm=<optimized out>)\r\n    at bazel-out/k8-opt/bin/source/common/upstream/_virtual_includes/upstream_includes/common/upstream/upstream_impl.h:122\r\n#25 0x0000000000462a72 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0xdb93d80) at /usr/include/c++/5/bits/shared_ptr_base.h:150\r\n#26 0x0000000000734189 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x10451e48, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:659\r\n#27 std::__shared_ptr<Envoy::Upstream::Host, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x10451e40, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr_base.h:925\r\n#28 std::shared_ptr<Envoy::Upstream::Host>::~shared_ptr (this=0x10451e40, __in_chrg=<optimized out>) at /usr/include/c++/5/bits/shared_ptr.h:93\r\n#29 Envoy::Upstream::Outlier::DetectorImpl::<lambda()>::~<lambda> (this=0x10451e30, __in_chrg=<optimized out>) at source/common/upstream/outlier_detection_impl.cc:304\r\n#30 std::_Function_base::_Base_manager<Envoy::Upstream::Outlier::DetectorImpl::notifyMainThreadConsecutiveError(Envoy::Upstream::HostSharedPtr, Envoy::Upstream::Outlier::EjectionType)::<lambda()> >::_M_destroy (__victim=...) at /usr/include/c++/5/functional:1726\r\n#31 std::_Function_base::_Base_manager<Envoy::Upstream::Outlier::DetectorImpl::notifyMainThreadConsecutiveError(Envoy::Upstream::HostSharedPtr, Envoy::Upstream::Outlier::EjectionType)::<lambda()> >::_M_manager(std::_Any_data &, const std::_Any_data &, std::_Manager_operation) (__dest=..., __source=..., __op=<optimized out>) at /usr/include/c++/5/functional:1750\r\n#32 0x0000000000678e50 in std::_Function_base::~_Function_base (this=0x7ffee8fbf070, __in_chrg=<optimized out>) at /usr/include/c++/5/functional:1830\r\n#33 std::function<void ()>::~function() (this=0x7ffee8fbf070, __in_chrg=<optimized out>) at /usr/include/c++/5/functional:1974\r\n#34 std::function<void ()>::operator=(std::function<void ()> const&) (__x=..., this=0x7ffee8fbf050) at /usr/include/c++/5/functional:2071\r\n#35 Envoy::Event::DispatcherImpl::runPostCallbacks (this=0x38b6000) at source/common/event/dispatcher_impl.cc:172\r\n#36 0x00000000008d9128 in event_process_active_single_queue (base=base@entry=0x38602c0, max_to_process=max_to_process@entry=2147483647, endtime=endtime@entry=0x0, activeq=<optimized out>) at event.c:1646\r\n#37 0x00000000008d968f in event_process_active (base=0x38602c0) at event.c:1738\r\n#38 event_base_loop (base=0x38602c0, flags=0) at event.c:1961\r\n#39 0x0000000000643d1e in Envoy::Server::InstanceImpl::run (this=0x383e500) at source/server/server.cc:403\r\n#40 0x000000000046bdf1 in Envoy::MainCommonBase::run (this=this@entry=0x3888168) at source/exe/main_common.cc:83\r\n```",
  "closed_at": "2018-06-18T19:12:08Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3644/comments",
  "created_at": "2018-06-15T22:31:12Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3644/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/3644",
  "id": 332931360,
  "labels": [
    {
      "color": "ee0701",
      "default": true,
      "description": null,
      "id": 421403907,
      "name": "bug",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDc=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/3644/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzI5MzEzNjA=",
  "number": 3644,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Envoy main thread can deadlock itself",
  "updated_at": "2018-06-18T19:12:08Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/3644",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8603643?v=4",
    "events_url": "https://api.github.com/users/ggreenway/events{/privacy}",
    "followers_url": "https://api.github.com/users/ggreenway/followers",
    "following_url": "https://api.github.com/users/ggreenway/following{/other_user}",
    "gists_url": "https://api.github.com/users/ggreenway/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ggreenway",
    "id": 8603643,
    "login": "ggreenway",
    "node_id": "MDQ6VXNlcjg2MDM2NDM=",
    "organizations_url": "https://api.github.com/users/ggreenway/orgs",
    "received_events_url": "https://api.github.com/users/ggreenway/received_events",
    "repos_url": "https://api.github.com/users/ggreenway/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ggreenway/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ggreenway/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ggreenway"
  }
}