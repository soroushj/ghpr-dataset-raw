{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "I am trying to implement slightly more complicated subset load balancing than it seems is supported now.\r\n\r\nThis is my subset lb config:\r\n```\r\nlb_subset_config:\r\n  fallback_policy: ANY_ENDPOINT\r\n  subset_selectors:\r\n  - keys:\r\n    - canary\r\n  - keys:\r\n    - tag\r\n    fallback_policy: NO_FALLBACK\r\n  - keys:\r\n    - tag\r\n    - canary\r\n    fallback_policy: ?\r\n```\r\n\r\nMy requirements are\r\n1. If request metadata keys = [canary], there should be a fallback to any endpoint\r\n2. If request metadata keys = [tag], there should be no fallback\r\n3. If request metadata keys = [canary, tag], there should be a fallback to any endpoint matching request on keys = [tag]\r\n\r\nFirst two requirements are met by above config. The problem is with requirement 3. I cannot find a way to configure it to meet that requirement. \r\n\r\n## Example:\r\nRequest metadata: {canary: true, tag: v1}\r\n\r\nEndpoints:\r\n1. metadata: {}\r\n2. metadata: {tag: v1}\r\n\r\nI would like that request to be routed to endpoint 2, if there is no endpoint with metadata {canary: true, tag: v1}\r\n\r\nIs there a way to achieve it currently? The solution doesn't have to be limited to lb subsets - if  there is any other way please let me know.\r\n\r\nHowever, if this is currently impossible, I propose following extension to the config:\r\n\r\n1. Introduce new `fallback_policy` type for subset selectors: `KEYS_SUBSET`\r\n2. Introduce new field to LbSubsetSelector: `fallback_key_subset`, which would be valid only if fallback_policy == KEY_SUBSET. Its value should be a subset of `keys` field of the subset selector. \r\n\r\nImplementation of KEYS_SUBSET fallback policy should work in following way:\r\nIf there is no subset that matches, reduce request metadata to keys included in `fallback_key_subset` and perform subset load balancing again.\r\n\r\nIf you think that proposal is OK, I will try to implement it.\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2019-11-14T16:21:35Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/53179?v=4",
    "events_url": "https://api.github.com/users/zuercher/events{/privacy}",
    "followers_url": "https://api.github.com/users/zuercher/followers",
    "following_url": "https://api.github.com/users/zuercher/following{/other_user}",
    "gists_url": "https://api.github.com/users/zuercher/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/zuercher",
    "id": 53179,
    "login": "zuercher",
    "node_id": "MDQ6VXNlcjUzMTc5",
    "organizations_url": "https://api.github.com/users/zuercher/orgs",
    "received_events_url": "https://api.github.com/users/zuercher/received_events",
    "repos_url": "https://api.github.com/users/zuercher/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/zuercher/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zuercher/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/zuercher"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8767/comments",
  "created_at": "2019-10-25T14:37:31Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8767/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/8767",
  "id": 512553672,
  "labels": [
    {
      "color": "84b6eb",
      "default": true,
      "description": "Feature requests. Not bugs or questions.",
      "id": 421403909,
      "name": "enhancement",
      "node_id": "MDU6TGFiZWw0MjE0MDM5MDk=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/enhancement"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8767/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTI1NTM2NzI=",
  "number": 8767,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "lb_subset_config: allow for fallback to another selector",
  "updated_at": "2019-11-14T16:21:35Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/8767",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/30294040?v=4",
    "events_url": "https://api.github.com/users/MarcinFalkowski/events{/privacy}",
    "followers_url": "https://api.github.com/users/MarcinFalkowski/followers",
    "following_url": "https://api.github.com/users/MarcinFalkowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/MarcinFalkowski/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/MarcinFalkowski",
    "id": 30294040,
    "login": "MarcinFalkowski",
    "node_id": "MDQ6VXNlcjMwMjk0MDQw",
    "organizations_url": "https://api.github.com/users/MarcinFalkowski/orgs",
    "received_events_url": "https://api.github.com/users/MarcinFalkowski/received_events",
    "repos_url": "https://api.github.com/users/MarcinFalkowski/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/MarcinFalkowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MarcinFalkowski/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/MarcinFalkowski"
  }
}