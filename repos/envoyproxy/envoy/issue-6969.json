{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "*Title*: *Allow users to pass data to filters via e.g. ProcessContext*\r\n\r\n*Description*:\r\nThis is a hand-wavy feature request. Design ideas welcome.\r\n\r\nWe run Envoys in a binary with other serving threads. We'd like some of our filters to behave differently based on the lameduck status of those other serving threads. However, there's not a great way currently to get state from those threads/servers to the filters, short of a global variable.\r\n\r\nThis hypothetical ProcessContext could provide an API for information to flow from those other servers/serving threads to the filter factories. Envoy would be given a ProcessContext at startup, and would hand it to factories as needed.\r\n\r\nA really naive implementation (note: my former Abseil colleagues might disown me if we actually implemented this version):\r\n\r\n```\r\nclass ProcessContext {\r\n public:\r\n  ProcessContext(void* process_data) : process_data_(process_data) {}\r\n  void* get() { return process_data_; }\r\n\r\n private:\r\n  void* process_data_;\r\n};\r\n\r\n// In e.g. a filter factory:\r\nEnvoy::Http::FilterFactoryCb MyFilter::createFilter(\r\n    const std::string& stat_prefix,\r\n    Envoy::Server::Configuration::FactoryContext& context,\r\n    ProcessContext& process_context) {\r\n  MyServerData* server_data = reinterpret_cast<MyServerData*>(process_context.get());\r\n  return [&server_data](Envoy::Http::FilterChainFactoryCallbacks& callbacks) {\r\n    callbacks.addStreamDecoderFilter(std::make_shared<MyFilter>(server_data));\r\n  };\r\n}\r\n\r\n// Now MyFilter has a pointer to MyServerData\r\n```\r\n\r\nThoughts?\r\n\r\ncc @mergeconflict @htuch ",
  "closed_at": "2019-05-23T17:11:19Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10914751?v=4",
    "events_url": "https://api.github.com/users/htuch/events{/privacy}",
    "followers_url": "https://api.github.com/users/htuch/followers",
    "following_url": "https://api.github.com/users/htuch/following{/other_user}",
    "gists_url": "https://api.github.com/users/htuch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/htuch",
    "id": 10914751,
    "login": "htuch",
    "node_id": "MDQ6VXNlcjEwOTE0NzUx",
    "organizations_url": "https://api.github.com/users/htuch/orgs",
    "received_events_url": "https://api.github.com/users/htuch/received_events",
    "repos_url": "https://api.github.com/users/htuch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/htuch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/htuch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/htuch"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6969/comments",
  "created_at": "2019-05-16T18:29:38Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6969/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/6969",
  "id": 445099048,
  "labels": [
    {
      "color": "c5def5",
      "default": false,
      "description": "Needs design doc/proposal before implementation",
      "id": 620444894,
      "name": "design proposal",
      "node_id": "MDU6TGFiZWw2MjA0NDQ4OTQ=",
      "url": "https://api.github.com/repos/envoyproxy/envoy/labels/design%20proposal"
    }
  ],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/6969/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NDUwOTkwNDg=",
  "number": 6969,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Proposal: ProcessContext",
  "updated_at": "2019-05-23T17:11:19Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/6969",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5367112?v=4",
    "events_url": "https://api.github.com/users/ahedberg/events{/privacy}",
    "followers_url": "https://api.github.com/users/ahedberg/followers",
    "following_url": "https://api.github.com/users/ahedberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/ahedberg/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ahedberg",
    "id": 5367112,
    "login": "ahedberg",
    "node_id": "MDQ6VXNlcjUzNjcxMTI=",
    "organizations_url": "https://api.github.com/users/ahedberg/orgs",
    "received_events_url": "https://api.github.com/users/ahedberg/received_events",
    "repos_url": "https://api.github.com/users/ahedberg/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ahedberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ahedberg/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ahedberg"
  }
}