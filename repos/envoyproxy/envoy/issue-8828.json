{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Description**\r\nEnvoy 1.11.2 and master crash when enabling HttpGrpcAccessLog's for upstream logs.\r\n\r\nIn this commit in Envoy 1.11.2, https://github.com/envoyproxy/envoy/commit/41da9533358b77f2ebf9eed2e33fa6ae130a0855\r\n  `request_properties->set_request_headers_bytes(request_headers->byteSize());`\r\nwas changed to\r\n  `request_properties->set_request_headers_bytes(request_headers->byteSize().value());`\r\nhowever there is no check that request_headers->byteSize() has value,\r\nand it turns out that in certain cases there is no value. This result in a `absl::optional_internal::throw_bad_optional_access()`.\r\n\r\nThis is called from both the HCM and from upstream logs in `Filter::UpstreamRequest::~UpstreamRequest()`. In the latter, there are `refreshByteSize()` calls for `upstream_headers_` and trailers, updating and setting the byte size value for these header maps.\r\nBut there is no `parent_.downstream_headers_->refreshByteSize();` call.\r\n\r\n**To Reproduce**\r\nConfigure upstream logs in `envoy.router` using `envoy.http_grpc_access_log`. \r\n\r\n\r\n**Stacktrace**\r\nabsl::optional_internal::throw_bad_optional_access() (/proc/self/cwd/external/com_google_absl/absl/types/bad_optional_access.cc:36)\r\nabsl::optional<unsigned long>::value() &&() (/proc/self/cwd/external/com_google_absl/absl/types/optional.h:483)\r\nEnvoy::Extensions::AccessLoggers::HttpGrpc::HttpGrpcAccessLog::log(Envoy::Extensions::AccessLoggers::HttpGrpc::HttpGrpcAccessLog * const this, const Envoy::Http::HeaderMap * request_headers, const Envoy::Http::HeaderMap * response_headers, const Envoy::Http::HeaderMap * response_trailers,  stream_info) (/envoy/source/extensions/access_loggers/http_grpc/grpc_access_log_impl.cc:373)\r\nEnvoy::Router::Filter::UpstreamRequest::~UpstreamRequest(Envoy::Router::Filter::UpstreamRequest * const this) (/envoy/source/common/router/router.cc:1335)\r\nEnvoy::Router::Filter::UpstreamRequest::~UpstreamRequest(Envoy::Router::Filter::UpstreamRequest * const this) (/envoy/source/common/router/router.cc:1338)\r\nstd::default_delete<Envoy::Router::Filter::UpstreamRequest>::operator()(Envoy::Router::Filter::UpstreamRequest * __ptr) (/usr/include/c++/7/bits/unique_ptr.h:78)\r\nstd::unique_ptr<Envoy::Router::Filter::UpstreamRequest, std::default_delete<Envoy::Router::Filter::UpstreamRequest> >::~unique_ptr() (/usr/include/c++/7/bits/unique_ptr.h:268)\r\nEnvoy::Router::Filter::onUpstreamComplete(Envoy::Router::Filter * const this, Envoy::Router::Filter::UpstreamRequest & upstream_request) (/envoy/source/common/router/router.cc:1198)\r\nEnvoy::Router::Filter::onUpstreamTrailers(Envoy::Router::Filter * const this, Envoy::Http::HeaderMapPtr && trailers, Envoy::Router::Filter::UpstreamRequest & upstream_request) (/envoy/source/common/router/router.cc:1140)\r\nEnvoy::Http::StreamDecoderWrapper::decodeTrailers(Envoy::Http::StreamDecoderWrapper * const this, Envoy::Http::HeaderMapPtr && trailers) (/envoy/source/common/http/codec_wrappers.h:44)\r\nEnvoy::Http::Http2::ConnectionImpl::onFrameReceived(Envoy::Http::Http2::ConnectionImpl * const this, const nghttp2_frame * frame) (/envoy/source/common/http/http2/codec_impl.cc:557)\r\n",
  "closed_at": "2019-10-31T23:31:00Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/6305260?v=4",
    "events_url": "https://api.github.com/users/mattklein123/events{/privacy}",
    "followers_url": "https://api.github.com/users/mattklein123/followers",
    "following_url": "https://api.github.com/users/mattklein123/following{/other_user}",
    "gists_url": "https://api.github.com/users/mattklein123/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mattklein123",
    "id": 6305260,
    "login": "mattklein123",
    "node_id": "MDQ6VXNlcjYzMDUyNjA=",
    "organizations_url": "https://api.github.com/users/mattklein123/orgs",
    "received_events_url": "https://api.github.com/users/mattklein123/received_events",
    "repos_url": "https://api.github.com/users/mattklein123/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mattklein123/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mattklein123/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mattklein123"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8828/comments",
  "created_at": "2019-10-31T17:31:06Z",
  "events_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8828/events",
  "html_url": "https://github.com/envoyproxy/envoy/issues/8828",
  "id": 515616485,
  "labels": [],
  "labels_url": "https://api.github.com/repos/envoyproxy/envoy/issues/8828/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTU2MTY0ODU=",
  "number": 8828,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/envoyproxy/envoy",
  "state": "closed",
  "title": "Envoy 1.11.2 and master crash in HttpGrpcAccessLog::log",
  "updated_at": "2019-10-31T23:31:00Z",
  "url": "https://api.github.com/repos/envoyproxy/envoy/issues/8828",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/5194569?v=4",
    "events_url": "https://api.github.com/users/asraa/events{/privacy}",
    "followers_url": "https://api.github.com/users/asraa/followers",
    "following_url": "https://api.github.com/users/asraa/following{/other_user}",
    "gists_url": "https://api.github.com/users/asraa/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/asraa",
    "id": 5194569,
    "login": "asraa",
    "node_id": "MDQ6VXNlcjUxOTQ1Njk=",
    "organizations_url": "https://api.github.com/users/asraa/orgs",
    "received_events_url": "https://api.github.com/users/asraa/received_events",
    "repos_url": "https://api.github.com/users/asraa/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/asraa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/asraa/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/asraa"
  }
}