{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/230654?v=4",
    "events_url": "https://api.github.com/users/tagomoris/events{/privacy}",
    "followers_url": "https://api.github.com/users/tagomoris/followers",
    "following_url": "https://api.github.com/users/tagomoris/following{/other_user}",
    "gists_url": "https://api.github.com/users/tagomoris/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tagomoris",
    "id": 230654,
    "login": "tagomoris",
    "node_id": "MDQ6VXNlcjIzMDY1NA==",
    "organizations_url": "https://api.github.com/users/tagomoris/orgs",
    "received_events_url": "https://api.github.com/users/tagomoris/received_events",
    "repos_url": "https://api.github.com/users/tagomoris/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tagomoris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tagomoris/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tagomoris"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/230654?v=4",
      "events_url": "https://api.github.com/users/tagomoris/events{/privacy}",
      "followers_url": "https://api.github.com/users/tagomoris/followers",
      "following_url": "https://api.github.com/users/tagomoris/following{/other_user}",
      "gists_url": "https://api.github.com/users/tagomoris/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tagomoris",
      "id": 230654,
      "login": "tagomoris",
      "node_id": "MDQ6VXNlcjIzMDY1NA==",
      "organizations_url": "https://api.github.com/users/tagomoris/orgs",
      "received_events_url": "https://api.github.com/users/tagomoris/received_events",
      "repos_url": "https://api.github.com/users/tagomoris/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tagomoris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tagomoris/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tagomoris"
    }
  ],
  "author_association": "NONE",
  "body": "Fluentd v0.14 call `write` before `start` finished in BufferedOutputPlugin.\nThis problem occurs if `start` method processing time is longer than `try_flush_interval` and buffer exist Fluentd started.\nBut the problem occurs not always... another trigger may exist.\n- fluentd or td-agent version.\n\nfluentd master branch ( 1f7719e1a97360e73f02b314ff38c906e01ffaee ) and v0.14.2 tag\n- Environment information, e.g. OS.\n\nOSX 10.11.6\n- Your configuration\n\n```\n<source>\n  @type dummy\n  tag test\n  dummy {\"hello\":\"world\"}\n</source>\n\n<match test>\n  @type test\n  buffer_type file\n  buffer_path /path/to/fluentd/fluentd/buffer/\n  flush_at_shutdown false\n  try_flush_interval 0.5\n</match>\n```\n- Your problem explanation. If you have an error logs, write it together.\n\nI checked writing below plugin.\n\n``` rb\nrequire 'fluent/output'\n\nmodule Fluent\n  class TestOutputError < StandardError\n  end\n\n  class TestOutput < BufferedOutput\n    Fluent::Plugin.register_output('test', self)\n\n    config_param :format, :string,  :default => 'json'\n\n    def configure(conf)\n      super\n      @formatter = Plugin.new_formatter(@format)\n      @formatter.configure(conf)\n      @has_started = false\n    end\n\n    def start\n      super\n      sleep(3)\n      @has_started = true\n    end\n\n    def format(tag, time, record)\n      @formatter.format(tag, time, record)\n    end\n\n    def write(chunk)\n      unless @has_started\n        raise Fluent::TestOutputError.new 'start method has not been called.'\n      end\n      chunk.write_to($log)\n    end\n  end\nend\n```\n\nError message:\n\n```\n$ bundle exec fluentd -c test-fluent.conf -vv\n2016-08-27 16:45:13 +0900 [info]: fluent/supervisor.rb:583:read_config: reading config file path=\"test-fluent.conf\"\n2016-08-27 16:45:13 +0900 [info]: fluent/supervisor.rb:459:supervise: starting fluentd-0.14.2\n2016-08-27 16:45:13 +0900 [info]: fluent/supervisor.rb:480:supervise: spawn command to main: /path/to/.rbenv/versions/2.3.1/bin/ruby -Eascii-8bit:ascii-8bit  -rbundler/setup /path/to/fluentd/fluentd/vendor/bundle/ruby/2.3.0/bin/fluentd -c test-fluent.conf -vv --under-supervisor\n2016-08-27 16:45:13 +0900 [info]: fluent/supervisor.rb:583:read_config: reading config file path=\"test-fluent.conf\"\n2016-08-27 16:45:13 +0900 [info]: fluent/supervisor.rb:402:run_worker: starting fluentd-0.14.2 without supervision\n2016-08-27 16:45:13 +0900 [info]: fluent/engine.rb:116:block in configure: gem 'fluentd' version '0.14.2'\n2016-08-27 16:45:13 +0900 [info]: fluent/agent.rb:131:add_match: adding match pattern=\"test\" type=\"test\"\n2016-08-27 16:45:13 +0900 [trace]: fluent/plugin.rb:140:register_impl: registered output plugin 'test'\n2016-08-27 16:45:13 +0900 [trace]: fluent/plugin.rb:140:register_impl: registered buffer plugin 'file'\n2016-08-27 16:45:13 +0900 [trace]: fluent/plugin.rb:140:register_impl: registered formatter plugin 'json'\n2016-08-27 16:45:13 +0900 [info]: fluent/root_agent.rb:227:add_source: adding source type=\"dummy\"\n2016-08-27 16:45:13 +0900 [trace]: fluent/plugin.rb:140:register_impl: registered input plugin 'dummy'\n2016-08-27 16:45:13 +0900 [trace]: fluent/plugin.rb:140:register_impl: registered storage plugin 'local'\n2016-08-27 16:45:13 +0900 [warn]: plugin/storage_local.rb:34:configure: both of Plugin @id and path for <storage> are not specified. Using on-memory store.\n2016-08-27 16:45:13 +0900 [info]: fluent/engine.rb:123:configure: using configuration file: <ROOT>\n  <source>\n    @type dummy\n    tag \"test\"\n    dummy {\"hello\":\"world\"}\n  </source>\n  <match test>\n    @type test\n    buffer_type \"file\"\n    buffer_path /path/to/fluentd/fluentd/buffer/\n    flush_at_shutdown false\n    try_flush_interval 0.5\n    <buffer>\n      flush_mode interval\n      retry_type exponential_backoff\n      @type file\n      path /path/to/fluentd/fluentd/buffer/\n      flush_thread_interval 0.5\n      flush_at_shutdown false\n    </buffer>\n  </match>\n</ROOT>\n2016-08-27 16:45:13 +0900 [debug]: plugin/buffer.rb:107:start: buffer started instance=70334821550100 stage_size=0 queue_size=378\n2016-08-27 16:45:13 +0900 [debug]: plugin/buffer.rb:336:enqueue_all: enqueueing all chunks in buffer instance=70334821550100\n2016-08-27 16:45:14 +0900 [debug]: plugin/buffer.rb:354:dequeue_chunk: dequeueing a chunk instance=70334821550100\n2016-08-27 16:45:14 +0900 [debug]: plugin/buffer.rb:363:block in dequeue_chunk: chunk dequeued instance=70334821550100 metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=nil, tag=nil, variables=nil>\n2016-08-27 16:45:14 +0900 [debug]: plugin/output.rb:774:try_flush: trying flush for a chunk chunk=\"53b08c972f9869fbe71701e2756221a3\"\n2016-08-27 16:45:14 +0900 [trace]: plugin/output.rb:799:try_flush: adding write count instance=70334822080460\n2016-08-27 16:45:14 +0900 [trace]: plugin/output.rb:801:try_flush: executing sync write chunk=\"53b08c972f9869fbe71701e2756221a3\"\n2016-08-27 16:45:14 +0900 [debug]: plugin/output.rb:808:rescue in try_flush: taking back chunk for errors. plugin_id=\"object:3ff81a15dfcc\" chunk=\"53b08c972f9869fbe71701e2756221a3\"\n2016-08-27 16:45:14 +0900 [debug]: plugin/buffer.rb:369:takeback_chunk: taking back a chunk instance=70334821550100 chunk_id=\"53b08c972f9869fbe71701e2756221a3\"\n2016-08-27 16:45:14 +0900 [debug]: plugin/buffer.rb:374:block in takeback_chunk: chunk taken back instance=70334821550100 chunk_id=\"53b08c972f9869fbe71701e2756221a3\" metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=nil, tag=nil, variables=nil>\n2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:834:block in try_flush: failed to flush the buffer. plugin_id=\"object:3ff81a15dfcc\" retry_time=0 next_retry=2016-08-27 16:45:15 +0900 chunk=\"53b08c972f9869fbe71701e2756221a3\" error_class=Fluent::TestOutputError error=\"start method has not been called.\"\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/plugin/out_test.rb:31:in `write'\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/compat/output.rb:125:in `write'\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/plugin/output.rb:802:in `try_flush'\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/plugin/output.rb:979:in `flush_thread_run'\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/plugin/output.rb:369:in `block (2 levels) in start'\n  2016-08-27 16:45:14 +0900 [warn]: plugin/output.rb:787:try_flush: /path/to/fluentd/fluentd/lib/fluent/plugin_helper/thread.rb:66:in `block in thread_create'\n```\n",
  "closed_at": "2016-08-29T15:01:20Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/230654?v=4",
    "events_url": "https://api.github.com/users/tagomoris/events{/privacy}",
    "followers_url": "https://api.github.com/users/tagomoris/followers",
    "following_url": "https://api.github.com/users/tagomoris/following{/other_user}",
    "gists_url": "https://api.github.com/users/tagomoris/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tagomoris",
    "id": 230654,
    "login": "tagomoris",
    "node_id": "MDQ6VXNlcjIzMDY1NA==",
    "organizations_url": "https://api.github.com/users/tagomoris/orgs",
    "received_events_url": "https://api.github.com/users/tagomoris/received_events",
    "repos_url": "https://api.github.com/users/tagomoris/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tagomoris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tagomoris/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tagomoris"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/1187/comments",
  "created_at": "2016-08-27T08:04:47Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/1187/events",
  "html_url": "https://github.com/fluent/fluentd/issues/1187",
  "id": 173584751,
  "labels": [
    {
      "color": "e11d21",
      "default": true,
      "description": null,
      "id": 94152935,
      "name": "bug",
      "node_id": "MDU6TGFiZWw5NDE1MjkzNQ==",
      "url": "https://api.github.com/repos/fluent/fluentd/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/1187/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNzM1ODQ3NTE=",
  "number": 1187,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "v0.14 call `write` before `start` finished in BufferedOutputPlugin",
  "updated_at": "2016-08-29T16:35:33Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/1187",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1783161?v=4",
    "events_url": "https://api.github.com/users/mia-0032/events{/privacy}",
    "followers_url": "https://api.github.com/users/mia-0032/followers",
    "following_url": "https://api.github.com/users/mia-0032/following{/other_user}",
    "gists_url": "https://api.github.com/users/mia-0032/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mia-0032",
    "id": 1783161,
    "login": "mia-0032",
    "node_id": "MDQ6VXNlcjE3ODMxNjE=",
    "organizations_url": "https://api.github.com/users/mia-0032/orgs",
    "received_events_url": "https://api.github.com/users/mia-0032/received_events",
    "repos_url": "https://api.github.com/users/mia-0032/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mia-0032/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mia-0032/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mia-0032"
  }
}