{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "### Front matter\r\n\r\n- fluentd 1.4.1 (tested via Docker: [fluentd/fluentd:1.4-onbuild](https://github.com/fluent/fluentd-docker-image/blob/master/v1.4/alpine-onbuild/Dockerfile))\r\n- OS: Alpine 3.8 (see above)\r\n- Ruby: 2.5.2 (via Alpine 3.8 per)\r\n\r\n### Configuration\r\n\r\nThis is a simplification of my configuration, enough I hope to illustrate the problem I'm having.\r\n\r\n```\r\n<source>\r\n  @type                 my_plugin\r\n  @id                   my_plugin\r\n  @log_level            debug\r\n  tag                   my_plugin\r\n</source>\r\n\r\n<system>\r\n  <log>\r\n    format json\r\n    time_format %FT%T.%6N%:z\r\n  </log>\r\n</system>\r\n\r\n<match my_plugin>\r\n  @type copy\r\n  <store>\r\n    @type elasticsearch\r\n    ...\r\n  </store>\r\n</match>\r\n```\r\n\r\n### Description\r\n\r\nI am writing a custom plugin to pull logs from S3 and publish them to Elasticsearch. That processing works well! However, the internal logs generated by my plugin, and by the fluentd system, have inconsistent formats of timestamps in them that confuse our downstream log aggregators (ironically, also fluentd instances :-) ).\r\n\r\nExamples:\r\n\r\nA. This is a system logging statement with the timestamp format I want \u2013 good old RFC3339 date/time.\r\n\r\n```\r\n{\"time\":\"2019-03-28T21:11:56.827082+00:00\",\"level\":\"info\",\"message\":\"parsing config file is succeeded path=\\\"/fluentd/etc/fluent.conf\\\"\"}\r\n```\r\n\r\nB. This is a log statement from my plugin:\r\n\r\n```\r\n{\"time\":\"2019-03-28 21:11:58 +0000\",\"level\":\"debug\",\"message\":\"[my_plugin] log_bucket: logs\"}\r\n```\r\n\r\nIt is generated by code that looks like this:\r\n\r\n```\r\ndef configure(conf)\r\n  super\r\n  log.debug(\"log_bucket: logs\")\r\nend\r\n```\r\n\r\nNote the default timestamp format, instead of the system-configured time format that I want. I was expecting my specified time format to be used.\r\n\r\nInterestingly, if I do this from within my plugin:\r\n\r\n```\r\nlog.time_format = '%FT%T.%6N%:z'\r\nlog.debug(\"log_bucket: logs\")\r\n```\r\n\r\nthe time format doesn't change!\r\n\r\n### Analysis\r\n\r\nI have determined the root cause, which I believe to be a bug. (That being said, I'm a newcomer to the fluentd code base, so do double-check my analysis.)\r\n\r\nThe fundamental issue, I think, is that `Fluent::PluginLogger` both inherits from `Fluent::Log` (i.e. contains internal log state of its own) _and_ wraps around a \"parent\" logger (the `@logger` instance variable). This creates lots of opportunities for mischief.\r\n\r\nSome, but not all, methods delegate to the parent logger. In particular, `#puts` and `#<<` delegate to the parent logger, but `#debug`, for example, does not. This means that all the formatting of log messages is handled by the `PluginLogger`, _not_ by the parent logger.\r\n\r\nSome attempt is made to make sure that a `PluginLogger` uses the same format as its parent logger, by synchronizing the state between the two. `@format` is synced whenever `#format=` is called, for example. However, `@time_format` is not synced, and it retains its default value whenever a `PluginLogger` is constructed. I believe this is why I'm seeing an inconsistent time format coming from my plugin.\r\n\r\nNow, the reason that `#time_format=` has no effect is that both `#time_format` and `#time_format=` are delegated to the parent logger \u2013 they do not read from or modify the plugin logger's internal state. This would be fine if `PluginLogger` were using `#time_format` to format time objects instead of using its own `@time_format` instance variable. However, its definition of `#debug` et al are inherited from `Fluent::Log`, and they use `#format_time` to do the formatting \u2013 which, unsurprisingly, uses `@time_format` under the hood.\r\n\r\nSyncing `@time_format` is not sufficient, I discovered. If the time format is compatible with the performance-optimized `strptime` library, `Fluent::Log` will create a `@time_formatter` object to format times instead of Ruby's `Time#strftime` implementation. Thus, we must synchronize `@time_formatter` as well.\r\n\r\nI think the best fix, although perhaps the most dangerous from a backwards compatibility standpoint, might be to remove the inheritance relationship between `PluginLogger` and `Fluent::Log`, and just have `PluginLogger` delegate everything to its parent logger. At least, the mixture of inheritance, composition, and partial delegation really ought to be revisited.\r\n\r\nThe most immediate fix, though, would be to ensure that `@time_format` and `@time_formatter` are synchronized properly with the parent logger.\r\n\r\n_Edit:_ I discovered another nuance: the issue only arises in the case of JSON output. Why? Because the plugin logger's text formatter doesn't format time. Instead, it calls `#caller_line`, which is in fact delegated to the parent logger. By comparison, the JSON formatter calls `#format_time` itself.\r\n\r\nHere's a test case that reproduces the situation. It works on the \"text\" case but fails on the \"json\" one:\r\n\r\n```\r\n    data(\r\n      text: [:text, \"2016 [info]: yaaay\\n\"],\r\n      json: [:json, %Q({\"time\":\"2016\",\"level\":\"info\",\"message\":\"yaaay\"}\\n)],\r\n    )\r\n    def test_time_format(data)\r\n      fmt, expected_log_line = data\r\n      @log.format = fmt\r\n      @log.time_format = \"%Y\"\r\n      @log.info \"yaaay\"\r\n      assert{ @log_device.logs.include? expected_log_line }\r\n    end\r\n```\r\n",
  "closed_at": "2019-04-01T11:21:01Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/16928?v=4",
    "events_url": "https://api.github.com/users/repeatedly/events{/privacy}",
    "followers_url": "https://api.github.com/users/repeatedly/followers",
    "following_url": "https://api.github.com/users/repeatedly/following{/other_user}",
    "gists_url": "https://api.github.com/users/repeatedly/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/repeatedly",
    "id": 16928,
    "login": "repeatedly",
    "node_id": "MDQ6VXNlcjE2OTI4",
    "organizations_url": "https://api.github.com/users/repeatedly/orgs",
    "received_events_url": "https://api.github.com/users/repeatedly/received_events",
    "repos_url": "https://api.github.com/users/repeatedly/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/repeatedly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/repeatedly/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/repeatedly"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/2355/comments",
  "created_at": "2019-03-29T01:29:44Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/2355/events",
  "html_url": "https://github.com/fluent/fluentd/issues/2355",
  "id": 426774732,
  "labels": [],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/2355/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MjY3NzQ3MzI=",
  "number": 2355,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "Plugin log time format not in sync with system config",
  "updated_at": "2019-04-01T11:21:01Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/2355",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/75564?v=4",
    "events_url": "https://api.github.com/users/ods94065/events{/privacy}",
    "followers_url": "https://api.github.com/users/ods94065/followers",
    "following_url": "https://api.github.com/users/ods94065/following{/other_user}",
    "gists_url": "https://api.github.com/users/ods94065/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ods94065",
    "id": 75564,
    "login": "ods94065",
    "node_id": "MDQ6VXNlcjc1NTY0",
    "organizations_url": "https://api.github.com/users/ods94065/orgs",
    "received_events_url": "https://api.github.com/users/ods94065/received_events",
    "repos_url": "https://api.github.com/users/ods94065/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ods94065/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ods94065/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ods94065"
  }
}