{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "I'm building an at-least-once delivery log shipping system with fluentd, and I have the following setup:\n\n```\nlocal td-agent --> local haproxy   ----->   remote td-agent\n                                     `-->   remote td-agent\n```\n\nThe local td-agent uses `out_forward` with `require_ack_response`.\n\nI'm using the local HAProxy because our infrastructure uses [SmartStack](http://nerds.airbnb.com/smartstack-service-discovery-cloud/) and specifically the [Synapse](https://github.com/airbnb/synapse) component to configure HAProxy with the list of dynamically changing aggregator hosts. This means I don't need to reconfigure and restart td-agent when downstream hosts change, and this haproxy setup works well for a number of services.\n\nWhen testing various failure scenarios of this logging system, I found that if I gracefully stopped the aggregator td-agent (with `/etc/init.d/td-agent stop`) and then started again a few seconds later, some messages would be dropped (ie. not delivered to the outputs on the aggregator box). Exploring the code, I found this in [`out_forward.rb`](https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin/out_forward.rb#L300-L312):\n\n``` rb\n# When connection is closed by remote host, socket is ready to read and #recv returns an empty string that means EOF.\n# In this case, the node is available and successfully close connection without sending responses.\n# ForwardInput is not expected to do so, but some alternatives may do so.\n# Therefore do not send the chunk again.\nunless raw_data.empty?\n  # Serialization type of the response is same as sent data.\n  res = MessagePack.unpack(raw_data)\n\n  if res['ack'] != option['chunk']\n    # Some errors may have occured when ack and chunk id is different, so send the chunk again.\n    raise ForwardOutputResponseError, \"ack in response and chunk id in sent data are different\"\n  end\nend\n```\n\nI believe this behavior to be wrong: it is my expectation that if an ack is not received for _any reason_, then delivery has failed and fluentd should retry delivery of that chunk later.\n\nTo test this out, I monkey-patched the `ForwardOutput` class to do this:\n\n``` rb\n# When connection is closed by remote host, socket is ready to read and #recv returns an empty string that means EOF.\n# If this happens we assume the data wasn't delivered and retry it.\nif raw_data.empty?\n  @log.warn \"node #{node.host}:#{node.port} closed the connection. regard it as unavailable.\"\n  node.disable!\n  raise ForwardOutputConnectionClosedError, \"node #{node.host}:#{node.port} closed connection\"\nelse\n  # Serialization type of the response is same as sent data.\n  res = MessagePack.unpack(raw_data)\n\n  if res['ack'] != option['chunk']\n    # Some errors may have occured when ack and chunk id is different, so send the chunk again.\n    raise ForwardOutputResponseError, \"ack in response and chunk id in sent data are different\"\n  end\nend\n```\n\nTesting again with this code, when stopping and starting the aggregator, the upstream td-agent correctly detects the connection close, reconnects, resends the chunk, and there are no dropped messages.\n\nShould this be a config option? Happy to create a PR if you like the solution.\n",
  "closed_at": "2015-04-21T07:42:42Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/230654?v=4",
    "events_url": "https://api.github.com/users/tagomoris/events{/privacy}",
    "followers_url": "https://api.github.com/users/tagomoris/followers",
    "following_url": "https://api.github.com/users/tagomoris/following{/other_user}",
    "gists_url": "https://api.github.com/users/tagomoris/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tagomoris",
    "id": 230654,
    "login": "tagomoris",
    "node_id": "MDQ6VXNlcjIzMDY1NA==",
    "organizations_url": "https://api.github.com/users/tagomoris/orgs",
    "received_events_url": "https://api.github.com/users/tagomoris/received_events",
    "repos_url": "https://api.github.com/users/tagomoris/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tagomoris/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tagomoris/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tagomoris"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/576/comments",
  "created_at": "2015-04-16T00:59:51Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/576/events",
  "html_url": "https://github.com/fluent/fluentd/issues/576",
  "id": 68819956,
  "labels": [],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/576/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2ODgxOTk1Ng==",
  "number": 576,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "out_forward with require_ack_response drops messages when destination server restarted",
  "updated_at": "2015-04-21T07:42:42Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/576",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/172470?v=4",
    "events_url": "https://api.github.com/users/georgebashi/events{/privacy}",
    "followers_url": "https://api.github.com/users/georgebashi/followers",
    "following_url": "https://api.github.com/users/georgebashi/following{/other_user}",
    "gists_url": "https://api.github.com/users/georgebashi/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/georgebashi",
    "id": 172470,
    "login": "georgebashi",
    "node_id": "MDQ6VXNlcjE3MjQ3MA==",
    "organizations_url": "https://api.github.com/users/georgebashi/orgs",
    "received_events_url": "https://api.github.com/users/georgebashi/received_events",
    "repos_url": "https://api.github.com/users/georgebashi/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/georgebashi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/georgebashi/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/georgebashi"
  }
}