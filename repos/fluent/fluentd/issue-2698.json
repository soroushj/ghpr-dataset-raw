{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5616899?v=4",
    "events_url": "https://api.github.com/users/ganmacs/events{/privacy}",
    "followers_url": "https://api.github.com/users/ganmacs/followers",
    "following_url": "https://api.github.com/users/ganmacs/following{/other_user}",
    "gists_url": "https://api.github.com/users/ganmacs/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ganmacs",
    "id": 5616899,
    "login": "ganmacs",
    "node_id": "MDQ6VXNlcjU2MTY4OTk=",
    "organizations_url": "https://api.github.com/users/ganmacs/orgs",
    "received_events_url": "https://api.github.com/users/ganmacs/received_events",
    "repos_url": "https://api.github.com/users/ganmacs/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ganmacs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ganmacs/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ganmacs"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/5616899?v=4",
      "events_url": "https://api.github.com/users/ganmacs/events{/privacy}",
      "followers_url": "https://api.github.com/users/ganmacs/followers",
      "following_url": "https://api.github.com/users/ganmacs/following{/other_user}",
      "gists_url": "https://api.github.com/users/ganmacs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ganmacs",
      "id": 5616899,
      "login": "ganmacs",
      "node_id": "MDQ6VXNlcjU2MTY4OTk=",
      "organizations_url": "https://api.github.com/users/ganmacs/orgs",
      "received_events_url": "https://api.github.com/users/ganmacs/received_events",
      "repos_url": "https://api.github.com/users/ganmacs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ganmacs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ganmacs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ganmacs"
    }
  ],
  "author_association": "NONE",
  "body": "**Describe the bug**\r\nWhen Fluentd restarts, it restores all chunks that are stored in buffer files and intends to flush them but only the last chunk restored is flushed.\r\n\r\n**To Reproduce**\r\n- Use any input that can ship thousands of events/s\r\n- Use an output that supports file buffering\r\n- Set chunk_limit_records to 10\r\n- Send 1000* {\"timestamp\": 1} JSON events\r\n(100 buffer files are created)\r\n- Before the events are flushed, reload fluentd service\r\n\r\n**Expected behavior**\r\nAll chunks are restored and flushed when Fluentd restarts\r\n\r\n**Your Environment**\r\n\r\n- Fluentd or td-agent version: fluentd 1.7.4\r\n- Operating system: \r\nNAME=\"Alpine Linux\"\r\nVERSION_ID=3.9.4\r\n- Kernel version: 4.4.0-154-generic\r\n\r\n**Your Configuration**\r\n\r\n```\r\n<system>\r\n  log_level trace\r\n</system>\r\n\r\n<source>\r\n  @type tail\r\n  path /fluentd/log/foo.log\r\n  pos_file /fluentd/log/td-agent/foo.log.pos\r\n  tag foo.bar\r\n  <parse>\r\n    @type json\r\n  </parse>\r\n</source>\r\n\r\n<filter foo.bar>\r\n    @type record_transformer\r\n    enable_ruby\r\n    <record>\r\n      newtime ${record[\"timestamp\"]}\r\n    </record>\r\n    renew_time_key newtime\r\n</filter>\r\n\r\n<match foo.bar>\r\n  @type amqp\r\n  exchange foo\r\n  key \"\"\r\n  addresses 172.18.0.2:5672\r\n  user guest\r\n  pass guest\r\n  vhost /\r\n  <buffer time>\r\n    @type file\r\n    timekey 30\r\n    timekey_wait 0\r\n    chunk_limit_records 10\r\n    path /fluentd/buffer/\r\n  </buffer>\r\n</match>\r\n\r\n```\r\n\r\n**Your Error Log**\r\n\r\nBefore Fluentd reloading, all chunks are flushed correctly, but at restarts:\r\n\r\n```\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0c58935521fbf76d5e691216.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ecc0a41d98d0fccef5a906ab4.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0afa28e73d5e198227f834a6.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78eceeb22cfddb0516e29fad0bf.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0eee72d351461588ead60233.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ee5955c88f80ff89826031ced.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f11d9e4162a6f52933635699a.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78eced24d53777f80807064ca49.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ef312163e22da0dcea03eaad8.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0b5e73337978add08578ff79.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ed9429bf7afc4010636424da6.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0b8fba5bd26a5015402bf334.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ef3b2c338e22bc016e57f0bf2.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ee90e69cfef38e857e16e1d29.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f1016e3d1cc0ffa8d05282742.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0e9feddc6605e140d41c0263.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ef3d02b6ece5008cd80cca186.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0c259bf7bbe07eebe33b6929.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0d6a81bce065426511dbfe3c.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ef53c9c7e9e0bcf36a9f10e15.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ed65d3c9ba7ac526d1d5f9e22.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0aa814d119979ae181b7a2a9.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f11a54d42c6d731084b06592d.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ee8ab8ab0d2d502b617621901.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f11f1917ac030e7e2c3b84a4c.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78ef4494d94ee2ce3f1b426b5de.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78eec5cc5ba112991296cf533df.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: restoring buffer file: path = /fluentd/buffer/buffer.b5974f78f0f2054c18053b186689eca90.log\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: buffer started instance=47070979384460 stage_size=310 queue_size=0\r\n2019-11-14 14:42:44 +0000 [info]: #0 fluent/log.rb:322:info: Connecting to RabbitMQ...\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: tailing paths: target = /fluentd/log/foo.log | existing = \r\n2019-11-14 14:42:44 +0000 [info]: #0 fluent/log.rb:322:info: following tail of /fluentd/log/foo.log\r\n2019-11-14 14:42:44 +0000 [info]: #0 fluent/log.rb:322:info: fluentd worker is now running worker=0\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: flush_thread actually running\r\n2019-11-14 14:42:44 +0000 [debug]: #0 fluent/log.rb:302:debug: enqueue_thread actually running\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n2019-11-14 14:42:45 +0000 [debug]: #0 fluent/log.rb:302:debug: Sending message {\"timestamp\":1,\"newtime\":1}, :key => , :headers => {} into foo\r\n```\r\nOnly the last restored chunk is flushed. If we reload as many times as the remaining chunks, they will be finally all flushed.\r\n\r\n**Additional context**\r\nWhen the chunk_limit_records is reached, a new chunk is created but it has the same metadata as the previous. If those chunks have not been flushed before a restart, when it resumes, the @stage map https://github.com/fluent/fluentd/blob/e1c8ed50adeabc222e8a29f5d41af19a9620c988/lib/fluent/plugin/buffer.rb#L185 contains only one chunk because all remaining chunks have the same metadata https://github.com/fluent/fluentd/blob/e1c8ed50adeabc222e8a29f5d41af19a9620c988/lib/fluent/plugin/buf_file.rb#L165 and only the last one restored is saved in the map.\r\n\r\nMaybe we could add an information in metadata that a chunk has been created because chunk_limit_records has been reached and then, each of theses chunks could have unique metadata ?\r\n",
  "closed_at": "2020-02-21T03:21:35Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5616899?v=4",
    "events_url": "https://api.github.com/users/ganmacs/events{/privacy}",
    "followers_url": "https://api.github.com/users/ganmacs/followers",
    "following_url": "https://api.github.com/users/ganmacs/following{/other_user}",
    "gists_url": "https://api.github.com/users/ganmacs/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ganmacs",
    "id": 5616899,
    "login": "ganmacs",
    "node_id": "MDQ6VXNlcjU2MTY4OTk=",
    "organizations_url": "https://api.github.com/users/ganmacs/orgs",
    "received_events_url": "https://api.github.com/users/ganmacs/received_events",
    "repos_url": "https://api.github.com/users/ganmacs/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ganmacs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ganmacs/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ganmacs"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/2698/comments",
  "created_at": "2019-11-14T15:04:19Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/2698/events",
  "html_url": "https://github.com/fluent/fluentd/issues/2698",
  "id": 522916527,
  "labels": [
    {
      "color": "e11d21",
      "default": true,
      "description": null,
      "id": 94152935,
      "name": "bug",
      "node_id": "MDU6TGFiZWw5NDE1MjkzNQ==",
      "url": "https://api.github.com/repos/fluent/fluentd/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/2698/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MjI5MTY1Mjc=",
  "number": 2698,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "Restoring chunks with same metadata",
  "updated_at": "2020-02-21T03:21:35Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/2698",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/57753851?v=4",
    "events_url": "https://api.github.com/users/fleprovost/events{/privacy}",
    "followers_url": "https://api.github.com/users/fleprovost/followers",
    "following_url": "https://api.github.com/users/fleprovost/following{/other_user}",
    "gists_url": "https://api.github.com/users/fleprovost/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/fleprovost",
    "id": 57753851,
    "login": "fleprovost",
    "node_id": "MDQ6VXNlcjU3NzUzODUx",
    "organizations_url": "https://api.github.com/users/fleprovost/orgs",
    "received_events_url": "https://api.github.com/users/fleprovost/received_events",
    "repos_url": "https://api.github.com/users/fleprovost/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/fleprovost/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fleprovost/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/fleprovost"
  }
}