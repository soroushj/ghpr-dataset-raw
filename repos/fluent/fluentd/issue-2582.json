{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/16928?v=4",
    "events_url": "https://api.github.com/users/repeatedly/events{/privacy}",
    "followers_url": "https://api.github.com/users/repeatedly/followers",
    "following_url": "https://api.github.com/users/repeatedly/following{/other_user}",
    "gists_url": "https://api.github.com/users/repeatedly/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/repeatedly",
    "id": 16928,
    "login": "repeatedly",
    "node_id": "MDQ6VXNlcjE2OTI4",
    "organizations_url": "https://api.github.com/users/repeatedly/orgs",
    "received_events_url": "https://api.github.com/users/repeatedly/received_events",
    "repos_url": "https://api.github.com/users/repeatedly/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/repeatedly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/repeatedly/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/repeatedly"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/16928?v=4",
      "events_url": "https://api.github.com/users/repeatedly/events{/privacy}",
      "followers_url": "https://api.github.com/users/repeatedly/followers",
      "following_url": "https://api.github.com/users/repeatedly/following{/other_user}",
      "gists_url": "https://api.github.com/users/repeatedly/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/repeatedly",
      "id": 16928,
      "login": "repeatedly",
      "node_id": "MDQ6VXNlcjE2OTI4",
      "organizations_url": "https://api.github.com/users/repeatedly/orgs",
      "received_events_url": "https://api.github.com/users/repeatedly/received_events",
      "repos_url": "https://api.github.com/users/repeatedly/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/repeatedly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/repeatedly/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/repeatedly"
    }
  ],
  "author_association": "NONE",
  "body": "Check [CONTRIBUTING guideline](https://github.com/fluent/fluentd/blob/master/CONTRIBUTING.md) first and here is the list to help us investigate the problem.\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nWhen using file output plugin with path containing placeholders like `${key1}`, and default file buffer plugin without explicitly configuring path, fluentd does not resume existing buffers on start. Therefore, events that are buffered persistently are missing from the flushed file output, and there are accumulated buffer files that are never removed.\r\n\r\n**To Reproduce**\r\n<!-- Steps to reproduce the behavior: -->\r\n\r\nUsing config with file output plugin `path` containing placeholders like `${log_source_address}`, start fluentd, and ensure that at least one buffer file at `/fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M/buffer.*.log` is present. Check the file to see which messages are inside.\r\n\r\nAfter that, restart fluentd and then keep it running. After timekey (2m), check the number and last modified timestamps of buffer files in the buffer path `/fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M/`, and check the flushed output file for previous timekey to see if the messages inside the buffer file earlier are present in its appropriate file.\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nFluentd should resume from the buffered events, so that the flushed output file contains the events that were buffered before fluentd was restarted. Also, there should not be any old orphaned buffer files that are kept forever.\r\n\r\nInstead, observed behaviour is that the buffered events from before restart are missing from the flushed final file, and there are orphaned files that are more than timekey old remaining inside the buffer directory forever.\r\n\r\n**Your Environment**\r\n\r\n- Fluentd or td-agent version: fluentd 1.6.3\r\n- Operating system: using the official Debian docker image (`fluent/fluentd:v1.6-debian` = `sha256:9576074ac4c0f72099c94f56746ce68ee37ba7021257653565e0a9c200d8fe83`)\r\n- Kernel version: 4.15.0-54-generic\r\n\r\n**Your Configuration**\r\n\r\n```\r\n<system>\r\n  log_level debug\r\n</system>\r\n\r\n<source>\r\n  @type dummy\r\n  tag dummy\r\n  dummy {\"log_source_address\":\"1.2.3.4\",\"message\":\"abc\"}\r\n</source>\r\n\r\n<match fluent.**>\r\n  @type stdout\r\n</match>\r\n\r\n<match **>\r\n  @type file\r\n  path /fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M\r\n  #path /fluentd/log/forward_%Y-%m-%dT%H:%M\r\n  append true\r\n  compress gzip\r\n  <buffer time,log_source_address>\r\n  #<buffer>\r\n    timekey 2m\r\n    timekey_wait 0\r\n  </buffer>\r\n</match>\r\n```\r\n\r\n**Your Error Log**\r\n\r\n```\r\n2019-08-20 20:21:33 +0800 [info]: using configuration file: <ROOT>\r\n  <system>\r\n    log_level debug\r\n  </system>\r\n  <source>\r\n    @type dummy\r\n    tag \"dummy\"\r\n    dummy {\"log_source_address\":\"1.2.3.4\",\"message\":\"abc\"}\r\n  </source>\r\n  <match fluent.**>\r\n    @type stdout\r\n  </match>\r\n  <match **>\r\n    @type file\r\n    path \"/fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M\"\r\n    append true\r\n    compress gzip\r\n    <buffer time,log_source_address>\r\n      timekey 2m\r\n      timekey_wait 0\r\n      path \"/fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M\"\r\n    </buffer>\r\n  </match>\r\n</ROOT>\r\n2019-08-20 20:21:33 +0800 [info]: starting fluentd-1.6.3 pid=6 ruby=\"2.6.3\"\r\n2019-08-20 20:21:33 +0800 [info]: spawn command to main:  cmdline=[\"/usr/local/bin/ruby\", \"-Eascii-8bit:ascii-8bit\", \"/usr/local/bundle/bin/fluentd\", \"-c\", \"/fluentd/etc/fluent.conf\", \"-p\", \"/fluentd/plugins\", \"--under-supervisor\"]\r\n2019-08-20 20:21:33 +0800 [info]: gem 'fluentd' version '1.6.3'\r\n2019-08-20 20:21:33 +0800 [info]: adding match pattern=\"fluent.**\" type=\"stdout\"\r\n2019-08-20 20:21:33 +0800 [info]: adding match pattern=\"**\" type=\"file\"\r\n2019-08-20 20:21:33 +0800 [info]: adding source type=\"dummy\"\r\n2019-08-20 20:21:33 +0800 [warn]: #0 both of Plugin @id and path for <storage> are not specified. Using on-memory store.\r\n2019-08-20 20:21:33 +0800 [warn]: #0 both of Plugin @id and path for <storage> are not specified. Using on-memory store.\r\n2019-08-20 20:21:33 +0800 [info]: #0 starting fluentd worker pid=13 ppid=6 worker=0\r\n2019-08-20 20:21:33 +0800 [debug]: #0 buffer started instance=70263954869520 stage_size=0 queue_size=0\r\n2019-08-20 20:21:33 +0800 [info]: #0 fluentd worker is now running worker=0\r\n2019-08-20 20:21:33 +0800 [debug]: #0 flush_thread actually running\r\n2019-08-20 20:21:33 +0800 [debug]: #0 enqueue_thread actually running\r\n2019-08-20 20:21:33.798741502 +0800 fluent.info: {\"worker\":0,\"message\":\"fluentd worker is now running worker=0\"}\r\n2019-08-20 20:21:33.798991161 +0800 fluent.debug: {\"message\":\"flush_thread actually running\"}\r\n2019-08-20 20:21:33.800278236 +0800 fluent.debug: {\"message\":\"enqueue_thread actually running\"}\r\n2019-08-20 20:21:34 +0800 [debug]: #0 Created new chunk chunk_id=\"5908b7f4a97beecdc426128ff7da2744\" metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303600, tag=nil, variables={:log_source_address=>\"1.2.3.4\"}>\r\n2019-08-20 20:21:34.003534921 +0800 fluent.debug: {\"chunk_id\":\"5908b7f4a97beecdc426128ff7da2744\",\"metadata\":\"#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303600, tag=nil, variables={:log_source_address=>\\\"1.2.3.4\\\"}>\",\"message\":\"Created new chunk chunk_id=\\\"5908b7f4a97beecdc426128ff7da2744\\\" metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303600, tag=nil, variables={:log_source_address=>\\\"1.2.3.4\\\"}>\"}\r\n2019-08-20 20:22:00 +0800 [debug]: #0 Created new chunk chunk_id=\"5908b80d8804200f521045aacaa9530c\" metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303720, tag=nil, variables={:log_source_address=>\"1.2.3.4\"}>\r\n2019-08-20 20:22:00.080503264 +0800 fluent.debug: {\"chunk_id\":\"5908b80d8804200f521045aacaa9530c\",\"metadata\":\"#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303720, tag=nil, variables={:log_source_address=>\\\"1.2.3.4\\\"}>\",\"message\":\"Created new chunk chunk_id=\\\"5908b80d8804200f521045aacaa9530c\\\" metadata=#<struct Fluent::Plugin::Buffer::Metadata timekey=1566303720, tag=nil, variables={:log_source_address=>\\\"1.2.3.4\\\"}>\"}\r\n```\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\nFor example, when fluentd is first started with empty buffer dir, these buffer files are seen:\r\n\r\n```\r\n-rw-r--r-- 1 999 docker  972 Aug 20 20:20 buffer.b5908b7bc65b58119a238a839fd5c819f.log\r\n-rw-r--r-- 1 999 docker   95 Aug 20 20:20 buffer.b5908b7bc65b58119a238a839fd5c819f.log.meta\r\n```\r\n\r\nAfter fluentd is restarted, these buffer files are seen:\r\n\r\n```\r\n-rw-r--r-- 1 999 docker 4455 Aug 20 20:21 buffer.b5908b7bc65b58119a238a839fd5c819f.log\r\n-rw-r--r-- 1 999 docker   95 Aug 20 20:21 buffer.b5908b7bc65b58119a238a839fd5c819f.log.meta\r\n-rw-r--r-- 1 999 docker  486 Aug 20 20:21 buffer.b5908b7f4a97beecdc426128ff7da2744.log\r\n-rw-r--r-- 1 999 docker   95 Aug 20 20:21 buffer.b5908b7f4a97beecdc426128ff7da2744.log.meta\r\n```\r\n\r\nand more buffer files are created and retained forever every time fluentd is restarted:\r\n\r\n```\r\n-rw-r--r-- 1 999 docker 1232 Aug 20 19:11 buffer.b5908a8488e9e9872d07618224e57d9a6.log\r\n-rw-r--r-- 1 999 docker   99 Aug 20 19:11 buffer.b5908a8488e9e9872d07618224e57d9a6.log.meta\r\n-rw-r--r-- 1 999 docker  616 Aug 20 19:36 buffer.b5908adc7399d1b1e72639886afcf3618.log\r\n-rw-r--r-- 1 999 docker   99 Aug 20 19:36 buffer.b5908adc7399d1b1e72639886afcf3618.log.meta\r\n-rw-r--r-- 1 999 docker  704 Aug 20 19:38 buffer.b5908ae39aaf16b5e68ab53544b8c1847.log\r\n-rw-r--r-- 1 999 docker   99 Aug 20 19:38 buffer.b5908ae39aaf16b5e68ab53544b8c1847.log.meta\r\n-rw-r--r-- 1 999 docker 5104 Aug 20 20:00 buffer.b5908b3248422abed0a8a20adb5ded43f.log\r\n-rw-r--r-- 1 999 docker   99 Aug 20 20:00 buffer.b5908b3248422abed0a8a20adb5ded43f.log.meta\r\n-rw-r--r-- 1 999 docker 4455 Aug 20 20:21 buffer.b5908b7bc65b58119a238a839fd5c819f.log\r\n-rw-r--r-- 1 999 docker   95 Aug 20 20:21 buffer.b5908b7bc65b58119a238a839fd5c819f.log.meta\r\n-rw-r--r-- 1 999 docker  486 Aug 20 20:21 buffer.b5908b7f4a97beecdc426128ff7da2744.log\r\n-rw-r--r-- 1 999 docker   95 Aug 20 20:21 buffer.b5908b7f4a97beecdc426128ff7da2744.log.meta\r\n```\r\n\r\nBy inserting my own debug statement into buf_file.rb, confirm that the [path passed to Dir.glob()](https://github.com/fluent/fluentd/blob/v1.6.3/lib/fluent/plugin/buf_file.rb#L133-L135) is `/fluentd/log/forward_${log_source_address}_%Y-%m-%dT%H:%M/buffer.*.log`. It seems that [`{}` is special character to Dir.glob()](https://ruby-doc.org/core-2.6.3/Dir.html#method-c-glob), so there are no files returned to be resumed, which explains why there is no debug log `restoring buffer file: path = ...`.",
  "closed_at": "2019-09-02T06:47:01Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/16928?v=4",
    "events_url": "https://api.github.com/users/repeatedly/events{/privacy}",
    "followers_url": "https://api.github.com/users/repeatedly/followers",
    "following_url": "https://api.github.com/users/repeatedly/following{/other_user}",
    "gists_url": "https://api.github.com/users/repeatedly/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/repeatedly",
    "id": 16928,
    "login": "repeatedly",
    "node_id": "MDQ6VXNlcjE2OTI4",
    "organizations_url": "https://api.github.com/users/repeatedly/orgs",
    "received_events_url": "https://api.github.com/users/repeatedly/received_events",
    "repos_url": "https://api.github.com/users/repeatedly/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/repeatedly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/repeatedly/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/repeatedly"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/2582/comments",
  "created_at": "2019-08-20T12:28:26Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/2582/events",
  "html_url": "https://github.com/fluent/fluentd/issues/2582",
  "id": 482830532,
  "labels": [
    {
      "color": "e11d21",
      "default": true,
      "description": null,
      "id": 94152935,
      "name": "bug",
      "node_id": "MDU6TGFiZWw5NDE1MjkzNQ==",
      "url": "https://api.github.com/repos/fluent/fluentd/labels/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/2582/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0ODI4MzA1MzI=",
  "number": 2582,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "File output plugin cannot resume with path placeholders",
  "updated_at": "2019-09-02T06:47:01Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/2582",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/8225175?v=4",
    "events_url": "https://api.github.com/users/cflee/events{/privacy}",
    "followers_url": "https://api.github.com/users/cflee/followers",
    "following_url": "https://api.github.com/users/cflee/following{/other_user}",
    "gists_url": "https://api.github.com/users/cflee/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/cflee",
    "id": 8225175,
    "login": "cflee",
    "node_id": "MDQ6VXNlcjgyMjUxNzU=",
    "organizations_url": "https://api.github.com/users/cflee/orgs",
    "received_events_url": "https://api.github.com/users/cflee/received_events",
    "repos_url": "https://api.github.com/users/cflee/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/cflee/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cflee/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/cflee"
  }
}