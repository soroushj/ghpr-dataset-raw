{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**Describe the bug**\r\nLet's say there is a file called _symlink_1.log_, which is a broken symlink (i.e. symlink pointing to log file which no longer exists). By default, if we tell Fluentd to tail _symlink_1.log_, it keeps generating the following error every minute:\r\n`2020-06-11 18:59:34 +0000 [warn]: #0 symlink_1.log unreadable. It is excluded and would be examined next time.`\r\n\r\nSince I cannot fix this broken symlink, and I do not want to see repeated 'unreadable' errors about this same broken symlink, I enable the ['ignore_repeated_permission_error'](https://docs.fluentd.org/input/tail#ignore_repeated_permission_error) tail flag -- unfortunately, this flag does not behave as expected.\r\n\r\n**Expected behavior**\r\nBased on the name and description (_It suppress repeated permission error logs_) of the flag, this is what I expect it to do:\r\nFor _symlink1.log_, the FIRST time an 'unreadable' error is generated for this file, it will be printed -- all subsequent 'unreadable' errors _**for this particular file**_ will not be printed.\r\nNow, let's say there is another file called _symlink2.log_, which is also a broken symlink. Since this is a different file, again, the FIRST time an 'unreadable' error is generated for this file, it will be printed -- all subsequent 'unreadable' errors _**for this particular file**_ will not be printed.\r\n\r\nIn other words, when this flag is enabled, we should only see ONE 'unreadable' error message _**per file**_ -- i.e. if we have 2 broken symlinks, we should see 2 'unreadable' error messages. This way, we don't see endless errors about the same file, but do not miss out on errors for NEW files.\r\n\r\n**Actual, buggy behavior**\r\nInstead, when I enable this flag, this is what seems to happen:\r\nRegardless of how many different files are causing errors, Fluentd only prints the very FIRST 'unreadable' error it gets -- it ignores all other 'unreadable' errors, even if they're being caused by a different file!\r\nEg. _symlink1.log_ will only have 1 error message (which is expected), but all other files (_symlink2.log_) will have 0 messages! This is bad, since now I have no way of even knowing that there is a broken symlink called _symlink2.log_!\r\n\r\n**To Reproduce**\r\nFirst, to clarify, although the [FAQ](https://docs.fluentd.org/input/tail#in_tail-shows-path-to-file-unreadable-log-message-why) says that this error means that Fluentd does not have permission to read the file, that is not the case here. Here, Fluentd DOES have permission to tail the file -- my problem is that the file it is tailing is actually a broken symlink.\r\n\r\nI noticed this when running the [Fluentd Kubernetes Daemonset](https://github.com/fluent/fluentd-kubernetes-daemonset) on a Kubernetes cluster. My cluster stores symlinks to certain system container logs in _/var/log/sys_ -- I am using Fluentd to tail all the files in that folder. \r\n\r\nUnfortunately, it looks like every time a new _nginx-proxy_ container is created, a new _nginx-proxy_ symlink is created in that folder, which means the old _nginx-proxy_ symlink is now broken.\r\ni.e. If you look inside _/var/log/sys_, you will see something like this:\r\n```\r\nnginx-proxy_277.log -> /var/lib/docker/containers/277/277-json.log\r\nnginx-proxy_584.log -> /var/lib/docker/containers/584/584-json.log\r\nnginx-proxy_a06.log -> /var/lib/docker/containers/a06/a06-json.log\r\nnginx-proxy_f7b.log -> /var/lib/docker/containers/f7b/f7b-json.log\r\n# This is the most recent file -- this is the only symlink here which is not broken!\r\nnginx-proxy_ca2.log -> /var/lib/docker/containers/ca2/ca2-json.log\r\n```\r\n\r\nBy default, every minute, Fluentd generates errors for these 4 broken symlinks:\r\n```\r\n2020-06-11 19:44:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_f7b.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:44:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_277.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:44:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_a06.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:44:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_584.log unreadable. It is excluded and would be examined next time.\r\n\r\n2020-06-11 19:45:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_f7b.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:45:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_277.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:45:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_a06.log unreadable. It is excluded and would be examined next time.\r\n2020-06-11 19:45:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_584.log unreadable. It is excluded and would be examined next time.\r\n\r\n...\r\n```\r\n\r\nI cannot manually fix/remove these broken symlinks and I do not want error messages about these 4 files repeated endlessly in Fluentd's logs, since that makes it very hard to read and catch other issues in Fluentd's logs. \r\nSo, when I enabled the _ignore_repeated_permission_error_ flag, I was hoping that it would just print 4 error messages (1 per broken symlink), but no more errors after that for those same files.\r\nTomorrow, if there is a new 5th symlink which is also broken, then again I want the first error message for that new file to be printed, but no more errors after that for that same file.\r\n\r\nInstead, I get just 1 error message, but nothing else after that! Thus, tomorrow if there is a new 5th symlink which is broken, I will never know about it because there will be no error message!\r\nEg.\r\n```\r\n2020-06-11 19:44:34 +0000 [warn]: #0 /var/log/sys/nginx-proxy_f7b.log unreadable. It is excluded and would be examined next time.\r\n\r\n# No more 'unreadable' error messages, for any file -- I am now blind to future issues of this type!!\r\n```\r\n\r\n**Your Environment**\r\n\r\n- Fluentd Kubernetes Daemonset version: `v1.10.4-debian-forward-1.0`\r\n\r\n**Your Configuration**\r\n\r\n```\r\n<source>\r\n  @type tail\r\n  @id logs\r\n\r\n  tag kubernetes.*\r\n\r\n  path /var/log/sys/*.log, /var/log/containers/*_cattle-system*.log, ...\r\n  pos_file /var/log/fluentd-container.log.pos\r\n\r\n  <parse>\r\n    @type \"#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'json'}\"\r\n    time_format %Y-%m-%dT%H:%M:%S.%NZ\r\n  </parse>\r\n  \r\n  path_key log_file\r\n  read_from_head true\r\n  pos_file_compaction_interval 24h\r\n  rotate_wait 5s\r\n\r\n  enable_watch_timer true\r\n  enable_stat_watcher false\r\n\r\n  ignore_repeated_permission_error true\r\n</source>\r\n```\r\n",
  "closed_at": "2020-06-17T13:41:04Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/16928?v=4",
    "events_url": "https://api.github.com/users/repeatedly/events{/privacy}",
    "followers_url": "https://api.github.com/users/repeatedly/followers",
    "following_url": "https://api.github.com/users/repeatedly/following{/other_user}",
    "gists_url": "https://api.github.com/users/repeatedly/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/repeatedly",
    "id": 16928,
    "login": "repeatedly",
    "node_id": "MDQ6VXNlcjE2OTI4",
    "organizations_url": "https://api.github.com/users/repeatedly/orgs",
    "received_events_url": "https://api.github.com/users/repeatedly/received_events",
    "repos_url": "https://api.github.com/users/repeatedly/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/repeatedly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/repeatedly/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/repeatedly"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/fluent/fluentd/issues/3038/comments",
  "created_at": "2020-06-11T20:17:49Z",
  "events_url": "https://api.github.com/repos/fluent/fluentd/issues/3038/events",
  "html_url": "https://github.com/fluent/fluentd/issues/3038",
  "id": 637295245,
  "labels": [],
  "labels_url": "https://api.github.com/repos/fluent/fluentd/issues/3038/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MzcyOTUyNDU=",
  "number": 3038,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/fluent/fluentd",
  "state": "closed",
  "title": "'ignore_repeated_permission_error' tail flag does not behave as expected",
  "updated_at": "2020-07-15T20:42:25Z",
  "url": "https://api.github.com/repos/fluent/fluentd/issues/3038",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/6486632?v=4",
    "events_url": "https://api.github.com/users/pranavmarla/events{/privacy}",
    "followers_url": "https://api.github.com/users/pranavmarla/followers",
    "following_url": "https://api.github.com/users/pranavmarla/following{/other_user}",
    "gists_url": "https://api.github.com/users/pranavmarla/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/pranavmarla",
    "id": 6486632,
    "login": "pranavmarla",
    "node_id": "MDQ6VXNlcjY0ODY2MzI=",
    "organizations_url": "https://api.github.com/users/pranavmarla/orgs",
    "received_events_url": "https://api.github.com/users/pranavmarla/received_events",
    "repos_url": "https://api.github.com/users/pranavmarla/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/pranavmarla/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pranavmarla/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/pranavmarla"
  }
}