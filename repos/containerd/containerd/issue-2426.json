{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/260642?v=4",
    "events_url": "https://api.github.com/users/ehazlett/events{/privacy}",
    "followers_url": "https://api.github.com/users/ehazlett/followers",
    "following_url": "https://api.github.com/users/ehazlett/following{/other_user}",
    "gists_url": "https://api.github.com/users/ehazlett/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ehazlett",
    "id": 260642,
    "login": "ehazlett",
    "node_id": "MDQ6VXNlcjI2MDY0Mg==",
    "organizations_url": "https://api.github.com/users/ehazlett/orgs",
    "received_events_url": "https://api.github.com/users/ehazlett/received_events",
    "repos_url": "https://api.github.com/users/ehazlett/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ehazlett/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ehazlett/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ehazlett"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/260642?v=4",
      "events_url": "https://api.github.com/users/ehazlett/events{/privacy}",
      "followers_url": "https://api.github.com/users/ehazlett/followers",
      "following_url": "https://api.github.com/users/ehazlett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ehazlett/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ehazlett",
      "id": 260642,
      "login": "ehazlett",
      "node_id": "MDQ6VXNlcjI2MDY0Mg==",
      "organizations_url": "https://api.github.com/users/ehazlett/orgs",
      "received_events_url": "https://api.github.com/users/ehazlett/received_events",
      "repos_url": "https://api.github.com/users/ehazlett/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ehazlett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ehazlett/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ehazlett"
    }
  ],
  "author_association": "MEMBER",
  "body": "# Shim API for Runtimes\r\n\r\n**Authors:**\r\n\r\n* @crosbymichael\r\n* @ehazlett\r\n\r\nMore VM based runtimes have internal state and more abstract actions.\r\nA CLI approach introduces issues with state management.\r\nThis proposal introduces a shim API for solving these state issues at the shim layer in containerd.\r\nThe goals is to provide an API that various runtimes can implement to add support in containerd while\r\nstill having control of state and abstract actions.\r\n\r\n### v2 Task(shim) API\r\n\r\n#### Previous Shim API\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage containerd.runtime.linux.shim.v1;\r\n\r\nservice Shim {\r\n\trpc State(StateRequest) returns (StateResponse);\r\n\trpc Create(CreateTaskRequest) returns (CreateTaskResponse);\r\n\trpc Start(StartRequest) returns (StartResponse);\r\n\trpc Delete(google.protobuf.Empty) returns (DeleteResponse);\r\n\trpc DeleteProcess(DeleteProcessRequest) returns (DeleteResponse);\r\n\trpc ListPids(ListPidsRequest) returns (ListPidsResponse);\r\n\trpc Pause(google.protobuf.Empty) returns (google.protobuf.Empty);\r\n\trpc Resume(google.protobuf.Empty) returns (google.protobuf.Empty);\r\n\trpc Checkpoint(CheckpointTaskRequest) returns (google.protobuf.Empty);\r\n\trpc Kill(KillRequest) returns (google.protobuf.Empty);\r\n\trpc Exec(ExecProcessRequest) returns (google.protobuf.Empty);\r\n\trpc ResizePty(ResizePtyRequest) returns (google.protobuf.Empty);\r\n\trpc CloseIO(CloseIORequest) returns (google.protobuf.Empty);\r\n\trpc ShimInfo(google.protobuf.Empty) returns (ShimInfoResponse);\r\n\trpc Update(UpdateTaskRequest) returns (google.protobuf.Empty);\r\n\trpc Wait(WaitRequest) returns (WaitResponse);\r\n}\r\n```\r\n#### New API\r\n\r\n```proto\r\nsyntax = \"proto3\";\r\n\r\npackage containerd.task.v2;\r\n\r\nservice Task {\r\n        rpc State(StateRequest) returns (StateResponse);\r\n        rpc Create(CreateTaskRequest) returns (CreateTaskResponse);\r\n        rpc Start(StartRequest) returns (StartResponse);\r\n        rpc Delete(DeleteRequest) returns (DeleteResponse);\r\n        rpc Pids(PidsRequest) returns (PidsResponse);\r\n        rpc Pause(google.protobuf.Empty) returns (google.protobuf.Empty);\r\n        rpc Resume(google.protobuf.Empty) returns (google.protobuf.Empty);\r\n        rpc Checkpoint(CheckpointTaskRequest) returns (google.protobuf.Empty);\r\n        rpc Kill(KillRequest) returns (google.protobuf.Empty);\r\n        rpc Exec(ExecProcessRequest) returns (google.protobuf.Empty);\r\n        rpc ResizePty(ResizePtyRequest) returns (google.protobuf.Empty);\r\n        rpc CloseIO(CloseIORequest) returns (google.protobuf.Empty);\r\n        rpc Update(UpdateTaskRequest) returns (google.protobuf.Empty);\r\n        rpc Wait(WaitRequest) returns (WaitResponse);\r\n        rpc Stats(StatsRequest) returns (StatsResponse);\r\n}\r\n\r\n```\r\n\r\n### Shim Inputs\r\n\r\n#### Bundle\r\n\r\nThe OCI bundle is still the main source of configuration for shims.\r\nThe shim should not write to any other location on disk except the bundle.\r\nThe bundle can be used as a workspace for the shim with any additional state.\r\n\r\n```\r\n\u251c\u2500\u2500 io.containerd.runtime.v2\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 default\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 redis\r\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 config.json\r\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 rootfs/\r\n\r\n```\r\n\r\n#### Configuration\r\n\r\nConfiguration for shims can be passed via Opts or defaults defined within\r\nthe containerd `/etc/containerd/config.toml`.\r\n\r\n### Shim Outputs\r\n\r\n#### GRPC\r\n\r\nThe shim grpc service is the main source of interaction with the shim.\r\nThe shim is also expected to write a `shim.pid` file for containerd to read in case\r\nit is no longer able to access the shim via the GRPC api.\r\nThis pid will be used to `SIGKILL` the shim in case of a forceful shutdown.\r\n\r\n### UX\r\n\r\n```bash\r\n> ctr run --runtime io.containerd.runtime.v2.process\r\n> ctr run --runtime io.containerd.runtime.v2.gvisor\r\n> ctr run --runtime io.containerd.runtime.v2.kata\r\n> ctr run --runtime io.containerd.runtime.v2.oci\r\n```\r\n\r\nThe existing runtime will continue to work for upgrades where containers are running under v1 shims. ",
  "closed_at": "2018-07-18T20:14:11Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/169601?v=4",
    "events_url": "https://api.github.com/users/dmcgowan/events{/privacy}",
    "followers_url": "https://api.github.com/users/dmcgowan/followers",
    "following_url": "https://api.github.com/users/dmcgowan/following{/other_user}",
    "gists_url": "https://api.github.com/users/dmcgowan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/dmcgowan",
    "id": 169601,
    "login": "dmcgowan",
    "node_id": "MDQ6VXNlcjE2OTYwMQ==",
    "organizations_url": "https://api.github.com/users/dmcgowan/orgs",
    "received_events_url": "https://api.github.com/users/dmcgowan/received_events",
    "repos_url": "https://api.github.com/users/dmcgowan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/dmcgowan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dmcgowan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/dmcgowan"
  },
  "comments": 60,
  "comments_url": "https://api.github.com/repos/containerd/containerd/issues/2426/comments",
  "created_at": "2018-06-27T19:05:14Z",
  "events_url": "https://api.github.com/repos/containerd/containerd/issues/2426/events",
  "html_url": "https://github.com/containerd/containerd/issues/2426",
  "id": 336350973,
  "labels": [],
  "labels_url": "https://api.github.com/repos/containerd/containerd/issues/2426/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzYzNTA5NzM=",
  "number": 2426,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/containerd/containerd",
  "state": "closed",
  "title": "[proposal] Shim API v2",
  "updated_at": "2018-07-18T20:14:11Z",
  "url": "https://api.github.com/repos/containerd/containerd/issues/2426",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/749551?v=4",
    "events_url": "https://api.github.com/users/crosbymichael/events{/privacy}",
    "followers_url": "https://api.github.com/users/crosbymichael/followers",
    "following_url": "https://api.github.com/users/crosbymichael/following{/other_user}",
    "gists_url": "https://api.github.com/users/crosbymichael/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/crosbymichael",
    "id": 749551,
    "login": "crosbymichael",
    "node_id": "MDQ6VXNlcjc0OTU1MQ==",
    "organizations_url": "https://api.github.com/users/crosbymichael/orgs",
    "received_events_url": "https://api.github.com/users/crosbymichael/received_events",
    "repos_url": "https://api.github.com/users/crosbymichael/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/crosbymichael/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/crosbymichael/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/crosbymichael"
  }
}