{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "Today `cri-containerd `has been vendor-ed in by `containerd` as a plugin. However, it still communicates with `containerd` through grpc api. This introduces extra rpc and unnecessary overhead.\r\n\r\nWe'd like to get rid of this to make the integration more stable, efficient and seamless.\r\n\r\ncri-containerd is using containerd client. I don't think we want to completely rewrite another client for in-process integration, because that is a lot of work and very hard to maintain in the future. So I think we should work at a interface level, and make a grpc based implementation and a direct implementation.\r\n\r\nTo make it happen, there are several options:\r\n* **Option 1 - GRPC interface level:** One option is to work at the grpc interface level. We need a client that implements the grpc client interface, but talk with grpc server interface directly, e.g. [`TasksClient`](https://github.com/containerd/containerd/blob/master/api/services/tasks/v1/tasks.pb.go#L380) and [`TasksServer`](https://github.com/containerd/containerd/blob/master/api/services/tasks/v1/tasks.pb.go#L567)\r\n  * Clear and generic solution to all grpc services.\r\n  * **Option 1.1:** Manually write clients for each service.\r\n    * This requires a lot of robotic manual work.\r\n  * **Option 1.2:** Use [`grpc-go/test/bufconn`](https://github.com/grpc/grpc-go/tree/master/test/bufconn). \r\n    * I'm not sure whether we want to use things in `test` package in production;\r\n    * It seems that with `test/bufconn`, the grpc server won't be able to support real remote request;\r\n    * Network stack is skipped, but serialization/deserialization is still there.\r\n  * **Option 1.3:** Use [inprocgrpc](https://godoc.org/github.com/fullstorydev/grpchan/inprocgrpc), which supports in process grpc via channels. (Related grpc-go issue: https://github.com/grpc/grpc-go/issues/906)\r\n    * Extra dependency, and need to modify how we build protobuf.\r\n    * We've never tested this yet.\r\n  * **Option 1.4:** Write something ourselves to support in-process grpc.\r\n* **Option 2 - Internal interface level:** Define internal interface for all services. Client should use internal interface, and server side should implement the interface, e.g. [content.Store](https://github.com/containerd/containerd/blob/master/content/content.go#L128). However, most grpc services don't have corresponding internal interface yet:\r\n    * internal interface - whether there is internal interface defined;\r\n    * client usage - whether containerd client is using the internal interface;\r\n    * server implementation - whether server has an implementation of the internal interface which has equivalent functionality with grpc server implementation;\r\n    * publishing event -  whether the server implementation has necessary events published.\r\n    * **If we choose option 2, the code refactoring won't be small.**\r\n\r\n|    Service    | Internal Interface | Client Usage | Server Implementation | Publishing Event |\r\n|:-------------:|:------------------:|:------------:|:---------------------:|:----------------:|\r\n|   Namespace   |         Yes        |      Yes     |           No          |         -        |\r\n|   Container   |         Yes        |      Yes     |           No          |         -        |\r\n|    Content    |         Yes        |      Yes     |          Yes          |        No        |\r\n|    Snapshot   |         Yes        |      Yes     |          Yes          |        No        |\r\n|      Task     |         No         |      No      |           No          |         -        |\r\n|     Image     |         Yes        |      Yes     |           No          |         -        |\r\n|      Diff     |         Yes        |      Yes     |          Yes          |         -        |\r\n| Introspection |         No         |      No      |           No          |         -        |\r\n|     Health    |     not needed     |       -      |           -           |         -        |\r\n|     Event     |   event.exchange   |       -      |           -           |         -        |\r\n|    Version    |     not needed     |       -      |           -           |         -        |\r\n|     Leases    |         No         |      No      |           No          |         -        |\r\n\r\nGiven so, which do we prefer? @containerd/containerd-maintainers @containerd/containerd-reviewers ",
  "closed_at": "2018-03-12T21:38:28Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/120601?v=4",
    "events_url": "https://api.github.com/users/stevvooe/events{/privacy}",
    "followers_url": "https://api.github.com/users/stevvooe/followers",
    "following_url": "https://api.github.com/users/stevvooe/following{/other_user}",
    "gists_url": "https://api.github.com/users/stevvooe/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/stevvooe",
    "id": 120601,
    "login": "stevvooe",
    "node_id": "MDQ6VXNlcjEyMDYwMQ==",
    "organizations_url": "https://api.github.com/users/stevvooe/orgs",
    "received_events_url": "https://api.github.com/users/stevvooe/received_events",
    "repos_url": "https://api.github.com/users/stevvooe/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/stevvooe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stevvooe/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/stevvooe"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/containerd/containerd/issues/2183/comments",
  "created_at": "2018-03-03T00:11:41Z",
  "events_url": "https://api.github.com/repos/containerd/containerd/issues/2183/events",
  "html_url": "https://github.com/containerd/containerd/issues/2183",
  "id": 301945045,
  "labels": [],
  "labels_url": "https://api.github.com/repos/containerd/containerd/issues/2183/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2018-04-24T22:00:29Z",
    "closed_issues": 85,
    "created_at": "2017-09-21T20:42:54Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/120601?v=4",
      "events_url": "https://api.github.com/users/stevvooe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevvooe/followers",
      "following_url": "https://api.github.com/users/stevvooe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevvooe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevvooe",
      "id": 120601,
      "login": "stevvooe",
      "node_id": "MDQ6VXNlcjEyMDYwMQ==",
      "organizations_url": "https://api.github.com/users/stevvooe/orgs",
      "received_events_url": "https://api.github.com/users/stevvooe/received_events",
      "repos_url": "https://api.github.com/users/stevvooe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevvooe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevvooe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevvooe"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/containerd/containerd/milestone/15",
    "id": 2783844,
    "labels_url": "https://api.github.com/repos/containerd/containerd/milestones/15/labels",
    "node_id": "MDk6TWlsZXN0b25lMjc4Mzg0NA==",
    "number": 15,
    "open_issues": 0,
    "state": "closed",
    "title": "1.1",
    "updated_at": "2018-04-24T22:00:29Z",
    "url": "https://api.github.com/repos/containerd/containerd/milestones/15"
  },
  "node_id": "MDU6SXNzdWUzMDE5NDUwNDU=",
  "number": 2183,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/containerd/containerd",
  "state": "closed",
  "title": "Support in process integration between containerd and CRI plugin",
  "updated_at": "2018-03-12T21:38:28Z",
  "url": "https://api.github.com/repos/containerd/containerd/issues/2183",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5821883?v=4",
    "events_url": "https://api.github.com/users/Random-Liu/events{/privacy}",
    "followers_url": "https://api.github.com/users/Random-Liu/followers",
    "following_url": "https://api.github.com/users/Random-Liu/following{/other_user}",
    "gists_url": "https://api.github.com/users/Random-Liu/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Random-Liu",
    "id": 5821883,
    "login": "Random-Liu",
    "node_id": "MDQ6VXNlcjU4MjE4ODM=",
    "organizations_url": "https://api.github.com/users/Random-Liu/orgs",
    "received_events_url": "https://api.github.com/users/Random-Liu/received_events",
    "repos_url": "https://api.github.com/users/Random-Liu/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Random-Liu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Random-Liu/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Random-Liu"
  }
}