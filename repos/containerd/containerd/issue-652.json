{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "It would be useful to support multiple snapshotters on single daemon, because the snapshotters would have different characteristics in their performance and stability.\r\n\r\n## Design\r\n\r\n### Native API\r\n\r\nIIUC the only file we need to change is [`services/rootfs/rootfs.proto`](https://github.com/docker/containerd/blob/master/api/services/rootfs/rootfs.proto).\r\n\r\nWe don't need to modify [`CreateRequest.rootfs`](https://github.com/docker/containerd/blob/master/api/services/execution/execution.proto), because the rootfs service should return snapshotter-unaware `MountResponse`.\r\n\r\n```diff\r\n--- rootfs.proto        2017-03-22 17:13:05.575021100 +0900\r\n+++ rootfs.proto2       2017-03-22 17:16:18.493459000 +0900\r\n@@ -7,13 +7,23 @@\r\n import \"github.com/docker/containerd/api/types/descriptor/descriptor.proto\";\r\n\r\n service RootFS {\r\n+       rpc GetSnapshotters(GetSnapshottersRequest) returns (GetSnapshottersResponse);\r\n        rpc Unpack(UnpackRequest) returns (UnpackResponse);\r\n        rpc Prepare(PrepareRequest) returns (MountResponse);\r\n        rpc Mounts(MountsRequest) returns (MountResponse);\r\n }\r\n\r\n+message GetSnapshottersRequest {\r\n+       // empty at the moment\r\n+}\r\n+\r\n+message GetSnapshottersResponse {\r\n+       repeated string snapshotters = 1; // the first one should be considered as \"default\"\r\n+}\r\n+\r\n message UnpackRequest {\r\n-       repeated containerd.v1.types.Descriptor layers = 1;\r\n+       string snapshotter = 1; // do we want to allow an empty string as \"default\"?\r\n+       repeated containerd.v1.types.Descriptor layers = 2;\r\n }\r\n\r\n message UnpackResponse {\r\n@@ -21,13 +31,15 @@\r\n }\r\n\r\n message PrepareRequest {\r\n-       string name = 1;\r\n+       string snapshotter = 1;\r\n+       string name = 2;\r\n        string chain_id = 2 [(gogoproto.customtype) = \"github.com/opencontainers/go-digest.Digest\", (gogoproto.nullable) = false, (gogoproto.customname) = \"ChainID\"];\r\n        bool readonly = 3;\r\n }\r\n\r\n message MountsRequest {\r\n-       string name = 1;\r\n+       string snapshotter = 1;\r\n+       string name = 2;\r\n }\r\n\r\n message MountResponse {\r\n\r\n\r\n ```\r\n\r\n\r\n### CRI API\r\n\r\nEven though we have not yet started to work on CRI endpoint, it would be good to consider how we can support multiple snapshotters for CRI endpoint at this moment.\r\n\r\nMy suggestion is to include the snapshotter information (e.g. `com.docker.containerd.cri.snapshotter=overlay`) to the `PodSandboxConfig.annotations` field.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/760d8e98e8f6ad27aaf50b1a030cb9e7b6859aab/pkg/kubelet/api/v1alpha1/runtime/api.proto#L253-L309\r\n\r\nSpecifying this annotation is OPTIONAL.\r\nIf a CRI client does not specify this annotation, the containerd daemon should use the default snapshotter.\r\n\r\nHow to get the list of supported snapshotter would not be defined in CRI API, and hence CRI client would still need to call containerd-native `GetSnapshotters()` API.\r\n(Or should we suggest adding such an API to CRI upstream?)\r\n\r\n\r\nExample flow\r\n\r\n```go\r\npsc := PodSandboxConfig{\r\n\tannotations: map[string]string{\"com.docker.containerd.cri.snapshotter=overlay\"},\r\n}\r\nvar rpsr RunPodSandboxResponse = RunPodSandbox(RunPodSandboxRequest{\r\n\tconfig: psc,\r\n\t...\r\n})\r\nvar pssr PodSandBoxStatusResponse = PodSandboxStatus(PodSandboxStatusRequest{\r\n\tpod_sandbox_id: rpsr.pod_sandbox_id,\r\n\t...\r\n})\r\nvar pss PodSandboxStatus = pssr.status\r\n\r\ncc := ContainerConfig {\r\n\timage: ImageSpec {\r\n\t\timage: \"docker.io/library/redis\",\r\n\t},\r\n\tannotations: pss.annotations,\r\n\t...\r\n}\r\nvar ccr CreateContainerResponse =  CreateContainer(CreateContainerRequest{\r\n\tpod_sandbox_id: pss.pod_sandbox_id,\r\n\tconfig: cc,\r\n\tsandbox_config: psc,\r\n\t...\r\n})\r\n```\r\n\r\n\r\nAlternative idea for the annotation is specifying multiple candidates of snapshotters as `com.docker.containerd.cri.snapshotters=aufs,overlay`.\r\nThe containerd daemon should pick one of these candidates.\r\nAt least one candidate is supported, it should not result in an error.\r\n(e.g. if aufs is unsupported, it should automatically fall-back to overlay)\r\n",
  "closed_at": "2017-07-12T20:34:32Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/169601?v=4",
    "events_url": "https://api.github.com/users/dmcgowan/events{/privacy}",
    "followers_url": "https://api.github.com/users/dmcgowan/followers",
    "following_url": "https://api.github.com/users/dmcgowan/following{/other_user}",
    "gists_url": "https://api.github.com/users/dmcgowan/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/dmcgowan",
    "id": 169601,
    "login": "dmcgowan",
    "node_id": "MDQ6VXNlcjE2OTYwMQ==",
    "organizations_url": "https://api.github.com/users/dmcgowan/orgs",
    "received_events_url": "https://api.github.com/users/dmcgowan/received_events",
    "repos_url": "https://api.github.com/users/dmcgowan/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/dmcgowan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dmcgowan/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/dmcgowan"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/containerd/containerd/issues/652/comments",
  "created_at": "2017-03-22T09:01:09Z",
  "events_url": "https://api.github.com/repos/containerd/containerd/issues/652/events",
  "html_url": "https://github.com/containerd/containerd/issues/652",
  "id": 215993515,
  "labels": [],
  "labels_url": "https://api.github.com/repos/containerd/containerd/issues/652/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2017-07-13T00:14:32Z",
    "closed_issues": 48,
    "created_at": "2017-02-28T22:59:22Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/749551?v=4",
      "events_url": "https://api.github.com/users/crosbymichael/events{/privacy}",
      "followers_url": "https://api.github.com/users/crosbymichael/followers",
      "following_url": "https://api.github.com/users/crosbymichael/following{/other_user}",
      "gists_url": "https://api.github.com/users/crosbymichael/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/crosbymichael",
      "id": 749551,
      "login": "crosbymichael",
      "node_id": "MDQ6VXNlcjc0OTU1MQ==",
      "organizations_url": "https://api.github.com/users/crosbymichael/orgs",
      "received_events_url": "https://api.github.com/users/crosbymichael/received_events",
      "repos_url": "https://api.github.com/users/crosbymichael/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/crosbymichael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crosbymichael/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/crosbymichael"
    },
    "description": "The containerd alpha release comes with a stable API for people to start or complete their integrations of containerd into their platforms. \r\n\r\nThe API \"should be\" stable but small changes may be necessary based on feedback from integrations.",
    "due_on": "2017-07-12T07:00:00Z",
    "html_url": "https://github.com/containerd/containerd/milestone/8",
    "id": 2354639,
    "labels_url": "https://api.github.com/repos/containerd/containerd/milestones/8/labels",
    "node_id": "MDk6TWlsZXN0b25lMjM1NDYzOQ==",
    "number": 8,
    "open_issues": 0,
    "state": "closed",
    "title": "containerd alpha",
    "updated_at": "2017-07-13T00:14:32Z",
    "url": "https://api.github.com/repos/containerd/containerd/milestones/8"
  },
  "node_id": "MDU6SXNzdWUyMTU5OTM1MTU=",
  "number": 652,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/containerd/containerd",
  "state": "closed",
  "title": "Proposal: support multiple snapshotters on single daemon",
  "updated_at": "2017-07-12T20:34:32Z",
  "url": "https://api.github.com/repos/containerd/containerd/issues/652",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/9248427?v=4",
    "events_url": "https://api.github.com/users/AkihiroSuda/events{/privacy}",
    "followers_url": "https://api.github.com/users/AkihiroSuda/followers",
    "following_url": "https://api.github.com/users/AkihiroSuda/following{/other_user}",
    "gists_url": "https://api.github.com/users/AkihiroSuda/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/AkihiroSuda",
    "id": 9248427,
    "login": "AkihiroSuda",
    "node_id": "MDQ6VXNlcjkyNDg0Mjc=",
    "organizations_url": "https://api.github.com/users/AkihiroSuda/orgs",
    "received_events_url": "https://api.github.com/users/AkihiroSuda/received_events",
    "repos_url": "https://api.github.com/users/AkihiroSuda/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/AkihiroSuda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/AkihiroSuda/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/AkihiroSuda"
  }
}