{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n-->\r\n\r\n**Description**\r\n\r\nWhen deleting a task that was started with one of its three standard file descriptors (stdin, stdout, stderr) as `/dev/null` (or anything else in `/dev`), the entire `/dev` directory is wiped out.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n1. Create a container\r\n2. Create a task with at least one of stdin/stdout/stderr as `/dev/null`. I was unable replicate the issue when started via `ctr` command, but yes via code (below)\r\n3. Kill the task `ctr t kill foo`\r\n4. Delete the task `ctr t delete foo`\r\n5. Your entire `/dev` is emptied out\r\n\r\n```go\r\n          io := cio.Config{\r\n                                Stdin:    \"/dev/null\",\r\n                                Stdout:   stdoutFile,\r\n                                Stderr:   stderrFile,\r\n                                Terminal: false,\r\n        }\r\n        task, err := ctr.NewTask(ctx, io)\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\nemptied `/dev`\r\n\r\n\r\n**Describe the results you expected:**\r\n\r\nNo collateral damage\r\n\r\n**Output of `containerd --version`:**\r\n\r\n```\r\n$ containerd --version\r\ncontainerd github.com/containerd/containerd v1.3.2-1-g49b826bf 49b826bfdf925d41764f6ed77cbe332ec56fd6c7\r\n$ ctr --version\r\nctr github.com/containerd/containerd v1.3.2-1-g49b826bf\r\n```\r\n\r\n**Any other relevant information:**\r\n\r\nI traced the source of the issue, and can replicate it with latest code in git. The problem specifically is [here](https://github.com/containerd/containerd/blob/f7bd7e309cd91e0fa08f1a0168dff55f17d2eeb2/container.go#L413-L422):\r\n\r\n```go\r\n\tpath := getFifoDir([]string{\r\n\t\tresponse.Process.Stdin,\r\n\t\tresponse.Process.Stdout,\r\n\t\tresponse.Process.Stderr,\r\n\t})\r\n\tcloser := func() error {\r\n\t\treturn os.RemoveAll(path)\r\n\t}\r\n```\r\n\r\nThe `getFifoDir()` assumes:\r\n\r\n* all stdin/stdout/stderr are in a single directory\r\n* that directory is dedicated to this task\r\n\r\nThus, upon deletion of the task, it does `os.RemoveAll()`. \r\n\r\nThis isn't strictly true, or at least isn't so in the docs that I found; e.g. `/dev/null` is used, or some other existing file is used; or some file in a directory that is shared with other files.\r\n\r\nThere are several ways to fix this, but I think first of all, `os.RemoveAll()` should be made optional. Let the caller indicate if the fifos (and/or the directory they are in) is meant to be removed on cleanup.\r\n\r\ncc @justincormack @rvs @rn \r\n",
  "closed_at": "2020-03-30T10:58:15Z",
  "closed_by": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/17510957?v=4",
    "events_url": "https://api.github.com/users/fuweid/events{/privacy}",
    "followers_url": "https://api.github.com/users/fuweid/followers",
    "following_url": "https://api.github.com/users/fuweid/following{/other_user}",
    "gists_url": "https://api.github.com/users/fuweid/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/fuweid",
    "id": 17510957,
    "login": "fuweid",
    "node_id": "MDQ6VXNlcjE3NTEwOTU3",
    "organizations_url": "https://api.github.com/users/fuweid/orgs",
    "received_events_url": "https://api.github.com/users/fuweid/received_events",
    "repos_url": "https://api.github.com/users/fuweid/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/fuweid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fuweid/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/fuweid"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/containerd/containerd/issues/4019/comments",
  "created_at": "2020-02-13T09:09:47Z",
  "events_url": "https://api.github.com/repos/containerd/containerd/issues/4019/events",
  "html_url": "https://github.com/containerd/containerd/issues/4019",
  "id": 564538721,
  "labels": [
    {
      "color": "FF8C94",
      "default": false,
      "description": null,
      "id": 347599646,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwzNDc1OTk2NDY=",
      "url": "https://api.github.com/repos/containerd/containerd/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/containerd/containerd/issues/4019/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NjQ1Mzg3MjE=",
  "number": 4019,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/containerd/containerd",
  "state": "closed",
  "title": "starting a task with /dev/null for stdin, stdout or stderr causes entire /dev to be deleted",
  "updated_at": "2020-03-30T11:05:39Z",
  "url": "https://api.github.com/repos/containerd/containerd/issues/4019",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/282526?v=4",
    "events_url": "https://api.github.com/users/deitch/events{/privacy}",
    "followers_url": "https://api.github.com/users/deitch/followers",
    "following_url": "https://api.github.com/users/deitch/following{/other_user}",
    "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/deitch",
    "id": 282526,
    "login": "deitch",
    "node_id": "MDQ6VXNlcjI4MjUyNg==",
    "organizations_url": "https://api.github.com/users/deitch/orgs",
    "received_events_url": "https://api.github.com/users/deitch/received_events",
    "repos_url": "https://api.github.com/users/deitch/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/deitch"
  }
}