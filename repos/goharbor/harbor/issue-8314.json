{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5634205?v=4",
    "events_url": "https://api.github.com/users/heww/events{/privacy}",
    "followers_url": "https://api.github.com/users/heww/followers",
    "following_url": "https://api.github.com/users/heww/following{/other_user}",
    "gists_url": "https://api.github.com/users/heww/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/heww",
    "id": 5634205,
    "login": "heww",
    "node_id": "MDQ6VXNlcjU2MzQyMDU=",
    "organizations_url": "https://api.github.com/users/heww/orgs",
    "received_events_url": "https://api.github.com/users/heww/received_events",
    "repos_url": "https://api.github.com/users/heww/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/heww/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/heww/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/heww"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/5634205?v=4",
      "events_url": "https://api.github.com/users/heww/events{/privacy}",
      "followers_url": "https://api.github.com/users/heww/followers",
      "following_url": "https://api.github.com/users/heww/following{/other_user}",
      "gists_url": "https://api.github.com/users/heww/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/heww",
      "id": 5634205,
      "login": "heww",
      "node_id": "MDQ6VXNlcjU2MzQyMDU=",
      "organizations_url": "https://api.github.com/users/heww/orgs",
      "received_events_url": "https://api.github.com/users/heww/received_events",
      "repos_url": "https://api.github.com/users/heww/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/heww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heww/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/heww"
    }
  ],
  "author_association": "NONE",
  "body": "If you are reporting a problem, please make sure the following information are provided:\r\n\r\n**Expected behavior and actual behavior:**\r\nA clear and concise description of what you expected to happen and what's the actual behavior. If applicable, add screenshots to help explain your problem.\r\n\r\n**Steps to reproduce the problem:**\r\nPlease provide the steps to reproduce this problem.\r\nI get an exception when I use the external database to start the harbor.\r\n\r\n\r\n**Versions:**\r\nPlease specify the versions of following systems.\r\n- harbor version: [1.8.1]\r\n- docker engine version: [17.09]\r\n- docker-compose version: [1.24.0]\r\n\r\n**Additional context:**\r\n* **Harbor config files:** You can get them by packaging `harbor.cfg` and files in the same directory, including subdirectory.\r\n\r\n```\r\n# Configuration file of Harbor\r\n\r\n# The IP address or hostname to access admin UI and registry service.\r\n# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.\r\nhostname: 10.x.x62\r\n\r\n# http related config\r\nhttp:\r\n  # port for http, default is 80. If https enabled, this port will redirect to https port\r\n  port: 80\r\n\r\n# https related config\r\n# https:\r\n#   # https port for harbor, default is 443\r\n#   port: 443\r\n#   # The path of cert and key files for nginx\r\n#   certificate: /your/certificate/path\r\n#   private_key: /your/private/key/path\r\n\r\n# Uncomment external_url if you want to enable external proxy\r\n# And when it enabled the hostname will no longer used\r\n# external_url: https://reg.mydomain.com:8433\r\n\r\n# The initial password of Harbor admin\r\n# It only works in first time to install harbor\r\n# Remember Change the admin password from UI after launching Harbor.\r\nharbor_admin_password: xxxsdwsfsdsd\r\n\r\n# Harbor DB configuration\r\n#database:\r\n  # The password for the root user of Harbor DB. Change this before any production use.\r\n#  password: Ide\r\n\r\n# The default data volume\r\ndata_volume: /app/container/data/harbor\r\n\r\n# Harbor Storage settings by default is using /data dir on local filesystem\r\n# Uncomment storage_service setting If you want to using external storage\r\n# storage_service:\r\n#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore\r\n#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.\r\n#   ca_bundle:\r\n\r\n#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss\r\n#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/\r\n#   filesystem:\r\n#     maxthreads: 100\r\n#   # set disable to true when you want to disable registry redirect\r\n#   redirect:\r\n#     disabled: false\r\n\r\n# Clair configuration\r\nclair:\r\n  # The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.\r\n  updaters_interval: 12\r\n\r\n  # Config http proxy for Clair, e.g. http://my.proxy.com:3128\r\n  # Clair doesn't need to connect to harbor internal components via http proxy.\r\n  http_proxy:\r\n  https_proxy:\r\n  no_proxy: 127.0.0.1,localhost,core,registry\r\n\r\njobservice:\r\n  # Maximum number of job workers in job service\r\n  max_job_workers: 10\r\n\r\nchart:\r\n  # Change the value of absolute_url to enabled can enable absolute url in chart\r\n  absolute_url: disabled\r\n\r\n# Log configurations\r\nlog:\r\n  # options are debug, info, warning, error, fatal\r\n  level: info\r\n  # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.\r\n  rotate_count: 5\r\n  # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.\r\n  # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G\r\n  # are all valid.\r\n  rotate_size: 200M\r\n  # The directory on your host that store log\r\n  location: /app/container/data/harbor/log\r\n\r\n#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!\r\n_version: 1.8.0\r\n\r\n# Uncomment external_database if using external database.\r\nexternal_database:\r\n  harbor:\r\n    host: 10.x.x62\r\n    port: 54321\r\n    db_name: harbor\r\n    username: postgres\r\n    password: Idw3\r\n    ssl_mode: disable\r\n  clair:\r\n    host: 10.x.x62\r\n    port: 54321\r\n    db_name: clair\r\n    username: postgres\r\n    password: sd3\r\n    ssl_mode: disable\r\n  notary_signer:\r\n    host: 10.x.x62\r\n    port: 54321\r\n    db_name: notary_signer\r\n    username: postgres\r\n    password: Id3\r\n    ssl_mode: disable\r\n  notary_server:\r\n    host: 10.x.x62\r\n    port: 54321\r\n    db_name: notary_server\r\n    username: postgres\r\n    password: Id3\r\n    ssl_mode: disable\r\n\r\n# Uncomment external_redis if using external Redis server\r\n# external_redis:\r\n#   host: redis\r\n#   port: 6379\r\n#   password:\r\n#   # db_index 0 is for core, it's unchangeable\r\n#   registry_db_index: 1\r\n#   jobservice_db_index: 2\r\n#   chartmuseum_db_index: 3\r\n\r\n# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.\r\n# uaa:\r\n#   ca_file: /path/to/ca\r\n```\r\n\r\n\r\n* **Log files:** You can get them by package the `/var/log/harbor/` .\r\n\r\n```\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/replication/adapter/harbor/adapter.go:41]: the factory for adapter harbor registered\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/replication/adapter/dockerhub/adapter.go:24]: Factory for adapter docker-hub registered\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/replication/adapter/native/adapter.go:30]: the factory for adapter docker-registry registered\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/replication/adapter/huawei/huawei_adapter.go:25]: the factory of Huawei adapter was registered\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/controllers/base.go:288]: Config path: /etc/core/app.conf\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/main.go:92]: initializing configurations...\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/config/config.go:98]: key path: /etc/core/key\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/config/config.go:71]: init secret store\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/config/config.go:74]: init project manager based on deploy mode\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/config/config.go:143]: initializing the project manager based on local database...\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/main.go:96]: configurations initialization completed\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/common/dao/base.go:84]: Registering database: type-PostgreSQL host-10.x.x.62 port-54321 databse-harbor sslmode-\"disable\"\r\nJul 17 16:47:51 172.17.0.1 core[23931]: [ORM]2019/07/17 08:47:51 Detect DB timezone: Etc/UTC open /usr/local/go/lib/time/zoneinfo.zip: no such file or directory\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/common/dao/base.go:89]: Register database completed\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/common/dao/pgsql.go:107]: Upgrading schema for pgsql ...\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/common/dao/pgsql.go:110]: No change in schema, skip.\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/main.go:68]: User id: 1 already has its encrypted password.\r\nJul 17 16:47:51 172.17.0.1 core[23931]: [ORM]2019/07/17 08:47:51 Detect DB timezone: Etc/UTC open /usr/local/go/lib/time/zoneinfo.zip: no such file or directory\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/common/dao/base.go:64]: initialized clair database\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/main.go:157]: Because SYNC_REGISTRY set false , no need to sync registry\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019-07-17T08:47:51Z [INFO] [/core/main.go:160]: Init proxy\r\nJul 17 16:47:51 172.17.0.1 core[23931]: 2019/07/17 08:47:51 #033[1;34m[I] [asm_amd64.s:2337] http server Running on http://:8080#033[0m\r\nJul 17 16:47:52 172.17.0.1 core[23931]: 2019/07/17 08:47:52 #033[1;44m[D] [server.go:2619] |     172.17.0.7|#033[42m 200 #033[0m|   4.768253ms|   match|#033[44m GET     #033[0m /api/internal/configurations   r:/api/internal/configurations#033[0m\r\nJul 17 16:48:21 172.17.0.1 core[23931]: 2019/07/17 08:48:21 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.643336ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:48:51 172.17.0.1 core[23931]: 2019/07/17 08:48:51 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.866037ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:49:21 172.17.0.1 core[23931]: 2019/07/17 08:49:21 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.526242ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:49:42 172.17.0.1 core[23931]: 2019-07-17T08:49:42Z [INFO] [/replication/registry/healthcheck.go:58]: Start regular health check for registries with interval 5m0s\r\nJul 17 16:49:51 172.17.0.1 core[23931]: 2019/07/17 08:49:51 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|    1.66912ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:50:21 172.17.0.1 core[23931]: 2019/07/17 08:50:21 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.588042ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:50:52 172.17.0.1 core[23931]: 2019/07/17 08:50:52 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|    1.90732ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:51:22 172.17.0.1 core[23931]: 2019/07/17 08:51:22 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.685492ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:51:52 172.17.0.1 core[23931]: 2019/07/17 08:51:52 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|    1.99702ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:52:22 172.17.0.1 core[23931]: 2019/07/17 08:52:22 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.650959ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:52:52 172.17.0.1 core[23931]: 2019/07/17 08:52:52 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|    1.82562ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:53:23 172.17.0.1 core[23931]: 2019/07/17 08:53:23 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   1.872757ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:53:53 172.17.0.1 core[23931]: 2019/07/17 08:53:53 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   8.047718ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:54:23 172.17.0.1 core[23931]: 2019/07/17 08:54:23 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   3.789506ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\nJul 17 16:54:53 172.17.0.1 core[23931]: 2019/07/17 08:54:53 #033[1;44m[D] [server.go:2619] |      127.0.0.1|#033[42m 200 #033[0m|   2.062084ms|   match|#033[44m GET     #033[0m /api/ping   r:/api/ping#033[0m\r\n```",
  "closed_at": "2019-08-22T05:04:57Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1069785?v=4",
    "events_url": "https://api.github.com/users/ninjadq/events{/privacy}",
    "followers_url": "https://api.github.com/users/ninjadq/followers",
    "following_url": "https://api.github.com/users/ninjadq/following{/other_user}",
    "gists_url": "https://api.github.com/users/ninjadq/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ninjadq",
    "id": 1069785,
    "login": "ninjadq",
    "node_id": "MDQ6VXNlcjEwNjk3ODU=",
    "organizations_url": "https://api.github.com/users/ninjadq/orgs",
    "received_events_url": "https://api.github.com/users/ninjadq/received_events",
    "repos_url": "https://api.github.com/users/ninjadq/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ninjadq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ninjadq/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ninjadq"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/goharbor/harbor/issues/8314/comments",
  "created_at": "2019-07-17T09:08:56Z",
  "events_url": "https://api.github.com/repos/goharbor/harbor/issues/8314/events",
  "html_url": "https://github.com/goharbor/harbor/issues/8314",
  "id": 469075561,
  "labels": [
    {
      "color": "0e8a16",
      "default": false,
      "description": null,
      "id": 551120751,
      "name": "area/build",
      "node_id": "MDU6TGFiZWw1NTExMjA3NTE=",
      "url": "https://api.github.com/repos/goharbor/harbor/labels/area/build"
    },
    {
      "color": "d93f0b",
      "default": false,
      "description": "",
      "id": 1301885498,
      "name": "target/1.9.0",
      "node_id": "MDU6TGFiZWwxMzAxODg1NDk4",
      "url": "https://api.github.com/repos/goharbor/harbor/labels/target/1.9.0"
    }
  ],
  "labels_url": "https://api.github.com/repos/goharbor/harbor/issues/8314/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NjkwNzU1NjE=",
  "number": 8314,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/goharbor/harbor",
  "state": "closed",
  "title": "/usr/local/go/lib/time/zoneinfo.zip: no such file or directory",
  "updated_at": "2019-08-22T05:04:57Z",
  "url": "https://api.github.com/repos/goharbor/harbor/issues/8314",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/9361471?v=4",
    "events_url": "https://api.github.com/users/xhlim/events{/privacy}",
    "followers_url": "https://api.github.com/users/xhlim/followers",
    "following_url": "https://api.github.com/users/xhlim/following{/other_user}",
    "gists_url": "https://api.github.com/users/xhlim/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/xhlim",
    "id": 9361471,
    "login": "xhlim",
    "node_id": "MDQ6VXNlcjkzNjE0NzE=",
    "organizations_url": "https://api.github.com/users/xhlim/orgs",
    "received_events_url": "https://api.github.com/users/xhlim/received_events",
    "repos_url": "https://api.github.com/users/xhlim/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/xhlim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xhlim/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/xhlim"
  }
}