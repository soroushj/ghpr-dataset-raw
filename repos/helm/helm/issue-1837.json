{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "## Problems\r\n\r\n  1. Currently there is no simple way to selectively enable/disable sub-charts. This limitation makes composing with charts (e.g. choosing from more than one type of db) difficult and spawns workarounds such as template wrapping.\r\n  2. Currently there is no simple way to selectively install groups of sub-charts. This limitation makes composing with charts (e.g. installing a minimal 'compute-kit' subset of charts ) more difficult.   \r\n\r\nNote: Both are addressed here because they operate similarly and likely need changes in the same place in the code. Also, Tags would likely depend on the chart's 'enabled' status.\r\n\r\n## \"Condition\" field\r\n\r\nThe conditional field attempts to solve problem 1.\r\n\r\nAdd an optional field \"condition\" to chart.yaml and requirements.yaml entries. The value of this field would be a YAML path in dot notation (e.g. mariadb.enabled). The YAML path is then looked up in the parent charts values and if found with a value of false (actual false, not just falsy) the relevant chart is not loaded. If the path does not exist or is not explicitly false, the chart is loaded as normal. \r\n\r\n````\r\n# parent/requirements.yaml\r\n    dependencies:\r\n       - name: subchart1\r\n\t  repository: http://localhost:10191\r\n\t  version: 0.1.0\r\n\t  condition: subchart1.enabled\r\n````\r\n\r\n````\r\n# parent/values.yaml\r\n    subchart1:\r\n       enabled: false\r\n\r\n````\r\n\r\n\r\nIn the above example, the chart 'subchart1' would NOT be loaded since its condition value exists in the parent's values and returns false.\r\n\r\n## \"Tags\" field\r\n\r\nThis attempts to solve problem 2.\r\n\r\nAdd an optional field \"tags\" to chart.yaml and requirements.yaml entries. The value of this field would be a YAML list of one or more \"tags\". \r\n\r\n````\r\n# parent/requirements.yaml\r\n    dependencies:\r\n      - name: subchart1\r\n        repository: http://localhost:10191\r\n        version: 0.1.0\r\n        condition: subchart1.enabled\r\n        tags:\r\n          - front-end\r\n          - subchart1\r\n      - name: subchart2\r\n        repository: http://localhost:10191\r\n        version: 0.1.0\r\n        condition: subchart1.enabled\r\n        tags:\r\n          - back-end\r\n          - subchart2\r\n````\r\n\r\nIn values.yaml, \"tags\" field is introduced as a new top level key. The value of this key contains key/value pairs or a YAML list which specifies which groups of charts should be enabled/disabled based on their tag. Two possible approaches to formatting tags in the values.yaml are listed below.\r\n\r\n````\r\n# parent/values.yaml\r\n\r\n# switch-like\r\ntags:\r\n  front-end: true\r\n  back-end: false\r\n\r\n# list-like\r\ntags:\r\n  - front-end\r\n````\r\n\r\nIn the above \"switch-like\" example, all charts containing the tag \"front-end\" would be installed and those containing the \"back-end\" would not. In case of conflict, the \"condition\" value wins over \"tags\" which allows a group to be enabled (e.g. all \"front-end\" charts) and allows one or more unnecessary sub-charts in that group to be disabled or vice-versa. \r\nSome problems like how to resolve conflicting tags still need discussion. \r\n\r\nAdditionally the tags could be specified as a special set parameter using the CLI\r\n\r\n````\r\n# using the command line\r\nhelm install --set tags.front-end=true,tags.back-end=false\r\n````\r\n\r\n## Complex use cases with condition logic\r\n\r\nTo achieve very complex use cases where sub-charts are re-used with different values within the same release, we should discuss the pros/cons of allowing the condition field to contain logic.\r\n\r\n### Logic in condition field options\r\n\r\n1. follow a convention\r\n   a. given a list of yaml paths, use the first one that resolves\r\n   b. use a format like k8s labels, something like  - {key: environment, operator: NotIn, values: [dev]}\r\n   c. ?\r\n\r\n2. allow TPL access, can access templates and template functions\r\n\r\n3. run arbitrary golang >:)\r\n\r\n### Example complex use case\r\n\r\nTwo umbrella charts (who are themselves a member of a global umbrella) each have many sub-charts, some of which need to be enabled/disabled based on logical AND/OR of other keys. Furthermore, charts at any level can have more than one instantiation with different values. \r\n\r\n*charts*\r\nrootChart\r\n-subchart1\r\n--subchartA \r\n---subchartZ (conditionally enable/disable from values)\r\n---subchartY(enable if peer subchartZ is enabled and mykey is disabled )\r\n--subchartB\r\n-subchart2 \r\n--subchartA (disabled)\r\n--subchartB (enabled with different values that other B chart)\r\n---subchartZ (conditionally enable/disable from values)\r\n---subchartY(enable if peer subchartZ is enabled and mykey is disabled )\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_at": "2017-02-13T22:48:55Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/89193?v=4",
    "events_url": "https://api.github.com/users/technosophos/events{/privacy}",
    "followers_url": "https://api.github.com/users/technosophos/followers",
    "following_url": "https://api.github.com/users/technosophos/following{/other_user}",
    "gists_url": "https://api.github.com/users/technosophos/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/technosophos",
    "id": 89193,
    "login": "technosophos",
    "node_id": "MDQ6VXNlcjg5MTkz",
    "organizations_url": "https://api.github.com/users/technosophos/orgs",
    "received_events_url": "https://api.github.com/users/technosophos/received_events",
    "repos_url": "https://api.github.com/users/technosophos/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/technosophos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/technosophos/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/technosophos"
  },
  "comments": 18,
  "comments_url": "https://api.github.com/repos/helm/helm/issues/1837/comments",
  "created_at": "2017-01-19T02:00:59Z",
  "events_url": "https://api.github.com/repos/helm/helm/issues/1837/events",
  "html_url": "https://github.com/helm/helm/issues/1837",
  "id": 201745261,
  "labels": [],
  "labels_url": "https://api.github.com/repos/helm/helm/issues/1837/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMDE3NDUyNjE=",
  "number": 1837,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/helm/helm",
  "state": "closed",
  "title": "proposal: add condition and tags fields to requirements entries",
  "updated_at": "2018-07-18T19:41:59Z",
  "url": "https://api.github.com/repos/helm/helm/issues/1837",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/22244688?v=4",
    "events_url": "https://api.github.com/users/jascott1/events{/privacy}",
    "followers_url": "https://api.github.com/users/jascott1/followers",
    "following_url": "https://api.github.com/users/jascott1/following{/other_user}",
    "gists_url": "https://api.github.com/users/jascott1/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jascott1",
    "id": 22244688,
    "login": "jascott1",
    "node_id": "MDQ6VXNlcjIyMjQ0Njg4",
    "organizations_url": "https://api.github.com/users/jascott1/orgs",
    "received_events_url": "https://api.github.com/users/jascott1/received_events",
    "repos_url": "https://api.github.com/users/jascott1/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jascott1/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jascott1/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jascott1"
  }
}