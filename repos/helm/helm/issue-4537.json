{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "I have been spending a lot of time setting up a \"simple\" Kubernetes cluster in Google Cloud, installing Helm, and then getting a (helm supported, pretty much default) installation of SonarQube working behind a (helm supported, pretty much default) NGINX Ingress controller.\r\n\r\nThe documentation states in section \"Installing Helm\", second paragraph, that it is strongly recommended to run a secured installation of Helm. However, following the proffered information I have not been able to get it to work. Google was a dubious friend, as it provides many inconsistent and incomplete examples.\r\n\r\n1. It is advised to create a service-account for the tiller, with no further details. Simply creating the account will get you a service-account in the default namespace, which the Tiller installation subsequently will be unable to find. Simply having the service account is not enough, as it also needs RoleBindings. I have found several GitHub issues about this, but no definitive example of the \"minimal working\" situation.\r\n\r\n    1. One example created a Role as follows:\r\n      ```\r\n        kind: Role\r\n        apiVersion: rbac.authorization.k8s.io/v1beta1\r\n        metadata:\r\n          name: tiller-manager\r\n          namespace: tiller-namespace\r\n       rules:\r\n       - apiGroups: [\"\", \"batch\", \"extensions\", \"apps\"]\r\n         resources: [\"*\"]\r\n         verbs: [\"*\"]\r\n      ```\r\n    2. Other examples left out the namespace, added the \"rbac.authorization.k8s.io\" group. While wrestling with \"one tiller per namespace\" I finally followed yet another example, which simply added the \"cluster-admin\" role.\r\n\r\n2. Going for the \"one tiller per namespace\", installing SonarQube went right, but installing the Ingress controller gave me a non-working service due to missing rights. I suppose this isn't meant to say the tiller's right weren't sufficient, because of the cluster-admin? So rather the charts for the Ingress controller had something. The Ingress controller docs however presume no Helm.\r\n\r\n3. So far the only working scenario was the basic \"one tiller in kube-system, no special service-account\", but with TLS.\r\n\r\nPS\r\nI have been hunting and trying so many different approaches, that I simply delete the cluster and start re-creating everything from scratch. I have everything in scripts now, but the first working environment only as a running system. (before I started recording my attempts in scripts) If some kind soul wants to help and you need specific error details, let me know which scenario you want followed, and I'll set up a GitHub project containing scripts and logs. If that scenario solves everything at the first try, then let's make sure the Helm documentation is just as detailed. I have no background in Go, limited Kubernetes, lots of (medium) Linux and advanced Java.",
  "closed_at": "2018-11-01T17:17:47Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1360539?v=4",
    "events_url": "https://api.github.com/users/bacongobbler/events{/privacy}",
    "followers_url": "https://api.github.com/users/bacongobbler/followers",
    "following_url": "https://api.github.com/users/bacongobbler/following{/other_user}",
    "gists_url": "https://api.github.com/users/bacongobbler/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bacongobbler",
    "id": 1360539,
    "login": "bacongobbler",
    "node_id": "MDQ6VXNlcjEzNjA1Mzk=",
    "organizations_url": "https://api.github.com/users/bacongobbler/orgs",
    "received_events_url": "https://api.github.com/users/bacongobbler/received_events",
    "repos_url": "https://api.github.com/users/bacongobbler/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bacongobbler/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bacongobbler/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bacongobbler"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/helm/helm/issues/4537/comments",
  "created_at": "2018-08-27T07:30:24Z",
  "events_url": "https://api.github.com/repos/helm/helm/issues/4537/events",
  "html_url": "https://github.com/helm/helm/issues/4537",
  "id": 354211005,
  "labels": [
    {
      "color": "cc317c",
      "default": false,
      "description": null,
      "id": 269212356,
      "name": "question/support",
      "node_id": "MDU6TGFiZWwyNjkyMTIzNTY=",
      "url": "https://api.github.com/repos/helm/helm/labels/question/support"
    }
  ],
  "labels_url": "https://api.github.com/repos/helm/helm/issues/4537/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNTQyMTEwMDU=",
  "number": 4537,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/helm/helm",
  "state": "closed",
  "title": "Helm documentation advises secured installation, but provides no working examples",
  "updated_at": "2018-11-01T17:17:47Z",
  "url": "https://api.github.com/repos/helm/helm/issues/4537",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/7572476?v=4",
    "events_url": "https://api.github.com/users/bert-laverman/events{/privacy}",
    "followers_url": "https://api.github.com/users/bert-laverman/followers",
    "following_url": "https://api.github.com/users/bert-laverman/following{/other_user}",
    "gists_url": "https://api.github.com/users/bert-laverman/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bert-laverman",
    "id": 7572476,
    "login": "bert-laverman",
    "node_id": "MDQ6VXNlcjc1NzI0NzY=",
    "organizations_url": "https://api.github.com/users/bert-laverman/orgs",
    "received_events_url": "https://api.github.com/users/bert-laverman/received_events",
    "repos_url": "https://api.github.com/users/bert-laverman/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bert-laverman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bert-laverman/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bert-laverman"
  }
}