{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
    "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
    "followers_url": "https://api.github.com/users/liggitt/followers",
    "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/liggitt",
    "id": 980082,
    "login": "liggitt",
    "node_id": "MDQ6VXNlcjk4MDA4Mg==",
    "organizations_url": "https://api.github.com/users/liggitt/orgs",
    "received_events_url": "https://api.github.com/users/liggitt/received_events",
    "repos_url": "https://api.github.com/users/liggitt/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/liggitt"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
      "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
      "followers_url": "https://api.github.com/users/liggitt/followers",
      "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/liggitt",
      "id": 980082,
      "login": "liggitt",
      "node_id": "MDQ6VXNlcjk4MDA4Mg==",
      "organizations_url": "https://api.github.com/users/liggitt/orgs",
      "received_events_url": "https://api.github.com/users/liggitt/received_events",
      "repos_url": "https://api.github.com/users/liggitt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/liggitt"
    }
  ],
  "author_association": "MEMBER",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!-->\r\n\r\n\r\n**What happened**:\r\nsample api server log:\r\n```\r\nI1206 19:53:40.714834   63361 round_trippers.go:405] GET https://[::1]:8443/apis/wardle.k8s.io/v1beta1/fischers?limit=500&resourceVersion=0 404 Not Found in 1 milliseconds\r\nI1206 19:53:40.714855   63361 round_trippers.go:411] Response Headers:\r\nI1206 19:53:40.714864   63361 round_trippers.go:414]     Content-Type: application/json\r\nI1206 19:53:40.714870   63361 round_trippers.go:414]     Content-Length: 174\r\nI1206 19:53:40.714876   63361 round_trippers.go:414]     Date: Thu, 06 Dec 2018 11:53:40 GMT\r\nI1206 19:53:40.714906   63361 request.go:942] Response Body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"the server could not find the requested resource\",\"reason\":\"NotFound\",\"details\":{},\"code\":404}\r\nE1206 19:53:40.715003   63361 reflector.go:134] k8s.io/sample-apiserver/pkg/client/informers/internalversion/factory.go:117: Failed to list *wardle.Fischer: the server could not find the requested resource\r\n```\r\nregistry:\r\n```\r\n\tv1alpha1storage[\"flunders\"] = wardleregistry.RESTInPeace(flunderstorage.NewREST(Scheme, c.GenericConfig.RESTOptionsGetter))\r\n\tv1alpha1storage[\"fischers\"] = wardleregistry.RESTInPeace(fischerstorage.NewREST(Scheme, c.GenericConfig.RESTOptionsGetter))\r\n\tapiGroupInfo.VersionedResourcesStorageMap[\"v1alpha1\"] = v1alpha1storage\r\n\r\n\tv1beta1storage := map[string]rest.Storage{}\r\n\tv1beta1storage[\"flunders\"] = wardleregistry.RESTInPeace(flunderstorage.NewREST(Scheme, c.GenericConfig.RESTOptionsGetter))\r\n\tapiGroupInfo.VersionedResourcesStorageMap[\"v1beta1\"] = v1beta1storage\r\n``` \r\n\r\nIt seems that the internalversion's informer list watch v1beta1 fischers API, but the fischers only have the v1alpha1 API in sample apiserver. where determine which version of the API the internalversion informer calls? another questions is ```Admit(a admission.Attributes)```  access attributes\uff0ccan we directly use versioned informer\uff1f\r\n\r\n/sig api-apimachinery\r\n\r\n**What you expected to happen**:\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g. from /etc/os-release):\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Others:\r\n\r\n<!-- DO NOT EDIT BELOW THIS LINE -->\r\n/kind bug",
  "closed_at": "2018-12-17T18:57:46Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71788/comments",
  "created_at": "2018-12-06T13:01:27Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71788/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/71788",
  "id": 388203971,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71788/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzODgyMDM5NzE=",
  "number": 71788,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "sample apiserver report failed to list *wardle.Fischer: the server could not find the requested resource",
  "updated_at": "2018-12-17T18:57:46Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71788",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/18045633?v=4",
    "events_url": "https://api.github.com/users/zjj2wry/events{/privacy}",
    "followers_url": "https://api.github.com/users/zjj2wry/followers",
    "following_url": "https://api.github.com/users/zjj2wry/following{/other_user}",
    "gists_url": "https://api.github.com/users/zjj2wry/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/zjj2wry",
    "id": 18045633,
    "login": "zjj2wry",
    "node_id": "MDQ6VXNlcjE4MDQ1NjMz",
    "organizations_url": "https://api.github.com/users/zjj2wry/orgs",
    "received_events_url": "https://api.github.com/users/zjj2wry/received_events",
    "repos_url": "https://api.github.com/users/zjj2wry/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/zjj2wry/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zjj2wry/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/zjj2wry"
  }
}