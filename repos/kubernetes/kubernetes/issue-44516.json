{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Is this a request for help?**\r\nNo\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** \r\nexternalIPs kube-proxy connection accepted no pods running. icmp reject rules.\r\n\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one):\r\nBUG REPORT\r\n\r\n**Kubernetes version** (use `kubectl version`):\r\nkubectl version\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.1\", GitCommit:\"82450d03cb057bab0950214ef122b67c83fb11df\", GitTreeState:\"clean\", BuildDate:\"2016-12-14T00:57:05Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.0\", GitCommit:\"58b7c16a52c03e4a849874602be42ee71afdcab1\", GitTreeState:\"clean\", BuildDate:\"2016-12-12T23:31:15Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**:\r\nBare Metal.\r\n- **OS** (e.g. from /etc/os-release):\r\n```\r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.04.2 LTS\"\r\nVERSION_ID=\"16.04\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\nVERSION_CODENAME=xenial\r\nUBUNTU_CODENAME=xenial\r\n```\r\n- **Kernel** (e.g. `uname -a`):\r\n```\r\nLinux master-1 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\n- **Install tools**:\r\n- **Others**:\r\n\r\n\r\n**What happened**:\r\n1. Service is exposed using externalIP construct. \r\n2. No pods are backing the service (using scale deployment 0). The pod is expected to run a TCP based server (non-http)\r\n3. When client connects to this service using externalIP as dest-ip; connection gets accepted by kube-proxy.\r\n\r\n**What you expected to happen**:\r\nWhen no pods are backing service; the connection should have been rejected and definitely not accepted by kube-proxy.\r\n\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\n1. Create a service and expose it using externalIP construct\r\n```\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  labels:\r\n    serviceName: my_svc\r\n  name: my_svc\r\n  namespace: xyz\r\nspec:\r\n  clusterIP: 10.100.200.6\r\n  deprecatedPublicIPs:\r\n  - 10.200.0.160\r\n  externalIPs:\r\n  - 10.200.0.160\r\n  ports:\r\n  - name: my_svc_port\r\n    port: 4342\r\n    protocol: TCP\r\n    targetPort: 4342\r\n  - name: my_svc_udp_port\r\n    port: 4342\r\n    protocol: UDP\r\n    targetPort: 4342\r\n  selector:\r\n    serviceName: my_svc\r\n  sessionAffinity: None\r\n  type: ClusterIP\r\nstatus:\r\n  loadBalancer: {}\r\n```\r\n\r\n2. If pods are present; bring them down using\"kubectl scale deployment my_svc --replicas 0 --namespace xyz\r\n\r\n3. Client initiates the connection to this service using externalIP and connection goes fine but to kube-proxy.\r\n\r\n**Anything else we need to know**:\r\nInfo on iptable rules -\r\n\r\nWhen service and pods are present the rules like these -\r\n```\r\n# iptables-save | grep my_svc\r\n  1 -A KUBE-SEP-GQPOLT6NKZE7NNSU -s 10.168.0.44/32 -m comment --comment \"xyz/my_svc:my_svc_udp_port\" -j KUBE-MARK-MASQ\r\n  2 -A KUBE-SEP-GQPOLT6NKZE7NNSU -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port\" -m udp -j DNAT --to-destination 10.168.0.44:4342                                       3 -A KUBE-SEP-LLTPTLEOEOV7X5WW -s 10.168.0.44/32 -m comment --comment \"xyz/my_svc:my_svc_port\" -j KUBE-MARK-MASQ\r\n  4 -A KUBE-SEP-LLTPTLEOEOV7X5WW -p tcp -m comment --comment \"xyz/my_svc:my_svc_port\" -m tcp -j DNAT --to-destination 10.168.0.44:4342                                           5 -A KUBE-SERVICES -d 10.100.200.6/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port cluster IP\" -m udp --dport 4342 -j KUBE-SVC-FKYB3VE56PGE3NL6\r\n  6 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -j KUBE-MARK-MASQ                               7 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -m physdev ! --physdev-is-in -m addrtype ! --     src-type LOCAL -j KUBE-SVC-FKYB3VE56PGE3NL6                                                                                                                                  8 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -m addrtype --dst-type LOCAL -j KUBE-SVC-         FKYB3VE56PGE3NL6                                                                                                                                                             9 -A KUBE-SERVICES -d 10.100.200.6/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port cluster IP\" -m tcp --dport 4342 -j KUBE-SVC-ACSYPHD3G44RMCBY\r\n 10 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -j KUBE-MARK-MASQ                                  11 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -m physdev ! --physdev-is-in -m addrtype ! --src-     type LOCAL -j KUBE-SVC-ACSYPHD3G44RMCBY                                                                                                                                     12 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -m addrtype --dst-type LOCAL -j KUBE-SVC-             ACSYPHD3G44RMCBY                                                                                                                                                            13 -A KUBE-SVC-ACSYPHD3G44RMCBY -m comment --comment \"xyz/my_svc:my_svc_port\" -j KUBE-SEP-LLTPTLEOEOV7X5WW\r\n 14 -A KUBE-SVC-FKYB3VE56PGE3NL6 -m comment --comment \"xyz/my_svc:my_svc_udp_port\" -j KUBE-SEP-GQPOLT6NKZE7NNSU\r\n```\r\n\r\n2. When pods are not present; iptables rules look like this -\r\n```\r\n# iptables-save | grep my_svc\r\n  2 -A KUBE-SERVICES -d 10.100.200.6/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port cluster IP\" -m udp --dport 4342 -j KUBE-SVC-FKYB3VE56PGE3NL6\r\n  3 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -j KUBE-MARK-MASQ\r\n  4 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -m physdev ! --physdev-is-in -m addrtype ! --src-type LOCAL -j KUBE-      SVC-FKYB3VE56PGE3NL6                                                                                                                                                                                 5 -A KUBE-SERVICES -d 10.200.0.246/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port external IP\" -m udp --dport 4342 -m addrtype --dst-type LOCAL -j KUBE-SVC-FKYB3VE56PGE3NL6\r\n  6 -A KUBE-SERVICES -d 10.100.200.6/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port cluster IP\" -m tcp --dport 4342 -j KUBE-SVC-ACSYPHD3G44RMCBY                                                 7 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -j KUBE-MARK-MASQ\r\n  8 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -m physdev ! --physdev-is-in -m addrtype ! --src-type LOCAL -j KUBE-SVC-      ACSYPHD3G44RMCBY\r\n  9 -A KUBE-SERVICES -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP\" -m tcp --dport 4342 -m addrtype --dst-type LOCAL -j KUBE-SVC-ACSYPHD3G44RMCBY                  10 -A KUBE-SERVICES -d 10.100.200.6/32 -p udp -m comment --comment \"xyz/my_svc:my_svc_udp_port has no endpoints\" -m udp --dport 4342 -j REJECT --reject-with icmp-port-unreachable\r\n 11 -A KUBE-SERVICES -d 10.100.200.6/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port has no endpoints\" -m tcp --dport 4342 -j REJECT --reject-with icmp-port-unreachable\r\n```\r\n\r\n3. Note that the reject rule exist only for the destination=ServiceIP=10.100.200.6/32\r\n\r\n4. When no pods are present; client gets connected to kube-proxy\r\nOn VM -\r\n```\r\n~# netstat -napt | grep 4342 | grep 10.250.255.1\r\ntcp        0      0 10.200.0.246:4342       10.250.255.1:54764      ESTABLISHED -\r\n\r\n:~# netstat -napt | grep 4342 | grep LISTEN\r\ntcp        0      0 10.200.0.246:4342       0.0.0.0:*               LISTEN      8080/hyperkube\r\n```\r\n\r\n---\r\n\r\nBased on #43415 and #43969; I manually installed reject rule on INPUT chain. I do not see the issue happening again - meaning client then cannot connect to the server when no pods are present. \r\n\r\n```\r\n-A INPUT -d 10.200.0.246/32 -p tcp -m comment --comment \"xyz/my_svc:my_svc_port external IP no endpoint\" -m tcp --dport 4342 -j REJECT --reject-with icmp-port-unreachable\r\n```\r\n\r\n\r\n",
  "closed_at": "2017-04-22T01:58:38Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44516/comments",
  "created_at": "2017-04-14T21:40:49Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44516/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/44516",
  "id": 221896869,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44516/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjE4OTY4Njk=",
  "number": 44516,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Need ICMP reject rules for externalIPs and port as well",
  "updated_at": "2017-04-22T01:58:38Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44516",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1034962?v=4",
    "events_url": "https://api.github.com/users/ketkulka/events{/privacy}",
    "followers_url": "https://api.github.com/users/ketkulka/followers",
    "following_url": "https://api.github.com/users/ketkulka/following{/other_user}",
    "gists_url": "https://api.github.com/users/ketkulka/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ketkulka",
    "id": 1034962,
    "login": "ketkulka",
    "node_id": "MDQ6VXNlcjEwMzQ5NjI=",
    "organizations_url": "https://api.github.com/users/ketkulka/orgs",
    "received_events_url": "https://api.github.com/users/ketkulka/received_events",
    "repos_url": "https://api.github.com/users/ketkulka/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ketkulka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ketkulka/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ketkulka"
  }
}