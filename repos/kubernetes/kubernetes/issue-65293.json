{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/16105680?v=4",
    "events_url": "https://api.github.com/users/nikhita/events{/privacy}",
    "followers_url": "https://api.github.com/users/nikhita/followers",
    "following_url": "https://api.github.com/users/nikhita/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikhita/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/nikhita",
    "id": 16105680,
    "login": "nikhita",
    "node_id": "MDQ6VXNlcjE2MTA1Njgw",
    "organizations_url": "https://api.github.com/users/nikhita/orgs",
    "received_events_url": "https://api.github.com/users/nikhita/received_events",
    "repos_url": "https://api.github.com/users/nikhita/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/nikhita/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikhita/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/nikhita"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/16105680?v=4",
      "events_url": "https://api.github.com/users/nikhita/events{/privacy}",
      "followers_url": "https://api.github.com/users/nikhita/followers",
      "following_url": "https://api.github.com/users/nikhita/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikhita/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nikhita",
      "id": 16105680,
      "login": "nikhita",
      "node_id": "MDQ6VXNlcjE2MTA1Njgw",
      "organizations_url": "https://api.github.com/users/nikhita/orgs",
      "received_events_url": "https://api.github.com/users/nikhita/received_events",
      "repos_url": "https://api.github.com/users/nikhita/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nikhita/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikhita/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nikhita"
    }
  ],
  "author_association": "MEMBER",
  "body": "Currently, we allow only `properties`, `required` and `description` at the root of the CRD schema when the status subresource is enabled. We can probably include other fields as well - like `type` (but restricted to `object`), etc.\r\n\r\nEven if other fields are supported at the root, they should be such that, if status is extracted as `properties[\"status\"]`, it's validation should not be lost i.e. constructs like `anyOf`, `allOf`, etc should _definitely_ not be allowed.\r\n\r\n```Golang\r\n\tID                   string                     `json:\"id,omitempty\" protobuf:\"bytes,1,opt,name=id\"`\r\nXXX\tSchema               JSONSchemaURL              `json:\"$schema,omitempty\" protobuf:\"bytes,2,opt,name=schema\"`\r\nXXX\tRef                  *string                    `json:\"$ref,omitempty\" protobuf:\"bytes,3,opt,name=ref\"`\r\n\tDescription          string                     `json:\"description,omitempty\" protobuf:\"bytes,4,opt,name=description\"`\r\n\tType                 string                     `json:\"type,omitempty\" protobuf:\"bytes,5,opt,name=type\"`\r\nx\tFormat               string                     `json:\"format,omitempty\" protobuf:\"bytes,6,opt,name=format\"`\r\n\tTitle                string                     `json:\"title,omitempty\" protobuf:\"bytes,7,opt,name=title\"`\r\nXXX\tDefault              *JSON                      `json:\"default,omitempty\" protobuf:\"bytes,8,opt,name=default\"`\r\nx\tMaximum              *float64                   `json:\"maximum,omitempty\" protobuf:\"bytes,9,opt,name=maximum\"`\r\nx\tExclusiveMaximum     bool                       `json:\"exclusiveMaximum,omitempty\" protobuf:\"bytes,10,opt,name=exclusiveMaximum\"`\r\nx\tMinimum              *float64                   `json:\"minimum,omitempty\" protobuf:\"bytes,11,opt,name=minimum\"`\r\nx\tExclusiveMinimum     bool                       `json:\"exclusiveMinimum,omitempty\" protobuf:\"bytes,12,opt,name=exclusiveMinimum\"`\r\nx\tMaxLength            *int64                     `json:\"maxLength,omitempty\" protobuf:\"bytes,13,opt,name=maxLength\"`\r\nx\tMinLength            *int64                     `json:\"minLength,omitempty\" protobuf:\"bytes,14,opt,name=minLength\"`\r\nx\tPattern              string                     `json:\"pattern,omitempty\" protobuf:\"bytes,15,opt,name=pattern\"`\r\nx\tMaxItems             *int64                     `json:\"maxItems,omitempty\" protobuf:\"bytes,16,opt,name=maxItems\"`\r\nx\tMinItems             *int64                     `json:\"minItems,omitempty\" protobuf:\"bytes,17,opt,name=minItems\"`\r\nx\tUniqueItems          bool                       `json:\"uniqueItems,omitempty\" protobuf:\"bytes,18,opt,name=uniqueItems\"`\r\nx\tMultipleOf           *float64                   `json:\"multipleOf,omitempty\" protobuf:\"bytes,19,opt,name=multipleOf\"`\r\nXXX\tEnum                 []JSON                     `json:\"enum,omitempty\" protobuf:\"bytes,20,rep,name=enum\"`\r\nXXX\tMaxProperties        *int64                     `json:\"maxProperties,omitempty\" protobuf:\"bytes,21,opt,name=maxProperties\"`\r\nXXX\tMinProperties        *int64                     `json:\"minProperties,omitempty\" protobuf:\"bytes,22,opt,name=minProperties\"`\r\n\tRequired             []string                   `json:\"required,omitempty\" protobuf:\"bytes,23,rep,name=required\"`\r\nx\tItems                *JSONSchemaPropsOrArray    `json:\"items,omitempty\" protobuf:\"bytes,24,opt,name=items\"`\r\nXXX\tAllOf                []JSONSchemaProps          `json:\"allOf,omitempty\" protobuf:\"bytes,25,rep,name=allOf\"`\r\nXXX\tOneOf                []JSONSchemaProps          `json:\"oneOf,omitempty\" protobuf:\"bytes,26,rep,name=oneOf\"`\r\nXXX\tAnyOf                []JSONSchemaProps          `json:\"anyOf,omitempty\" protobuf:\"bytes,27,rep,name=anyOf\"`\r\nXXX\tNot                  *JSONSchemaProps           `json:\"not,omitempty\" protobuf:\"bytes,28,opt,name=not\"`\r\n\tProperties           map[string]JSONSchemaProps `json:\"properties,omitempty\" protobuf:\"bytes,29,rep,name=properties\"`\r\nXXX\tAdditionalProperties *JSONSchemaPropsOrBool     `json:\"additionalProperties,omitempty\" protobuf:\"bytes,30,opt,name=additionalProperties\"`\r\nXXX\tPatternProperties    map[string]JSONSchemaProps `json:\"patternProperties,omitempty\" protobuf:\"bytes,31,rep,name=patternProperties\"`\r\nXXX\tDependencies         JSONSchemaDependencies     `json:\"dependencies,omitempty\" protobuf:\"bytes,32,opt,name=dependencies\"`\r\nx\tAdditionalItems      *JSONSchemaPropsOrBool     `json:\"additionalItems,omitempty\" protobuf:\"bytes,33,opt,name=additionalItems\"`\r\nx\tDefinitions          JSONSchemaDefinitions      `json:\"definitions,omitempty\" protobuf:\"bytes,34,opt,name=definitions\"`\r\n\tExternalDocs         *ExternalDocumentation     `json:\"externalDocs,omitempty\" protobuf:\"bytes,35,opt,name=externalDocs\"`\r\n\tExample              *JSON                      `json:\"example,omitempty\" protobuf:\"bytes,36,opt,name=example\"`\r\n```\r\n\r\n/cc @sttts @marun @pmorie @mbohlool \r\n/assign\r\n\r\n/sig api-machinery\r\n/kind bug\r\n/area custom-resources",
  "closed_at": "2018-07-03T10:24:01Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65293/comments",
  "created_at": "2018-06-21T04:32:39Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65293/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/65293",
  "id": 334334419,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 556590057,
      "name": "area/custom-resources",
      "node_id": "MDU6TGFiZWw1NTY1OTAwNTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/custom-resources"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65293/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzQzMzQ0MTk=",
  "number": 65293,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Re-evaluate fields at root of the CRD schema when status subresource is enabled ",
  "updated_at": "2018-07-03T10:24:01Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65293",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/16105680?v=4",
    "events_url": "https://api.github.com/users/nikhita/events{/privacy}",
    "followers_url": "https://api.github.com/users/nikhita/followers",
    "following_url": "https://api.github.com/users/nikhita/following{/other_user}",
    "gists_url": "https://api.github.com/users/nikhita/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/nikhita",
    "id": 16105680,
    "login": "nikhita",
    "node_id": "MDQ6VXNlcjE2MTA1Njgw",
    "organizations_url": "https://api.github.com/users/nikhita/orgs",
    "received_events_url": "https://api.github.com/users/nikhita/received_events",
    "repos_url": "https://api.github.com/users/nikhita/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/nikhita/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nikhita/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/nikhita"
  }
}