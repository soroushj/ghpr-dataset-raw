{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "After 6 minutes or so of using >50% my 4-core MBP CPU and chewing up a ton of memory, make release gives up with a timeout. \n\n```\n$ make release\nbuild/release.sh\n+++ [0401 22:10:18] Verifying Prerequisites....\n+++ [0401 22:10:18] Setting boot2docker clock\n+++ [0401 22:10:19] Building Docker image kube-build:cross.\n+++ [0401 22:10:21] Building Docker image kube-build:build-2d62e.\n+++ [0401 22:10:42] Running build command....\n+++ [0401 22:10:42] Creating data container\n+++ [0402 05:10:43] Building go targets for linux/amd64 in parallel (output will appear in a burst when complete):\n    cmd/kube-proxy\n    cmd/kube-apiserver\n    cmd/kube-controller-manager\n    cmd/kubelet\n    cmd/hyperkube\n    cmd/kubernetes\n    plugin/cmd/kube-scheduler\n+++ [0402 05:10:43] linux/amd64: Parallel go build started\n+++ [0402 05:10:56] linux/amd64: Parallel go build finished\n+++ [0402 05:10:56] Building go targets for linux/amd64\n    linux/386\n    linux/arm\n    darwin/amd64\n    darwin/386\n    windows/amd64 in parallel (output will appear in a burst when complete):\n    cmd/kubectl\n    cmd/e2e\n    cmd/integration\n    cmd/gendocs\n    cmd/genman\n    examples/k8petstore/web-server\n+++ [0402 05:10:56] linux/amd64: Parallel go build started\ngo build github.com/GoogleCloudPlatform/kubernetes/cmd/integration: /usr/src/go/pkg/tool/linux_amd64/6l: signal: killed\n!!! Error in /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363\n  'go install \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${nonstatics[@]:+${nonstatics[@]}}\"' exited with status 1\nCall stack:\n  1: /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363 kube::golang::build_binaries(...)\n  2: hack/build-cross.sh:31 main(...)\nExiting with status 1\n+++ [0402 05:10:56] linux/386: Parallel go build started\ngo build github.com/GoogleCloudPlatform/kubernetes/cmd/integration: /usr/src/go/pkg/tool/linux_amd64/8l: signal: killed\n!!! Error in /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363\n  'go install \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${nonstatics[@]:+${nonstatics[@]}}\"' exited with status 1\nCall stack:\n  1: /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363 kube::golang::build_binaries(...)\n  2: hack/build-cross.sh:31 main(...)\nExiting with status 1\n+++ [0402 05:10:56] linux/arm: Parallel go build started\n+++ [0402 05:11:30] linux/arm: Parallel go build finished\n+++ [0402 05:10:56] darwin/amd64: Parallel go build started\ngo build github.com/GoogleCloudPlatform/kubernetes/cmd/integration: /usr/src/go/pkg/tool/linux_amd64/6l: signal: killed\n!!! Error in /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363\n  'go install \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${nonstatics[@]:+${nonstatics[@]}}\"' exited with status 1\nCall stack:\n  1: /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363 kube::golang::build_binaries(...)\n  2: hack/build-cross.sh:31 main(...)\nExiting with status 1\n+++ [0402 05:10:56] darwin/386: Parallel go build started\ngo build github.com/GoogleCloudPlatform/kubernetes/cmd/genman: /usr/src/go/pkg/tool/linux_amd64/8l: signal: killed\n!!! Error in /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363\n  'go install \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${nonstatics[@]:+${nonstatics[@]}}\"' exited with status 1\nCall stack:\n  1: /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:363 kube::golang::build_binaries(...)\n  2: hack/build-cross.sh:31 main(...)\nExiting with status 1\n+++ [0402 05:10:56] windows/amd64: Parallel go build started\n+++ [0402 05:16:55] windows/amd64: Parallel go build finished\n!!! Error in /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:273\n  '( kube::golang::setup_env; local version_ldflags; version_ldflags=$(kube::version::ldflags); local host_platform; host_platform=$(kube::golang::host_platform); local goflags; eval \"goflags=(${KUBE_GOFLAGS:-})\"; local use_go_build; local -a targets=(); local arg; for arg in \"$@\";\ndo\n    if [[ \"${arg}\" == \"--use_go_build\" ]]; then\n        use_go_build=true;\n    else\n        if [[ \"${arg}\" == -* ]]; then\n            goflags+=(\"${arg}\");\n        else\n            targets+=(\"${arg}\");\n        fi;\n    fi;\ndone; if [[ ${#targets[@]} -eq 0 ]]; then\n    targets=(\"${KUBE_ALL_TARGETS[@]}\");\nfi; local -a platforms=(\"${KUBE_BUILD_PLATFORMS[@]:+${KUBE_BUILD_PLATFORMS[@]}}\"); if [[ ${#platforms[@]} -eq 0 ]]; then\n    platforms=(\"${host_platform}\");\nfi; local binaries; binaries=($(kube::golang::binaries_from_targets \"${targets[@]}\")); kube::log::status \"Building go targets for ${platforms[@]} in parallel (output will appear in a burst when complete):\" \"${targets[@]}\"; local platform; for platform in \"${platforms[@]}\";\ndo\n    ( kube::golang::set_platform_envs \"${platform}\"; kube::log::status \"${platform}: Parallel go build started\"; local -a statics=(); local -a nonstatics=(); for binary in \"${binaries[@]}\";\n    do\n        if kube::golang::is_statically_linked_library \"${binary}\"; then\n            kube::golang::exit_if_stdlib_not_installed; statics+=($binary);\n        else\n            nonstatics+=($binary);\n        fi;\n    done; if [[ -n ${use_go_build:-} ]]; then\n        local output_path=\"${KUBE_GOPATH}/bin\"; if [[ $platform != $host_platform ]]; then\n            output_path=\"${output_path}/${platform//\\//_}\";\n        fi; for binary in \"${binaries[@]}\";\n        do\n            local bin=$(basename \"${binary}\"); if [[ ${GOOS} == \"windows\" ]]; then\n                bin=\"${bin}.exe\";\n            fi; if kube::golang::is_statically_linked_library \"${binary}\"; then\n                kube::golang::exit_if_stdlib_not_installed; CGO_ENABLED=0 go build -installsuffix cgo -o \"${output_path}/${bin}\" \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${binary}\";\n            else\n                go build -o \"${output_path}/${bin}\" \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${binary}\";\n            fi;\n        done;\n    else\n        if [[ \"${#nonstatics[@]}\" != 0 ]]; then\n            go install \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${nonstatics[@]:+${nonstatics[@]}}\";\n        fi; if [[ \"${#statics[@]}\" != 0 ]]; then\n            CGO_ENABLED=0 go install -installsuffix cgo \"${goflags[@]:+${goflags[@]}}\" -ldflags \"${version_ldflags}\" \"${statics[@]:+${statics[@]}}\";\n        fi;\n    fi; kube::log::status \"${platform}: Parallel go build finished\" ) &> \"/tmp//${platform//\\//_}.build\" &\ndone; local fails=0; for job in $(jobs -p);\ndo\n    wait ${job} || let \"fails+=1\";\ndone; for platform in \"${platforms[@]}\";\ndo\n    cat \"/tmp//${platform//\\//_}.build\";\ndone; exit ${fails} )' exited with status 4\nCall stack:\n  1: /go/src/github.com/GoogleCloudPlatform/kubernetes/hack/lib/golang.sh:273 kube::golang::build_binaries(...)\n  2: hack/build-cross.sh:31 main(...)\nExiting with status 1\n!!! Error in build/../build/common.sh:398\n  '\"${docker_cmd[@]}\" \"$@\"' exited with status 1\nCall stack:\n  1: build/../build/common.sh:398 kube::build::run_build_command(...)\n  2: build/release.sh:32 main(...)\nExiting with status 1\nmake: *** [release] Error 1\n```\n",
  "closed_at": "2015-04-02T17:26:11Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/5751682?v=4",
    "events_url": "https://api.github.com/users/brendandburns/events{/privacy}",
    "followers_url": "https://api.github.com/users/brendandburns/followers",
    "following_url": "https://api.github.com/users/brendandburns/following{/other_user}",
    "gists_url": "https://api.github.com/users/brendandburns/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/brendandburns",
    "id": 5751682,
    "login": "brendandburns",
    "node_id": "MDQ6VXNlcjU3NTE2ODI=",
    "organizations_url": "https://api.github.com/users/brendandburns/orgs",
    "received_events_url": "https://api.github.com/users/brendandburns/received_events",
    "repos_url": "https://api.github.com/users/brendandburns/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/brendandburns/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brendandburns/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/brendandburns"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/6346/comments",
  "created_at": "2015-04-02T05:19:41Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/6346/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/6346",
  "id": 65840324,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 125299793,
      "name": "area/build-release",
      "node_id": "MDU6TGFiZWwxMjUyOTk3OTM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/build-release"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Highest priority. Must be actively worked on as someone's top priority right now.",
      "id": 114528068,
      "name": "priority/critical-urgent",
      "node_id": "MDU6TGFiZWwxMTQ1MjgwNjg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/critical-urgent"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/6346/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2NTg0MDMyNA==",
  "number": 6346,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "make release times out",
  "updated_at": "2015-04-02T17:26:11Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/6346",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/7751204?v=4",
    "events_url": "https://api.github.com/users/roberthbailey/events{/privacy}",
    "followers_url": "https://api.github.com/users/roberthbailey/followers",
    "following_url": "https://api.github.com/users/roberthbailey/following{/other_user}",
    "gists_url": "https://api.github.com/users/roberthbailey/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/roberthbailey",
    "id": 7751204,
    "login": "roberthbailey",
    "node_id": "MDQ6VXNlcjc3NTEyMDQ=",
    "organizations_url": "https://api.github.com/users/roberthbailey/orgs",
    "received_events_url": "https://api.github.com/users/roberthbailey/received_events",
    "repos_url": "https://api.github.com/users/roberthbailey/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/roberthbailey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/roberthbailey/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/roberthbailey"
  }
}