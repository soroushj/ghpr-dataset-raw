{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "The Pod log endpoint on the apiserver and Kubelet was implemented as a simple wrapper around Docker logs.  It's intended to provide easy access for users and administrators to the logs of the currently running execution of a container in a pod.  If there is no running execution, it will show the last execution.  There are two flags supported:\n- `?follow=true/false` instructs docker to leave the connection open and stream new changes until the container exits or the log connection is closed by the consumer\n- `?previous=true/false` uses the previous execution of the container to display logs\n\nWhen not following logs, the default Docker behavior of returning the entire log file is preserved (Docker `tail=all`).  We currently suppress the timestamp shown by Docker (because the logs may already contain timestamps).\n## Problems today:\n- A container may generate many megabytes of logs which must be transferred to the client every time the user runs 'logs'\n- A container running for several days may generate periodic logs, but a user is only interested in the last few hours\n- A user may wish to see when a log statement was generated, but not have added timestamps to their logs themselves\n\nTypes of containers and typical uses:\n1. Run-once containers are typically used to run jobs - for most users, seeing the entire log of a completed job is useful, or watching the logs until their fail\n2. Run-forever containers are usually used to run services - users typically:\n   1. want to debug something that has happened recently, or watch for something that has already happened\n   2. want to analyze their logs across a larger band of time by searching / scanning for particular behaviors\n\nFinally, for existing systems there may be log aggregators that provide access to historical logs for a pod/container across multiple attempts or deep history.  It would be desirable in the future to be able to abstract access to deep logging in a way that clients can remain oblivious.\n## Consuming use cases\n- OpenShift is looking to expose log retrieval / scanning via its web console\n- OpenShift is looking to integrate ElasticSearch so that it can be used for multi-tenant historical log retrieval, with a simple integration (via the existing log APIs) and then for all other queries via a secured proxy that imposes query restrictions to the elastic search api.\n## Suggested changes\n\nTo better support clients that want to handle limiting the amount of bulk data they receive, target logging to specific areas of user interest, or more accurately represent the time a log line happened, we should expose a limited subset of the features Docker already supports for log retrieval to allow windowing of requests, without limiting the future ability of the system to be backed by an external log solution.\n\nMinimize the impact to existing runtimes by choosing simple operations that can translate to systemd, Docker, or other local container log systems.\n\nNon goals: \n- Do not build a full log query system\n- Do not return structured logs\n\nConsider exposing the following from the Kubelet and the pod logs api:\n- `since=<relative or absolute timestamp>` - allow a client to indicate the range of time within which to retrieve logs.  Serves as a useful bound when retrieving historical logs (or, in combination with another flag, to retrieve ranges of logs)\n- `tail=<limit>` - starting from the end of the log, return only the X most recent entries. Is valuable for reducing the impact of trying to fetch the logs. Leave default \"all\" as per Docker\n- `timestampn=true/false` - whether to prepend each log entry (line?) with a timestamp\n- (potential) `limit=<bytes or lines>` - only return log entries (lines?) until this many bytes or lines have been received, then terminate the connection\n",
  "closed_at": "2015-09-22T00:02:48Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 19,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/12447/comments",
  "created_at": "2015-08-09T15:24:26Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/12447/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/12447",
  "id": 99905460,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 148734819,
      "name": "area/logging",
      "node_id": "MDU6TGFiZWwxNDg3MzQ4MTk=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/logging"
    },
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 134645162,
      "name": "area/usability",
      "node_id": "MDU6TGFiZWwxMzQ2NDUxNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/usability"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/12447/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2016-02-08T17:58:55Z",
    "closed_issues": 334,
    "created_at": "2015-07-22T19:17:12Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/7725777?v=4",
      "events_url": "https://api.github.com/users/bgrant0607/events{/privacy}",
      "followers_url": "https://api.github.com/users/bgrant0607/followers",
      "following_url": "https://api.github.com/users/bgrant0607/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgrant0607/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bgrant0607",
      "id": 7725777,
      "login": "bgrant0607",
      "node_id": "MDQ6VXNlcjc3MjU3Nzc=",
      "organizations_url": "https://api.github.com/users/bgrant0607/orgs",
      "received_events_url": "https://api.github.com/users/bgrant0607/received_events",
      "repos_url": "https://api.github.com/users/bgrant0607/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bgrant0607/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgrant0607/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bgrant0607"
    },
    "description": "Release 1.1.\r\n\r\nP1 features:\r\n* 250+ nodes, at our published SLO\r\n* kube-proxy perf. improvements (via IPTables)\r\n* Docker 1.8.x\r\n* Horizontal pod auto-scaling\r\n* Job\r\n* Ingress\r\n* Schema validation in kubectl\r\n* Experimental API and API groups\r\n* Graceful pod termination\r\n",
    "due_on": "2015-09-21T07:00:00Z",
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/13",
    "id": 1220916,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/13/labels",
    "node_id": "MDk6TWlsZXN0b25lMTIyMDkxNg==",
    "number": 13,
    "open_issues": 0,
    "state": "closed",
    "title": "v1.1",
    "updated_at": "2016-07-14T20:15:09Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/13"
  },
  "node_id": "MDU6SXNzdWU5OTkwNTQ2MA==",
  "number": 12447,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Proposal: Make pod log endpoint more useful",
  "updated_at": "2015-09-22T00:02:48Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/12447",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1163175?v=4",
    "events_url": "https://api.github.com/users/smarterclayton/events{/privacy}",
    "followers_url": "https://api.github.com/users/smarterclayton/followers",
    "following_url": "https://api.github.com/users/smarterclayton/following{/other_user}",
    "gists_url": "https://api.github.com/users/smarterclayton/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/smarterclayton",
    "id": 1163175,
    "login": "smarterclayton",
    "node_id": "MDQ6VXNlcjExNjMxNzU=",
    "organizations_url": "https://api.github.com/users/smarterclayton/orgs",
    "received_events_url": "https://api.github.com/users/smarterclayton/received_events",
    "repos_url": "https://api.github.com/users/smarterclayton/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/smarterclayton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smarterclayton/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/smarterclayton"
  }
}