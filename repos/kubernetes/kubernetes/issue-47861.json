{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/172029?v=4",
    "events_url": "https://api.github.com/users/droot/events{/privacy}",
    "followers_url": "https://api.github.com/users/droot/followers",
    "following_url": "https://api.github.com/users/droot/following{/other_user}",
    "gists_url": "https://api.github.com/users/droot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/droot",
    "id": 172029,
    "login": "droot",
    "node_id": "MDQ6VXNlcjE3MjAyOQ==",
    "organizations_url": "https://api.github.com/users/droot/orgs",
    "received_events_url": "https://api.github.com/users/droot/received_events",
    "repos_url": "https://api.github.com/users/droot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/droot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/droot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/droot"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/172029?v=4",
      "events_url": "https://api.github.com/users/droot/events{/privacy}",
      "followers_url": "https://api.github.com/users/droot/followers",
      "following_url": "https://api.github.com/users/droot/following{/other_user}",
      "gists_url": "https://api.github.com/users/droot/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/droot",
      "id": 172029,
      "login": "droot",
      "node_id": "MDQ6VXNlcjE3MjAyOQ==",
      "organizations_url": "https://api.github.com/users/droot/orgs",
      "received_events_url": "https://api.github.com/users/droot/received_events",
      "repos_url": "https://api.github.com/users/droot/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/droot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/droot/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/droot"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Thanks for filing an issue! Before hitting the button, please answer these questions.-->\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** (If you have found any duplicates, you should instead reply there.): podpreset\r\n\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): BUG REPORT\r\n\r\n<!--\r\nIf this is a BUG REPORT, please:\r\n  - Fill in as much of the template below as you can.  If you leave out\r\n    information, we can't help you as well.\r\n\r\nIf this is a FEATURE REQUEST, please:\r\n  - Describe *in detail* the feature/behavior/change you'd like to see.\r\n\r\nIn both cases, be ready for followup questions, and please respond in a timely\r\nmanner.  If we can't reproduce a bug or think a feature already exists, we\r\nmight close your issue.  If we're wrong, PLEASE feel free to reopen it and\r\nexplain why.\r\n-->\r\n\r\n**What happened**:\r\nIf you have merge conflict while applying podpresets on a Pod, current logic modifies the PodSpec partially. \r\nScenario:\r\nLet say:\r\n * We have a PodPreset named \"inject-db-port\" with environment variable DB_PORT:6000 defined.\r\n * We are creating a Pod P1 with two containers C1 and C2 where C1 does not have any env vars defined while C2 has env variable DB_PORT defined with value 7000.\r\n\r\nPodPreset \"inject-db-port\" gets applied on Pod P1. C1's envvars are modified to inject DB_PORT:6000 and at the time of injecting DB_PORT:6000 in C2, conflict is detected and this pod-preset is ignored, but, by that time C1's envvars are already updated. So Pod P1 is partially modified in case of conflict.\r\n\r\n**What you expected to happen**:\r\nWhile applying PodPresets on a Pod, in case of merge conflict, Pod should not be modified at all. Pod should be modified only in case of successful application of PodPreset.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\nScenario described is good enough to reproduce this issue.\r\n\r\n**Anything else we need to know**:\r\nRoot cause of the problem is that we have coupled the logic of merging and detecting conflict. The logic needs to be split in two phases where in first phase, we detect just the merge conflict and if there is a conflict, we reject podpreset application completely and in case of successful merge, we continue with second phase of applying (merging) Podpreset information on Pod.\r\n\r\n",
  "closed_at": "2017-07-24T20:52:34Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47861/comments",
  "created_at": "2017-06-21T18:46:24Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47861/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/47861",
  "id": 237629028,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Service Catalog.",
      "id": 433740132,
      "name": "sig/service-catalog",
      "node_id": "MDU6TGFiZWw0MzM3NDAxMzI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/service-catalog"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47861/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMzc2MjkwMjg=",
  "number": 47861,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "PodPreset application on Pod is not consistent incase of a merge conflict",
  "updated_at": "2017-07-24T20:52:34Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47861",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/172029?v=4",
    "events_url": "https://api.github.com/users/droot/events{/privacy}",
    "followers_url": "https://api.github.com/users/droot/followers",
    "following_url": "https://api.github.com/users/droot/following{/other_user}",
    "gists_url": "https://api.github.com/users/droot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/droot",
    "id": 172029,
    "login": "droot",
    "node_id": "MDQ6VXNlcjE3MjAyOQ==",
    "organizations_url": "https://api.github.com/users/droot/orgs",
    "received_events_url": "https://api.github.com/users/droot/received_events",
    "repos_url": "https://api.github.com/users/droot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/droot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/droot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/droot"
  }
}