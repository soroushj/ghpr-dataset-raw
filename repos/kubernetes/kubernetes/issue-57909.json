{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- This form is for bug reports and feature requests ONLY! \r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n\r\n**What happened**:\r\n\r\n```\r\n:; kubectl create secret tls tls-secret --cert <( ... ) --key <( ... ) -o yaml\r\napiVersion: v1\r\ndata:\r\n  tls.crt: \"\"\r\n  tls.key: \"\"\r\nkind: Secret\r\nmetadata:\r\n  creationTimestamp: 2018-01-05T19:30:39Z\r\n  name: tls-jenkins\r\n  namespace: default\r\n  resourceVersion: \"12677128\"\r\n  selfLink: /api/v1/namespaces/default/secrets/tls-secret\r\n  uid: e95bfab7-f24e-11e7-bf77-0a695a1f84f0\r\ntype: kubernetes.io/tls\r\n```\r\n\r\nThe supplied cert and key are replaced with empty strings.\r\n\r\n**What you expected to happen**:\r\n\r\nThe supplied cert and key are in the secret.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nThis example uses openssl to generate a key and self signed cert, but any key/cert pair should suffice if openssl isn't available.\r\n\r\n```\r\n:; openssl req -x509  -new -batch -nodes -keyout demokey.pem -out democert.pem\r\n:; kubectl create secret tls tls-secret \\\r\n    --cert <( cat democert.pem ) \\\r\n    --key <( cat demokey.pem ) \\\r\n    -o yaml\r\n```\r\n\r\nThe process substitution in this example is trivial and could be replaced with a direct reference to the file paths.  This is simplified for demonstration only.  In practice I want to use process substitution to pull the cert/key from other sources without using temporary files.\r\n\r\n**Anything else we need to know?**:\r\n\r\n`strace` reveals the cert and key files being read twice.  Of course this only works once when using a pipe/socketpair.  I suspect the [`validate()` function](https://github.com/kubernetes/kubernetes/blob/d0c4c5647f6ae683e55b5562e37fef7b7c54f72d/pkg/kubectl/secret_for_tls.go#L136) is responsible for the first read.\r\n\r\n```\r\n[pid 17208] openat(AT_FDCWD, \"/dev/fd/63\", O_RDONLY|O_CLOEXEC) = 3\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_ADD, 3, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=3001872240, u64=140401187811184}}) = 0\r\n[pid 17208] fcntl(3, F_GETFL)           = 0x8000 (flags O_RDONLY|O_LARGEFILE)\r\n[pid 17208] fcntl(3, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 0\r\n[pid 17208] fstat(3, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0\r\n[pid 17208] read(3, \"-----BEGIN CERTIFICATE-----\\nMIID\"..., 512) = 512\r\n[pid 17208] read(3, \"oXehxtfTG+9CEX9goAZ6pGzEU8ZResSp\"..., 1024) = 717\r\n[pid 17208] read(3, \"\", 2355)           = 0\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_DEL, 3, 0xc4207a748c) = 0\r\n[pid 17208] close(3)                    = 0\r\n[pid 17208] openat(AT_FDCWD, \"/dev/fd/62\", O_RDONLY|O_CLOEXEC) = 3\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_ADD, 3, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=3001872240, u64=140401187811184}}) = 0\r\n[pid 17208] fcntl(3, F_GETFL)           = 0x8000 (flags O_RDONLY|O_LARGEFILE)\r\n[pid 17208] fcntl(3, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 0\r\n[pid 17208] fstat(3, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0\r\n[pid 17208] read(3, \"-----BEGIN PRIVATE KEY-----\\nMIIE\"..., 512) = 512\r\n[pid 17208] read(3, \"nyQVEZzfIcc9eA6WkAP5b0YUdBUX8jLI\"..., 1024) = 1024\r\n[pid 17208] read(3, \"s+VZoo5tH8hWzNhSipKJhjxshG1K0KuI\"..., 2048) = 168\r\n[pid 17208] read(3, \"\", 1880)           = 0\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_DEL, 3, 0xc4207a748c) = 0\r\n[pid 17208] close(3)                    = 0\r\n[pid 17208] openat(AT_FDCWD, \"/dev/fd/63\", O_RDONLY|O_CLOEXEC) = 3\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_ADD, 3, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=3001872240, u64=140401187811184}}) = 0\r\n[pid 17208] fcntl(3, F_GETFL)           = 0x8000 (flags O_RDONLY|O_LARGEFILE)\r\n[pid 17208] fcntl(3, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 0\r\n[pid 17208] fstat(3, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0\r\n[pid 17208] read(3, \"\", 512)            = 0\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_DEL, 3, 0xc4207a7634) = 0\r\n[pid 17208] close(3)                    = 0\r\n[pid 17208] openat(AT_FDCWD, \"/dev/fd/62\", O_RDONLY|O_CLOEXEC) = 3\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_ADD, 3, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=3001872240, u64=140401187811184}}) = 0\r\n[pid 17208] fcntl(3, F_GETFL)           = 0x8000 (flags O_RDONLY|O_LARGEFILE)\r\n[pid 17208] fcntl(3, F_SETFL, O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 0\r\n[pid 17208] fstat(3, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0\r\n[pid 17208] read(3, \"\", 512)            = 0\r\n[pid 17208] epoll_ctl(4, EPOLL_CTL_DEL, 3, 0xc4207a7634) = 0\r\n[pid 17208] close(3)                    = 0\r\n```\r\n\r\n\r\nThis looks similar to #56372, but the proposed fix appears to be specific to the kubeconfig management code.\r\n\r\n\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n> Client Version: version.Info{Major:\"1\", Minor:\"9\", GitVersion:\"v1.9.0\", GitCommit:\"925c127ec6b946659ad0fd596fa959be43f0cc05\", GitTreeState:\"clean\", BuildDate:\"2017-12-15T21:07:38Z\", GoVersion:\"go1.9.2\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n> Server Version: version.Info{Major:\"1\", Minor:\"8+\", GitVersion:\"v1.8.5+coreos.0\", GitCommit:\"b8e596026feda7b97f4337b115d1a9a250afa8ac\", GitTreeState:\"clean\", BuildDate:\"2017-12-12T11:01:08Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- Cloud provider or hardware configuration: n/a\r\n- OS (e.g. from /etc/os-release): n/a\r\n- Kernel (e.g. `uname -a`): n/a\r\n- Install tools:\r\n- Others:\r\n",
  "closed_at": "2018-08-23T06:04:26Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57909/comments",
  "created_at": "2018-01-05T20:13:07Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57909/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/57909",
  "id": 286392751,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 138247961,
      "name": "area/kubectl",
      "node_id": "MDU6TGFiZWwxMzgyNDc5NjE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubectl"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG CLI.",
      "id": 450823910,
      "name": "sig/cli",
      "node_id": "MDU6TGFiZWw0NTA4MjM5MTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cli"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57909/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyODYzOTI3NTE=",
  "number": 57909,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "kubectl create secret tls reads key and cert twice, which breaks with bash process substitution",
  "updated_at": "2018-08-23T06:04:26Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57909",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/47317?v=4",
    "events_url": "https://api.github.com/users/groner/events{/privacy}",
    "followers_url": "https://api.github.com/users/groner/followers",
    "following_url": "https://api.github.com/users/groner/following{/other_user}",
    "gists_url": "https://api.github.com/users/groner/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/groner",
    "id": 47317,
    "login": "groner",
    "node_id": "MDQ6VXNlcjQ3MzE3",
    "organizations_url": "https://api.github.com/users/groner/orgs",
    "received_events_url": "https://api.github.com/users/groner/received_events",
    "repos_url": "https://api.github.com/users/groner/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/groner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/groner/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/groner"
  }
}