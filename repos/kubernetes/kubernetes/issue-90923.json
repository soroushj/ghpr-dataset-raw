{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "# Progress `[7/7]`\r\n* [x] Original approval issue: #87762\r\n* [x]  Test approval issue: [kubernetes/kubernetes#90923](https://github.com/kubernetes/kubernetes/issues/90923)\r\n* [x]  Test pr: [PR](https://github.com/kubernetes/kubernetes/pull/88778)\r\n* [x]  Two weeks soak start date: [testgrid-link](https://testgrid.k8s.io/sig-release-master-blocking#gce-cos-master-default&width=5&include-filter-by-regex=should%20test%20the%20lifecycle%20of%20an%20Endpoint)\r\n* [x]  Two weeks soak end date:\r\n* [x]  Test promotion pr: [PR](https://github.com/kubernetes/kubernetes/pull/90939)\r\n* [x] Update and improve Endpoints resource lifecycle test [#92891](https://github.com/kubernetes/kubernetes/pull/92891)\r\n\r\n\r\nThis issue is created to allow edit by @Riaankl\r\n\r\n/wip\r\n/hold\r\n\r\nThis issue proposes the writing of a new test for the API endponts `replaceCoreV1NamespacedEndpoints`, `patchCoreV1NamespacedEndpoints`, `listCoreV1EndpointsForAllNamespaces`, `deleteCoreV1CollectionNamespacedEndpoints` with the intention of promoting it to Conformance. This issue contains a very basic mock test in order to start the conversation about what a good e2e test would look like for this endpoint. The code below is verified to be hitting the intended endpoint, show as per the queries in APIsnoop's live view of the cluster's audit logs.\r\n\r\n# Identify an untested feature Using APISnoop\r\nAccording to this APIsnoop query, there are still some remaining Endpoints endpoints which are untested.\r\n\r\n```\r\nSELECT\r\n  operation_id,\r\n  --k8s_action,\r\n  path,\r\n  description\r\n  FROM untested_stable_core_endpoints\r\n  where path not like '%volume%'\r\n  and operation_id ilike '%Endpoints%' \r\n ORDER BY operation_id desc\r\n --LIMIT 25\r\n       ;\r\n```\r\n\r\n```\r\n               operation_id                |    k8s_action    |                      path                       |               description                \r\n-------------------------------------------+------------------+-------------------------------------------------+------------------------------------------\r\n replaceCoreV1NamespacedEndpoints          | put              | /api/v1/namespaces/{namespace}/endpoints/{name} | replace the specified Endpoints\r\n patchCoreV1NamespacedEndpoints            | patch            | /api/v1/namespaces/{namespace}/endpoints/{name} | partially update the specified Endpoints\r\n listCoreV1EndpointsForAllNamespaces       | list             | /api/v1/endpoints                               | list or watch objects of kind Endpoints\r\n deleteCoreV1CollectionNamespacedEndpoints | deletecollection | /api/v1/namespaces/{namespace}/endpoints        | delete collection of Endpoints\r\n(4 rows)\r\n```\r\n\r\n# Use API Reference to Lightly Document the Feature\r\n* [Kubernetes API Reference Docs](https://kubernetes.io/docs/reference/kubernetes-api/)\r\n* [client-go - Endpoints](https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/endpoints.go)\r\n\r\n# The mock test\r\n## Test outline\r\n1. Create a Service in a namespace\r\n2. List all Endpoints in all Namespaces find the created Service(1)\r\n3. Replace/update the Namespaced Endpoint for the Service(1)\r\n4. Patch the Namespaced Endpoint for the Service(1)\r\n5. Get the Namespaced Endpoint for the Service(1)\r\n6. Delete Namespaced Endpoint(1) via a Collection with a LabelSelector\r\n\r\n## Example in Go\r\n```go\r\npackage main\r\n\r\nimport (\r\n  \"encoding/json\"\r\n  \"fmt\"\r\n  \"flag\"\r\n  \"os\"\r\n  v1 \"k8s.io/api/core/v1\"\r\n  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n  \"k8s.io/client-go/kubernetes\"\r\n  \"k8s.io/apimachinery/pkg/types\"\r\n  \"k8s.io/client-go/tools/clientcmd\"\r\n  \"k8s.io/apimachinery/pkg/util/intstr\"\r\n)\r\n\r\nfunc main() {\r\n  // uses the current context in kubeconfig\r\n  kubeconfig := flag.String(\"kubeconfig\", fmt.Sprintf(\"%v/%v/%v\", os.Getenv(\"HOME\"), \".kube\", \"config\"), \"(optional) absolute path to the kubeconfig file\")\r\n  flag.Parse()\r\n  config, err := clientcmd.BuildConfigFromFlags(\"\", *kubeconfig)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n  }\r\n  // make our work easier to find in the audit_event queries\r\n  config.UserAgent = \"live-test-writing\"\r\n  // creates the clientset\r\n  ClientSet, _ := kubernetes.NewForConfig(config)\r\n\r\n  ns := \"default\"\r\n  testServiceName := \"testservice\"\r\n\r\n  _, err = ClientSet.CoreV1().Services(ns).Create(&v1.Service{\r\n    ObjectMeta: metav1.ObjectMeta{\r\n      Name: testServiceName,\r\n      Namespace: ns,\r\n      Labels: map[string]string{\r\n        \"testservice-constant\": \"true\",\r\n      },\r\n    },\r\n    Spec: v1.ServiceSpec{\r\n      Ports: []v1.ServicePort{{\r\n        Port: 80,\r\n        TargetPort: intstr.FromInt(80),\r\n        Protocol: v1.ProtocolTCP,\r\n      }},\r\n      Selector: map[string]string{\r\n        \"testservice-constant\": \"true\",\r\n      },\r\n    },\r\n  })\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"[status] service created\")\r\n\r\n  endpointsList, err := ClientSet.CoreV1().Endpoints(\"\").List(metav1.ListOptions{LabelSelector: \"testservice-constant=true\"})\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  foundEndpointService := false\r\n  var foundEndpoint v1.Endpoints\r\n  for _, endpoint := range endpointsList.Items {\r\n    if endpoint.ObjectMeta.Name == testServiceName && endpoint.ObjectMeta.Namespace == ns {\r\n      foundEndpointService = true\r\n      foundEndpoint = endpoint\r\n      break\r\n    }\r\n  }\r\n  if foundEndpointService != true {\r\n    fmt.Println(\"[error] unable to find Endpoint Service in list of Endpoints\")\r\n    return\r\n  }\r\n  fmt.Println(\"[status] found Endpoint Service in list of Endpoints\")\r\n\r\n  foundEndpoint.ObjectMeta.Labels[\"testservice\"] = \"first-modification\"\r\n  _, err = ClientSet.CoreV1().Endpoints(ns).Update(&foundEndpoint)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"[status] updated Endpoint\")\r\n\r\n  _, err = ClientSet.CoreV1().Endpoints(ns).Get(testServiceName, metav1.GetOptions{})\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  if foundEndpoint.ObjectMeta.Labels[\"testservice\"] != \"first-modification\" {\r\n    fmt.Println(\"[error] failed to update Endpoint with Label\")\r\n    return\r\n  }\r\n  fmt.Println(\"[status] fetched Endpoint to confirm update\")\r\n\r\n  endpointPatch, err := json.Marshal(map[string]interface{}{\r\n    \"metadata\": map[string]interface{}{\r\n      \"labels\": map[string]string{\r\n        \"testservice\": \"second-modification\",\r\n      },\r\n    },\r\n  })\r\n\tif err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  _, err = ClientSet.CoreV1().Endpoints(ns).Patch(testServiceName, types.StrategicMergePatchType, []byte(endpointPatch))\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"[status] patched Endpoint\")\r\n\r\n  _, err = ClientSet.CoreV1().Endpoints(ns).Get(testServiceName, metav1.GetOptions{})\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  if foundEndpoint.ObjectMeta.Labels[\"testservice\"] != \"first-modification\" {\r\n    fmt.Println(\"[error] failed to patch Endpoint with Label\")\r\n    return\r\n  }\r\n  fmt.Println(\"[status] fetched Endpoint to confirm patch\")\r\n\r\n  err = ClientSet.CoreV1().Endpoints(ns).DeleteCollection(&metav1.DeleteOptions{}, metav1.ListOptions{LabelSelector: \"testservice-constant=true\"})\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"[status] deleted Endpoint by Collection\")\r\n\r\n  err = ClientSet.CoreV1().Services(ns).Delete(testServiceName, &metav1.DeleteOptions{})\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  fmt.Println(\"[status] deleted Service\")\r\n\r\n  fmt.Println(\"[status] complete\")\r\n\r\n}\r\n```\r\n\r\n```go\r\n[status] service created\r\n[status] found Endpoint Service in list of Endpoints\r\n[status] updated Endpoint\r\n[status] fetched Endpoint to confirm update\r\n[status] patched Endpoint\r\n[status] fetched Endpoint to confirm patch\r\n[status] deleted Endpoint by Collection\r\n[status] deleted Service\r\n[status] complete\r\n```\r\n\r\n# Verify Increase it Coverage with APISnoop\r\nDiscover useragents:\r\n\r\n```\r\nselect distinct useragent from audit_event where bucket='apisnoop' and useragent not like 'kube%' and useragent not like 'coredns%' and useragent not like 'kindnetd%' and useragent like 'live%';\r\n```\r\n\r\n```\r\n     useragent     \r\n-------------------\r\n live-test-writing\r\n(1 row)\r\n```\r\n\r\n```\r\nselect * from endpoints_hit_by_new_test where useragent like 'live%'; \r\n```\r\n\r\n```\r\n     useragent     |               operation_id                | hit_by_ete | hit_by_new_test \r\n-------------------+-------------------------------------------+------------+-----------------\r\n live-test-writing | createCoreV1NamespacedService             | t          |               2\r\n live-test-writing | deleteCoreV1CollectionNamespacedEndpoints | f          |               2\r\n live-test-writing | deleteCoreV1NamespacedService             | t          |               2\r\n live-test-writing | listCoreV1EndpointsForAllNamespaces       | f          |               1\r\n live-test-writing | patchCoreV1NamespacedEndpoints            | f          |               2\r\n live-test-writing | readCoreV1NamespacedEndpoints             | t          |               2\r\n live-test-writing | replaceCoreV1NamespacedEndpoints          | f          |               2\r\n(7 rows)\r\n```\r\n\r\n```\r\nselect * from projected_change_in_coverage;\r\n```\r\n\r\n```\r\n   category    | total_endpoints | old_coverage | new_coverage | change_in_number \r\n---------------+-----------------+--------------+--------------+------------------\r\n test_coverage |             438 |          191 |          195 |                4\r\n(1 row)\r\n```\r\n\r\n# Final notes\r\nIf a test with these calls gets merged, ****Conformance coverage will go up by 4 points****\r\n\r\n/sig testing\r\n/sig architecture\r\n/area conformance\r\n\r\n",
  "closed_at": "2020-07-28T23:31:48Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90923/comments",
  "created_at": "2020-05-09T02:35:51Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90923/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/90923",
  "id": 615072882,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to kubernetes conformance tests",
      "id": 717986501,
      "name": "area/conformance",
      "node_id": "MDU6TGFiZWw3MTc5ODY1MDE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/conformance"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Architecture.",
      "id": 636152047,
      "name": "sig/architecture",
      "node_id": "MDU6TGFiZWw2MzYxNTIwNDc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/architecture"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Testing.",
      "id": 483069764,
      "name": "sig/testing",
      "node_id": "MDU6TGFiZWw0ODMwNjk3NjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/testing"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90923/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MTUwNzI4ODI=",
  "number": 90923,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Write CoreV1Endpoints test - +4 coverage",
  "updated_at": "2020-07-28T23:31:48Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90923",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/61125752?v=4",
    "events_url": "https://api.github.com/users/Riaankl/events{/privacy}",
    "followers_url": "https://api.github.com/users/Riaankl/followers",
    "following_url": "https://api.github.com/users/Riaankl/following{/other_user}",
    "gists_url": "https://api.github.com/users/Riaankl/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Riaankl",
    "id": 61125752,
    "login": "Riaankl",
    "node_id": "MDQ6VXNlcjYxMTI1NzUy",
    "organizations_url": "https://api.github.com/users/Riaankl/orgs",
    "received_events_url": "https://api.github.com/users/Riaankl/received_events",
    "repos_url": "https://api.github.com/users/Riaankl/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Riaankl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Riaankl/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Riaankl"
  }
}