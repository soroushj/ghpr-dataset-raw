{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "/kind feature\r\n\r\ncc @mikedanese \r\ncc @kubernetes/sig-auth-feature-requests \r\ncc @kubernetes/sig-cluster-lifecycle-feature-requests \r\n\r\nTL;DR - How much of this do we actually want to do in-tree?\r\n\r\n## Background\r\n\r\nToday, kubelets present CSRs without any additional data. Approval process look at an individual CSR and generally say \"this bootstrapping token is allowed to request a client cert, so I'll approve it.\" For most installs, bootstrapping tokens are allowed to request certificates for _any_ node. There's no recommended way for saying \"this token is only valid for this exact node name\" and our in-tree approvers isn't expressive enough to enforce this.\r\n\r\nThis is a blocker for kubelet serving certificate rotation https://github.com/kubernetes/features/issues/267. We want to be able to validate that we're issuing a serving cert to the right server.\r\n\r\nWe want to solve this problem through real attestation where a node actually presents some evidence that it's the node that's in the CSR CN and/or SANs. Potential kinds of attestation include:\r\n\r\n* ACME challenges\r\n  * Proposal by @mikedanese: https://docs.google.com/document/d/1l85qgbH-CoyCst7Ksuc12VyOr7rvDmhPJ5kmB1fDnS4/edit?ts=590a3fa5\r\n* Cloud metadata APIs for validating instances\r\n  * GCE: https://cloud.google.com/compute/docs/instances/verifying-instance-identity\r\n  * AWS (this strategy is contentions): https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html\r\n* TPM values\r\n\r\nThere are no plugin points for the kubelet CSR flows today, though https://github.com/kubernetes/kubernetes/issues/55968 was intended to be a way of adding additional data to the CSR request.\r\n\r\nOn the approver side, we also want to be able to consult a machine catalog to ensure the node is actually in our cluster. \"Is this instance in our auto-scaling group?\"\r\n\r\n## Open questions\r\n\r\nAs more installs start adopting the kubelet rotation, my question is:\r\n1. Is https://github.com/kubernetes/kubernetes/issues/55968 + a custom authenticator a sufficient plugin mechanism for attestation?\r\n2. Are there plans for other plugin mechanisms?\r\n3. Do we just want to do this externally to the kubelet and have an out-of-tree node agent in charge of the CSR and attestation?\r\n\r\nThe more I think about this, the more I'm leaning towards option 3. Just externalize the whole thing instead of trying to design a plugin mechanism.\r\n\r\nWould like to hear others' thoughts, because I'm a little unclear about where this feature is headed.",
  "closed_at": "2018-03-01T06:03:17Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57164/comments",
  "created_at": "2017-12-13T22:51:10Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57164/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/57164",
  "id": 281924342,
  "labels": [
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Auth.",
      "id": 357119284,
      "name": "sig/auth",
      "node_id": "MDU6TGFiZWwzNTcxMTkyODQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/auth"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.",
      "id": 173494222,
      "name": "sig/cluster-lifecycle",
      "node_id": "MDU6TGFiZWwxNzM0OTQyMjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cluster-lifecycle"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57164/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyODE5MjQzNDI=",
  "number": 57164,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "kubelet CSRs: support out-of-tree attestation",
  "updated_at": "2018-03-01T06:03:17Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57164",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/2342749?v=4",
    "events_url": "https://api.github.com/users/ericchiang/events{/privacy}",
    "followers_url": "https://api.github.com/users/ericchiang/followers",
    "following_url": "https://api.github.com/users/ericchiang/following{/other_user}",
    "gists_url": "https://api.github.com/users/ericchiang/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ericchiang",
    "id": 2342749,
    "login": "ericchiang",
    "node_id": "MDQ6VXNlcjIzNDI3NDk=",
    "organizations_url": "https://api.github.com/users/ericchiang/orgs",
    "received_events_url": "https://api.github.com/users/ericchiang/received_events",
    "repos_url": "https://api.github.com/users/ericchiang/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ericchiang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ericchiang/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ericchiang"
  }
}