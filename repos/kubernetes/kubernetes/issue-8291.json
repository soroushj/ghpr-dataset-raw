{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/7740897?v=4",
    "events_url": "https://api.github.com/users/dchen1107/events{/privacy}",
    "followers_url": "https://api.github.com/users/dchen1107/followers",
    "following_url": "https://api.github.com/users/dchen1107/following{/other_user}",
    "gists_url": "https://api.github.com/users/dchen1107/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/dchen1107",
    "id": 7740897,
    "login": "dchen1107",
    "node_id": "MDQ6VXNlcjc3NDA4OTc=",
    "organizations_url": "https://api.github.com/users/dchen1107/orgs",
    "received_events_url": "https://api.github.com/users/dchen1107/received_events",
    "repos_url": "https://api.github.com/users/dchen1107/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/dchen1107/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dchen1107/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/dchen1107"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/7740897?v=4",
      "events_url": "https://api.github.com/users/dchen1107/events{/privacy}",
      "followers_url": "https://api.github.com/users/dchen1107/followers",
      "following_url": "https://api.github.com/users/dchen1107/following{/other_user}",
      "gists_url": "https://api.github.com/users/dchen1107/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dchen1107",
      "id": 7740897,
      "login": "dchen1107",
      "node_id": "MDQ6VXNlcjc3NDA4OTc=",
      "organizations_url": "https://api.github.com/users/dchen1107/orgs",
      "received_events_url": "https://api.github.com/users/dchen1107/received_events",
      "repos_url": "https://api.github.com/users/dchen1107/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dchen1107/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dchen1107/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dchen1107"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "This is blocking #7580 (reboot test).\n\nIn running a test that reboots all of the nodes and then runs the e2e tests, we saw a failure with the influxdb / heapster monitoring test:\n\n```\nMonitoring\n  verify monitoring pods and all cluster nodes are available on influxdb using heapster.\n  /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:51\n[BeforeEach] Monitoring\n  /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:42\n>>> testContext.KubeConfig: /Users/maxforbes/.kube/config\n[It] verify monitoring pods and all cluster nodes are available on influxdb using heapster.\n  /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:51\nINFO: failed to query list of pods from influxdb. Query: \"select distinct(pod_id) from /cpu.*/\", Err: expected only one series from Influxdb for query \"select distinct(pod_id) from /cpu.*/\". Got []\nINFO: failed to query list of pods from influxdb. Query: \"select distinct(pod_id) from /cpu.*/\", Err: expected only one series from Influxdb for query \"select distinct(pod_id) from /cpu.*/\". Got []\nINFO: failed to query list of pods from influxdb. Query: \"select distinct(pod_id) from /cpu.*/\", Err: expected only one series from Influxdb for query \"select distinct(pod_id) from /cpu.*/\". Got []\n...\n<lots more of these>\n...\nINFO: failed to query list of pods from influxdb. Query: \"select distinct(pod_id) from /cpu.*/\", Err: Server returned (400): Field pod_id doesn't exist in series cpu/usage_ns_cumulative\n\n\u2022 Failure [303.125 seconds]\nMonitoring\n/go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:52\n  verify monitoring pods and all cluster nodes are available on influxdb using heapster. [It]\n  /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:51\n\n  monitoring using heapster and influxdb test failed\n\n  /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/test/e2e/monitoring.go:236\n```\n\nThe heapster logs, from running `kubectl log monitoring-heapster-controller-xxxxx heapster` ([output](https://gist.github.com/mbforbes/214b59e41d12c1e377cb)), shows a ton of the following kubelet errors for all containers (this one happens to be for skydns):\n\n```\n...\n2015-05-14T21:43:07.429325471Z E0514 21:43:07.427620      10 kubelet.go:85] failed to get stats from kubelet url: http://10.240.117.245:10255/stats/default/kube-dns-i7v2g/14002c59-fa6e-11e4-a2fd-42010af0174f/skydns - request failed - \"500 Internal Server Error\", response: \"Internal Error: unable to find Docker container \\\"8f489c214090c89d5c2773507b2505ab47cabe73eb82e5ac5c9c875aba4d6941\\\"\\n\"\n2015-05-14T21:43:07.429353483Z E0514 21:43:07.427643      10 kube_pods.go:106] failed to get stats for container \"skydns\" in pod \"default\"/\"kube-dns-i7v2g\"\n...\n```\n\nThe [kubelet log on the node (massive)](https://gist.githubusercontent.com/mbforbes/64624f694de522f79047/raw/gistfile1.txt) shows a bunch of 500 errors, such as:\n\n```\nI0514 22:05:07.427063    2503 server.go:158] HTTP InternalServerError: Internal Error: unable to find Docker container \"8f489c214090c89d5c2773507b2505ab47cabe73eb82e5ac5c9c875aba4d6941\"\nI0514 22:05:07.427148    2503 server.go:636] GET /stats/default/kube-dns-i7v2g/14002c59-fa6e-11e4-a2fd-42010af0174f/skydns: (23.441891ms) 500\ngoroutine 4144 [running]:\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/httplog.(*respLogger).WriteHeader(0xc208c9a9c0, 0x1f4)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/pkg/httplog/log.go:188 +0x9a\nnet/http.Error(0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a71d400, 0x72, 0x1f4)\n    /usr/src/go/src/net/http/server.go:1274 +0x9a\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.(*Server).error(0xc20827ca20, 0x7eff7cbcf080, 0xc208c9a9c0, 0x7eff7cd57d80, 0xc208f92fa0)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/server.go:159 +0x213\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.(*Server).serveStats(0xc20827ca20, 0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a3709c0)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/server.go:726 +0x78f\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.(*Server).handleStats(0xc20827ca20, 0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a3709c0)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/server.go:329 +0x46\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.*Server.(github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.handleStats)\u00c2\u00b7fm(0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a3709c0)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_output/dockerized/go/src/github.com/GoogleCloudPlatform/kubernetes/pkg/kubelet/server.go:85 +0x45\nnet/http.HandlerFunc.ServeHTTP(0xc20833cd40, 0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a3709c0)\n    /usr/src/go/src/net/http/server.go:1265 +0x41\nnet/http.(*ServeMux).ServeHTTP(0xc2084094d0, 0x7eff7cbcf080, 0xc208c9a9c0, 0xc20a3709c0)\n    /usr/src/go/src/net/http/server.go:1541 +0x17d\ngithub.com/GoogleCloudPlatform/kubernetes/pkg/kubelet.(*Server).ServeHTTP(0xc20827ca20, 0x7eff7cd876f8, 0xc20ad308c0, 0xc20a3709c0)\n    /go/src/github.com/GoogleCloudPlatform/kubernetes/_out [[Go 1.1 package http] 10.245.0.5:35262]\n```\n\nHowever,\n- the apiserver thinks that all the pods are running (`kubectl get pods` gives this [output](https://gist.github.com/mbforbes/0aded988fa727fa3cab8))\n- Docker thinks that the pods are running (`sudo docker ps` on that node gives this [output](https://gist.github.com/mbforbes/e860bf28a399e4a2dbdf))\n\nIn summary:\n- apiserver and docker think containers are running\n- but kubelet can't find them\n- this manifested in the influxdb / heapster monitoring e2e test after node reboot\n\nI've still got the cluster around if anyone would like to debug.\n\n+cc @vishh (helped me debug this (thanks!))\n+cc @dchen1107 (node)\n+cc @roberthbailey (interested in getting #7580 in, which this is blocking)\n",
  "closed_at": "2015-05-15T21:36:10Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10524058?v=4",
    "events_url": "https://api.github.com/users/yujuhong/events{/privacy}",
    "followers_url": "https://api.github.com/users/yujuhong/followers",
    "following_url": "https://api.github.com/users/yujuhong/following{/other_user}",
    "gists_url": "https://api.github.com/users/yujuhong/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yujuhong",
    "id": 10524058,
    "login": "yujuhong",
    "node_id": "MDQ6VXNlcjEwNTI0MDU4",
    "organizations_url": "https://api.github.com/users/yujuhong/orgs",
    "received_events_url": "https://api.github.com/users/yujuhong/received_events",
    "repos_url": "https://api.github.com/users/yujuhong/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yujuhong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yujuhong/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yujuhong"
  },
  "comments": 10,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/8291/comments",
  "created_at": "2015-05-14T22:48:59Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/8291/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/8291",
  "id": 76516035,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 116719829,
      "name": "area/kubelet",
      "node_id": "MDU6TGFiZWwxMTY3MTk4Mjk=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubelet"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/8291/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2015-08-07T02:29:29Z",
    "closed_issues": 817,
    "created_at": "2015-02-06T20:27:16Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/9358478?v=4",
      "events_url": "https://api.github.com/users/goltermann/events{/privacy}",
      "followers_url": "https://api.github.com/users/goltermann/followers",
      "following_url": "https://api.github.com/users/goltermann/following{/other_user}",
      "gists_url": "https://api.github.com/users/goltermann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/goltermann",
      "id": 9358478,
      "login": "goltermann",
      "node_id": "MDQ6VXNlcjkzNTg0Nzg=",
      "organizations_url": "https://api.github.com/users/goltermann/orgs",
      "received_events_url": "https://api.github.com/users/goltermann/received_events",
      "repos_url": "https://api.github.com/users/goltermann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/goltermann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/goltermann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/goltermann"
    },
    "description": "Issues that need to be resolved for v1.0 of Kubernetes.",
    "due_on": null,
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/6",
    "id": 969317,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/6/labels",
    "node_id": "MDk6TWlsZXN0b25lOTY5MzE3",
    "number": 6,
    "open_issues": 0,
    "state": "closed",
    "title": "v1.0",
    "updated_at": "2016-05-04T22:36:06Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/6"
  },
  "node_id": "MDU6SXNzdWU3NjUxNjAzNQ==",
  "number": 8291,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Kubelet stats query fails for running containers",
  "updated_at": "2015-05-15T21:38:24Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/8291",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1170062?v=4",
    "events_url": "https://api.github.com/users/mbforbes/events{/privacy}",
    "followers_url": "https://api.github.com/users/mbforbes/followers",
    "following_url": "https://api.github.com/users/mbforbes/following{/other_user}",
    "gists_url": "https://api.github.com/users/mbforbes/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mbforbes",
    "id": 1170062,
    "login": "mbforbes",
    "node_id": "MDQ6VXNlcjExNzAwNjI=",
    "organizations_url": "https://api.github.com/users/mbforbes/orgs",
    "received_events_url": "https://api.github.com/users/mbforbes/received_events",
    "repos_url": "https://api.github.com/users/mbforbes/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mbforbes/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mbforbes/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mbforbes"
  }
}