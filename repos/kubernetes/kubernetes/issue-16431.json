{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "I am writing a client-side AngularJS app that uses XMLHttpRequest trying to talk to the apiserver. The apiserver was brought up with the following flags, especially with `cors-allowed-origins` hoping to allow CORS.\n\n```\n--cors-allowed-origins=.* \n--insecure-bind-address=127.0.0.1 \n--insecure-port=8080 \n--bind-address=0.0.0.0 \n--secure-port=443\n```\n\nand I configured apiserver to support basic auth with https.\n\nHowever, the pre-flight OPTIONS request failed with 401. Below is my rationale:\n- For CORS to work, the client will always first send a pre-flight OPTIONS request to the api endpoint\n- When the apiserver runs in the secure mode (with authn), for each request the master will use [\"m.Handler\"](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/app/server.go#L597) to process the request; whereas an [\"m.InsecureHandler\"](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/app/server.go#L650) will be used if running in insecure mode\n- The m.InsecureHandler will handle CORS [correctly](https://github.com/kubernetes/kubernetes/blob/52136bdb68d7ac34a702f9d962e141664a31ec0f/pkg/master/master.go#L720) without performing any auth.\n- In comparison, the m.Handler will add authn functionality _before_ CORS, as shown [here](https://github.com/kubernetes/kubernetes/blob/52136bdb68d7ac34a702f9d962e141664a31ec0f/pkg/master/master.go#L731), where the [handlers.NewRequestAuthenticator](https://github.com/kubernetes/kubernetes/blob/52136bdb68d7ac34a702f9d962e141664a31ec0f/pkg/master/master.go#L727) will add auth _before_ the InsecureHandler that handles CORS. In short, in the secure mode, we _first_ authenticate _all_ requests (including OPTIONS) _before_ detecting if it is an OPTIONS request\n- Meanwhile (unfortunately), as the OPTIONS request cannot carry any auth headers (by w3c standards), the OPTIONS requests will _always_ fail the authentication.\n\nIs this expected behavior or did I miss anything? If it is expected, then what is the recommended way to allow CORS with authn on? I am thinking of using a proxy in front of the apiserver\n",
  "closed_at": "2015-11-17T08:17:41Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 12,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/16431/comments",
  "created_at": "2015-10-28T15:03:19Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/16431/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/16431",
  "id": 113841854,
  "labels": [
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/16431/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMTM4NDE4NTQ=",
  "number": 16431,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "apiserver: CORS only works in insecure mode?",
  "updated_at": "2015-11-17T08:17:41Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/16431",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/11807517?v=4",
    "events_url": "https://api.github.com/users/xinzhangcmu/events{/privacy}",
    "followers_url": "https://api.github.com/users/xinzhangcmu/followers",
    "following_url": "https://api.github.com/users/xinzhangcmu/following{/other_user}",
    "gists_url": "https://api.github.com/users/xinzhangcmu/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/xinzhangcmu",
    "id": 11807517,
    "login": "xinzhangcmu",
    "node_id": "MDQ6VXNlcjExODA3NTE3",
    "organizations_url": "https://api.github.com/users/xinzhangcmu/orgs",
    "received_events_url": "https://api.github.com/users/xinzhangcmu/received_events",
    "repos_url": "https://api.github.com/users/xinzhangcmu/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/xinzhangcmu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xinzhangcmu/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/xinzhangcmu"
  }
}