{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/6450081?v=4",
    "events_url": "https://api.github.com/users/aojea/events{/privacy}",
    "followers_url": "https://api.github.com/users/aojea/followers",
    "following_url": "https://api.github.com/users/aojea/following{/other_user}",
    "gists_url": "https://api.github.com/users/aojea/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/aojea",
    "id": 6450081,
    "login": "aojea",
    "node_id": "MDQ6VXNlcjY0NTAwODE=",
    "organizations_url": "https://api.github.com/users/aojea/orgs",
    "received_events_url": "https://api.github.com/users/aojea/received_events",
    "repos_url": "https://api.github.com/users/aojea/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/aojea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aojea/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/aojea"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/6450081?v=4",
      "events_url": "https://api.github.com/users/aojea/events{/privacy}",
      "followers_url": "https://api.github.com/users/aojea/followers",
      "following_url": "https://api.github.com/users/aojea/following{/other_user}",
      "gists_url": "https://api.github.com/users/aojea/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/aojea",
      "id": 6450081,
      "login": "aojea",
      "node_id": "MDQ6VXNlcjY0NTAwODE=",
      "organizations_url": "https://api.github.com/users/aojea/orgs",
      "received_events_url": "https://api.github.com/users/aojea/received_events",
      "repos_url": "https://api.github.com/users/aojea/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/aojea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aojea/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/aojea"
    }
  ],
  "author_association": "NONE",
  "body": "Also reported in:\r\n* https://github.com/kubernetes/kubernetes/issues/32987\r\n* https://github.com/kubernetes/kubernetes/issues/73140\r\n* https://github.com/kubernetes/kubernetes/issues/89042\r\n* https://github.com/kubernetes/kubernetes/issues/86104\r\n\r\n**What happened**:\r\nService of NodePort type fails to (re)create if it was just deleted, and that delete had executed on different apiserver than the create is executing in.\r\n\r\n**What you expected to happen**:\r\nService of NodePort type is created successfully.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nRepeatedly create and delete service of NodePort type in a cluster that has more masters than one, and create/delete/create cycle hits two different masters:\r\n\r\n```yaml\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: proxy\r\nspec:\r\n  ports:\r\n    - name: \"proxy\"\r\n      port: 443\r\n      protocol: TCP\r\n      targetPort: 443\r\n      nodePort: 30443\r\n  type: NodePort\r\n  selector:\r\n    service: proxy\r\n```\r\nused in a loop:\r\n```\r\nwhile kubectl -n default create -f test.yaml ; do kubectl -n default delete -f test.yaml; done\r\n```\r\n\r\nresults in\r\n```\r\nservice/proxy created\r\nservice \"proxy\" deleted\r\nError from server (Invalid): error when creating \"proxy.yaml\": Service \"proxy\" is invalid: spec.ports[0].nodePort: Invalid value: 30443: provided port is already allocated\r\n```\r\nif create/delete requests are load balanced to two different apiservers. It can be forced to happen by using two different kubeconfigs pointing to different apiservers for create and delete. In such case, first create and delete succeed, but second create fails, as it doesn't register the deletion the apiserver 2 did.\r\n\r\n\r\n**Anything else we need to know?**:\r\nThis is a simplified test case. In our testing, when deleting and creating lots of objects (and create and delete happening on different apiservers), this does occur even \"kubectl delete ... --wait=true\" has finished successfully, and no objects are present. There seems to be some sort of time window where changes committed to one apiserver are not visible by another apiserver.\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:16:51Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:07:57Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- Cloud provider or hardware configuration: local VMs\r\n- OS (e.g: `cat /etc/os-release`): RHEL 7.7\r\n- Kernel (e.g. `uname -a`): `Linux kubemaster1 3.10.0-1062.4.1.el7.x86_64 #1 SMP Wed Sep 25 09:42:57 EDT 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\n- Install tools: custom\r\n",
  "closed_at": "2020-06-19T02:03:11Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 22,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85894/comments",
  "created_at": "2019-12-04T11:06:01Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85894/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/85894",
  "id": 532612630,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85894/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MzI2MTI2MzA=",
  "number": 85894,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "NodePort creation with statically assigned portNumber collide in multi-master HA cluster",
  "updated_at": "2020-06-19T06:15:34Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85894",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/853790?v=4",
    "events_url": "https://api.github.com/users/tuminoid/events{/privacy}",
    "followers_url": "https://api.github.com/users/tuminoid/followers",
    "following_url": "https://api.github.com/users/tuminoid/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuminoid/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tuminoid",
    "id": 853790,
    "login": "tuminoid",
    "node_id": "MDQ6VXNlcjg1Mzc5MA==",
    "organizations_url": "https://api.github.com/users/tuminoid/orgs",
    "received_events_url": "https://api.github.com/users/tuminoid/received_events",
    "repos_url": "https://api.github.com/users/tuminoid/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tuminoid/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuminoid/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tuminoid"
  }
}