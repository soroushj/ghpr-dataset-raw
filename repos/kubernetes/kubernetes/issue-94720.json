{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/419322?v=4",
    "events_url": "https://api.github.com/users/robscott/events{/privacy}",
    "followers_url": "https://api.github.com/users/robscott/followers",
    "following_url": "https://api.github.com/users/robscott/following{/other_user}",
    "gists_url": "https://api.github.com/users/robscott/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/robscott",
    "id": 419322,
    "login": "robscott",
    "node_id": "MDQ6VXNlcjQxOTMyMg==",
    "organizations_url": "https://api.github.com/users/robscott/orgs",
    "received_events_url": "https://api.github.com/users/robscott/received_events",
    "repos_url": "https://api.github.com/users/robscott/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/robscott/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/robscott/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/robscott"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/419322?v=4",
      "events_url": "https://api.github.com/users/robscott/events{/privacy}",
      "followers_url": "https://api.github.com/users/robscott/followers",
      "following_url": "https://api.github.com/users/robscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/robscott/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/robscott",
      "id": 419322,
      "login": "robscott",
      "node_id": "MDQ6VXNlcjQxOTMyMg==",
      "organizations_url": "https://api.github.com/users/robscott/orgs",
      "received_events_url": "https://api.github.com/users/robscott/received_events",
      "repos_url": "https://api.github.com/users/robscott/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/robscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robscott/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/robscott"
    }
  ],
  "author_association": "NONE",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/\r\n-->\r\n\r\n\r\n**What happened**:\r\nAt https//github.com/kubevirt/kubevirt we have a operator that recreate services if they get deleted, this is done programatically quite fast, after upgrading our cluster to k8s-1.19 doing so prevent service connectivity with `connection resused`, doing some investigations we found that the `endpointslices` (they have being activated at kube-proxy by default at k8s-1.19) does not get re-created by the endpointslices controller at k8s and that prevents connectivity since iptables rule does not appear at kube-proxy.\r\n\r\n**What you expected to happen**:\r\nAt fast Service recreate endpointslices has to be recreated too.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n```bash\r\n#!/bin/bash                                                                     \r\n                                                                                \r\nset -xe                                                                         \r\n                                                                                \r\n                                                                                \r\n                                                                                \r\n# Dump files instead of using stdin with kubectl it runs kubectl create         \r\n# faster and race condition appear                                              \r\n                                                                                \r\ncat << EOF > pod.yaml                                                           \r\n---                                                                             \r\napiVersion: v1                                                                  \r\nkind: Pod                                                                       \r\nmetadata:                                                                       \r\n  labels:                                                                       \r\n    run: http-server                                                            \r\n  name: http-server                                                             \r\nspec:                                                                           \r\n  containers:                                                                   \r\n  - image: danjellz/http-server                                                 \r\n    imagePullPolicy: Always                                                     \r\n    name: http-server                                                           \r\n    ports:                                                                      \r\n    - containerPort: 8080                                                       \r\n      name: http                                                                \r\n      protocol: TCP                                                             \r\nEOF                                                                             \r\n                                                                                \r\ncat << EOF > service.yaml                                                       \r\n---                                                                             \r\napiVersion: v1                                                                  \r\nkind: Service                                                                   \r\nmetadata:                                                                       \r\n  name: http-server                                                             \r\nspec:                                                                           \r\n  ports:                                                                        \r\n  - name: http                                                                  \r\n    port: 80                                                                    \r\n    protocol: TCP                                                               \r\n    targetPort: http                                                            \r\n  selector:                                                                     \r\n    run: http-server                                                            \r\n  sessionAffinity: None                                                         \r\n  type: ClusterIP                                                               \r\nstatus:                                                                         \r\n  loadBalancer: {}                                                              \r\nEOF                                                                             \r\n                                                                                \r\nkubectl delete --ignore-not-found -f pod.yaml                                   \r\nkubectl delete --ignore-not-found -f service.yaml                               \r\n                                                                                \r\nkubectl create -f service.yaml                                                  \r\nkubectl create -f pod.yaml                                                      \r\n                                                                                \r\nsleep 10\r\n\r\n#Will fail if the endpointslice is not there                                   \r\nkubectl get endpointslices |grep http-server                                    \r\nkubectl delete -f service.yaml && kubectl create -f service.yaml                \r\n                                                                                \r\nsleep 10                                                                        \r\n                                                                                \r\nkubectl get endpointslices |grep http-server                                    \r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): \r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.0\", GitCommit:\"e19964183377d0ec2052d1f1fa930c4d7575bd50\", GitTreeState:\"clean\", BuildDate:\"2020-08-26T14:30:33Z\", GoVersion:\"go1.15\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.0\", GitCommit:\"e19964183377d0ec2052d1f1fa930c4d7575bd50\", GitTreeState:\"clean\", BuildDate:\"2020-08-26T14:23:04Z\", GoVersion:\"go1.15\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g: `cat /etc/os-release`):\r\n```\r\nAME=\"CentOS Linux\"\r\nVERSION=\"8 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"8\"\r\nPLATFORM_ID=\"platform:el8\"\r\nPRETTY_NAME=\"CentOS Linux 8 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:8\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-8\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"8\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"8\"\r\n```\r\n- Kernel (e.g. `uname -a`):\r\n`Linux node01 4.18.0-227.el8.x86_64 #1 SMP Tue Jul 28 22:53:29 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`\r\n- Install tools:\r\n- Network plugin and version (if this is a network-related bug):\r\n`calico 3.15.3`\r\n- Others:\r\n",
  "closed_at": "2020-09-19T01:38:28Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/94720/comments",
  "created_at": "2020-09-11T11:33:03Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/94720/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/94720",
  "id": 699203089,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a regression from a prior release.",
      "id": 1967276560,
      "name": "kind/regression",
      "node_id": "MDU6TGFiZWwxOTY3Mjc2NTYw",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/regression"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Highest priority. Must be actively worked on as someone's top priority right now.",
      "id": 114528068,
      "name": "priority/critical-urgent",
      "node_id": "MDU6TGFiZWwxMTQ1MjgwNjg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/critical-urgent"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/94720/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2OTkyMDMwODk=",
  "number": 94720,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "endpointslices: When Service is recreate too fast endpoint slices are not re-created.",
  "updated_at": "2020-09-19T01:38:28Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/94720",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/3216202?v=4",
    "events_url": "https://api.github.com/users/qinqon/events{/privacy}",
    "followers_url": "https://api.github.com/users/qinqon/followers",
    "following_url": "https://api.github.com/users/qinqon/following{/other_user}",
    "gists_url": "https://api.github.com/users/qinqon/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/qinqon",
    "id": 3216202,
    "login": "qinqon",
    "node_id": "MDQ6VXNlcjMyMTYyMDI=",
    "organizations_url": "https://api.github.com/users/qinqon/orgs",
    "received_events_url": "https://api.github.com/users/qinqon/received_events",
    "repos_url": "https://api.github.com/users/qinqon/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/qinqon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/qinqon/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/qinqon"
  }
}