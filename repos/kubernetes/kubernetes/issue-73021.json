{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**Which jobs are failing**:\r\npull-kubernetes-bazel-test\r\n\r\n**Which test(s) are failing**:\r\nbazel test //pkg/scheduler/internal/queue:go_default_test\r\n\r\n**Since when has it been failing**:\r\n\r\n**Testgrid link**:\r\nhttps://gubernator.k8s.io/build/kubernetes-jenkins/pr-logs/pull/72677/pull-kubernetes-bazel-test/72822/\r\n\r\n**Reason for failure**:\r\nWARNING: DATA RACE\r\nRead at 0x00c000230db0 by goroutine 47:\r\n  runtime.mapiterinit()\r\n      GOROOT/src/runtime/map.go:734 +0x0\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.(*PriorityQueue).flushUnschedulableQLeftover()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:531 +0x17a\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.(*PriorityQueue).flushUnschedulableQLeftover-fm()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:298 +0x41\r\n  k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.JitterUntil.func1()\r\n      staging/src/k8s.io/apimachinery/pkg/util/wait/wait.go:133 +0x61\r\n  k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.JitterUntil()\r\n      staging/src/k8s.io/apimachinery/pkg/util/wait/wait.go:134 +0xce\r\n  k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.Until()\r\n      staging/src/k8s.io/apimachinery/pkg/util/wait/wait.go:88 +0x5a\r\n\r\nPrevious write at 0x00c000230db0 by goroutine 45:\r\n  runtime.mapassign_faststr()\r\n      GOROOT/src/runtime/map_faststr.go:190 +0x0\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.(*UnschedulablePodsMap).addOrUpdate()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:961 +0x30e\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.TestPriorityQueue_AssignedPodAdded()\r\n      pkg/scheduler/internal/queue/scheduling_queue_test.go:331 +0x601\r\n  testing.tRunner()\r\n      GOROOT/src/testing/testing.go:827 +0x162\r\n\r\nGoroutine 47 (running) created at:\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.(*PriorityQueue).run()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:298 +0x172\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.NewPriorityQueueWithClock()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:289 +0xe0b\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.NewPriorityQueue()\r\n      pkg/scheduler/internal/queue/scheduling_queue.go:266 +0x50\r\n  k8s.io/kubernetes/pkg/scheduler/internal/queue.TestPriorityQueue_AssignedPodAdded()\r\n      pkg/scheduler/internal/queue/scheduling_queue_test.go:328 +0x5a5\r\n  testing.tRunner()\r\n      GOROOT/src/testing/testing.go:827 +0x162\r\n\r\nGoroutine 45 (running) created at:\r\n  testing.(*T).Run()\r\n      GOROOT/src/testing/testing.go:878 +0x659\r\n  testing.runTests.func1()\r\n      GOROOT/src/testing/testing.go:1119 +0xa8\r\n  testing.tRunner()\r\n      GOROOT/src/testing/testing.go:827 +0x162\r\n  testing.runTests()\r\n      GOROOT/src/testing/testing.go:1117 +0x4ee\r\n  testing.(*M).Run()\r\n      GOROOT/src/testing/testing.go:1034 +0x2ee\r\n  main.main()\r\n      bazel-out/k8-fastbuild/bin/pkg/scheduler/internal/queue/linux_amd64_race_stripped/go_default_test%/testmain.go:128 +0x2fb\r\n\r\n**Anything else we need to know**:\r\nI'm very sorry about that.  UnschedulablePodsMap is not thread-safe. In scheduling_queue.go, lock will be acquired before operating UnschedulablePodsMap. But in scheduling_queue_test.go,  lock isn\u2018t be acquired. In the previous case,  only a single thread runs so it's ok. But after add goroutine `flushUnschedulableQLeftover`, there will be data race. So I need to acquire lock before operating UnschedulablePodsMap. ",
  "closed_at": "2019-01-18T02:55:01Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73021/comments",
  "created_at": "2019-01-17T13:15:08Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73021/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/73021",
  "id": 400271971,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a consistently or frequently failing test.",
      "id": 496752468,
      "name": "kind/failing-test",
      "node_id": "MDU6TGFiZWw0OTY3NTI0Njg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/failing-test"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Scheduling.",
      "id": 125550211,
      "name": "sig/scheduling",
      "node_id": "MDU6TGFiZWwxMjU1NTAyMTE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/scheduling"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Testing.",
      "id": 483069764,
      "name": "sig/testing",
      "node_id": "MDU6TGFiZWw0ODMwNjk3NjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/testing"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73021/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MDAyNzE5NzE=",
  "number": 73021,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "data race in TestPriorityQueue_AssignedPodAdded",
  "updated_at": "2019-01-18T02:55:01Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73021",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/8958057?v=4",
    "events_url": "https://api.github.com/users/denkensk/events{/privacy}",
    "followers_url": "https://api.github.com/users/denkensk/followers",
    "following_url": "https://api.github.com/users/denkensk/following{/other_user}",
    "gists_url": "https://api.github.com/users/denkensk/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/denkensk",
    "id": 8958057,
    "login": "denkensk",
    "node_id": "MDQ6VXNlcjg5NTgwNTc=",
    "organizations_url": "https://api.github.com/users/denkensk/orgs",
    "received_events_url": "https://api.github.com/users/denkensk/received_events",
    "repos_url": "https://api.github.com/users/denkensk/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/denkensk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/denkensk/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/denkensk"
  }
}