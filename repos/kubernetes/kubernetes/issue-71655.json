{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\nGenerated clients & informers for my types using:\r\n```\r\nGOPATH=$(go env GOPATH) ./vendor/k8s.io/code-generator/generate-groups.sh all \\\r\n    github.com/foo/bar/api/pkg/crd/client github.com/foo/bar/api/pkg/crd \\\r\n    \"foo:v1\" \\\r\n    --go-header-file /tmp/headerfile\r\n```\r\n\r\nOne of the API types look the following:\r\n```go\r\n//+genclient\r\n//+genclient:nonNamespaced\r\n//+resourceName=usersshkeies\r\n\r\n// UserSSHKey specifies a users UserSSHKey\r\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\r\ntype UserSSHKey struct {\r\n\tmetav1.TypeMeta   `json:\",inline\"`\r\n\tmetav1.ObjectMeta `json:\"metadata,omitempty\"`\r\n\r\n\tSpec SSHKeySpec `json:\"spec\"`\r\n}\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nThe generated `sharedInformerFactory` uses `usersshkeies` (As specified via the Tag on the type) within the `ForResource` function. But instead it uses `usersshkeys`:\r\n```go\r\n// ForResource gives generic access to a shared informer of the matching type\r\n// TODO extend this to unknown resources with a client pool\r\nfunc (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {\r\n\tswitch resource {\r\n\t// Group=foo.bar.io, Version=v1\r\n\tcase v1.SchemeGroupVersion.WithResource(\"usersshkeys\"):\r\n\t\treturn &genericInformer{resource: resource.GroupResource(), informer: f.Foo().V1().UserSSHKeys().Informer()}, nil\r\n\r\n\t}\r\n\r\n\treturn nil, fmt.Errorf(\"no informer found for %v\", resource)\r\n}\r\n```\r\n\r\nThe generated client correctly uses `usersshkeies`\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n- Specify `//+resourceName=usersshkeies` above a type\r\n- Generate the client & informer\r\n\r\n**Environment**:\r\n- k8s.io/client-go = release-8.0\r\n- k8s.io/code-generator = release-1.11\r\n\r\n\r\n<!-- DO NOT EDIT BELOW THIS LINE -->\r\n/kind bug",
  "closed_at": "2018-12-06T11:50:26Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71655/comments",
  "created_at": "2018-12-03T10:27:40Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71655/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/71655",
  "id": 386751053,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71655/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzODY3NTEwNTM=",
  "number": 71655,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "informer-gen does not respect `+resourceName` tag",
  "updated_at": "2018-12-06T11:50:26Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71655",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/14090308?v=4",
    "events_url": "https://api.github.com/users/mrIncompetent/events{/privacy}",
    "followers_url": "https://api.github.com/users/mrIncompetent/followers",
    "following_url": "https://api.github.com/users/mrIncompetent/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrIncompetent/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mrIncompetent",
    "id": 14090308,
    "login": "mrIncompetent",
    "node_id": "MDQ6VXNlcjE0MDkwMzA4",
    "organizations_url": "https://api.github.com/users/mrIncompetent/orgs",
    "received_events_url": "https://api.github.com/users/mrIncompetent/received_events",
    "repos_url": "https://api.github.com/users/mrIncompetent/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mrIncompetent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrIncompetent/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mrIncompetent"
  }
}