{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/730123?v=4",
    "events_url": "https://api.github.com/users/sttts/events{/privacy}",
    "followers_url": "https://api.github.com/users/sttts/followers",
    "following_url": "https://api.github.com/users/sttts/following{/other_user}",
    "gists_url": "https://api.github.com/users/sttts/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sttts",
    "id": 730123,
    "login": "sttts",
    "node_id": "MDQ6VXNlcjczMDEyMw==",
    "organizations_url": "https://api.github.com/users/sttts/orgs",
    "received_events_url": "https://api.github.com/users/sttts/received_events",
    "repos_url": "https://api.github.com/users/sttts/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sttts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sttts/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sttts"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/730123?v=4",
      "events_url": "https://api.github.com/users/sttts/events{/privacy}",
      "followers_url": "https://api.github.com/users/sttts/followers",
      "following_url": "https://api.github.com/users/sttts/following{/other_user}",
      "gists_url": "https://api.github.com/users/sttts/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sttts",
      "id": 730123,
      "login": "sttts",
      "node_id": "MDQ6VXNlcjczMDEyMw==",
      "organizations_url": "https://api.github.com/users/sttts/orgs",
      "received_events_url": "https://api.github.com/users/sttts/received_events",
      "repos_url": "https://api.github.com/users/sttts/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sttts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sttts/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sttts"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/6629765?v=4",
      "events_url": "https://api.github.com/users/roycaihw/events{/privacy}",
      "followers_url": "https://api.github.com/users/roycaihw/followers",
      "following_url": "https://api.github.com/users/roycaihw/following{/other_user}",
      "gists_url": "https://api.github.com/users/roycaihw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/roycaihw",
      "id": 6629765,
      "login": "roycaihw",
      "node_id": "MDQ6VXNlcjY2Mjk3NjU=",
      "organizations_url": "https://api.github.com/users/roycaihw/orgs",
      "received_events_url": "https://api.github.com/users/roycaihw/received_events",
      "repos_url": "https://api.github.com/users/roycaihw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/roycaihw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roycaihw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/roycaihw"
    }
  ],
  "author_association": "MEMBER",
  "body": "**What happened**:\r\nCreated a CRD with a group/version/kind that defines a CustomResourceDefinition type overlapping with the in-tree kubernetes type (**WARNING**: do not create this CRD on a cluster you care about, see https://github.com/kubernetes/kubernetes/issues/78707)\r\n\r\n```yaml\r\napiVersion: apiextensions.k8s.io/v1beta1\r\nkind: CustomResourceDefinition\r\nmetadata:\r\n  name: customresourcedefinitions.apiextensions.k8s.io\r\nspec:\r\n  group: apiextensions.k8s.io\r\n  version: v1beta1\r\n  scope: Cluster\r\n  names:\r\n    plural: customresourcedefinitions\r\n    singular: customresourcedefinition\r\n    kind: CustomResourceDefinition\r\n    listKind: CustomResourceDefinitionList\r\n  validation:\r\n    openAPIV3Schema:\r\n      type: object\r\n      properties:\r\n        readonly:\r\n          type: boolean\r\n```\r\n\r\nNote that two definitions for the group/version/kind appear in openapi:\r\n\r\n```sh\r\nkubectl get --raw /openapi/v2 | \\\r\n  jq '.definitions[\"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition\"]'\r\n```\r\n\r\n> ```json\r\n> {\r\n>   \"description\": \"CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.\",\r\n>   \"type\": \"object\",\r\n>   \"required\": [\r\n>     \"spec\"\r\n>   ],\r\n>   \"properties\": {\r\n>     \"apiVersion\": {\r\n>       \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\r\n>       \"type\": \"string\"\r\n>     },\r\n>     \"kind\": {\r\n>       \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\r\n>       \"type\": \"string\"\r\n>     },\r\n>     \"metadata\": {\r\n>       \"$ref\": \"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\r\n>     },\r\n>     \"spec\": {\r\n>       \"description\": \"Spec describes how the user wants the resources to appear\",\r\n>       \"$ref\": \"#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec\"\r\n>     },\r\n>     \"status\": {\r\n>       \"description\": \"Status indicates the actual state of the CustomResourceDefinition\",\r\n>       \"$ref\": \"#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus\"\r\n>     }\r\n>   },\r\n>   \"x-kubernetes-group-version-kind\": [\r\n>     {\r\n>       \"group\": \"apiextensions.k8s.io\",\r\n>       \"kind\": \"CustomResourceDefinition\",\r\n>       \"version\": \"v1beta1\"\r\n>     }\r\n>   ]\r\n> }\r\n> ```\r\n\r\n```sh\r\nkubectl get --raw /openapi/v2 | \\\r\n  jq '.definitions[\"io.k8s.apiextensions.v1beta1.CustomResourceDefinition\"]'\r\n```\r\n\r\n```json\r\n{\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"apiVersion\": {\r\n      \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"kind\": {\r\n      \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"metadata\": {\r\n      \"description\": \"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\",\r\n      \"$ref\": \"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\r\n    },\r\n    \"readonly\": {\r\n      \"type\": \"boolean\"\r\n    }\r\n  },\r\n  \"x-kubernetes-group-version-kind\": [\r\n    {\r\n      \"group\": \"apiextensions.k8s.io\",\r\n      \"kind\": \"CustomResourceDefinition\",\r\n      \"version\": \"v1beta1\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nBecause both specify a `x-kubernetes-group-version-kind`, and do not overlap in their generated definition type name, both are published in openapi (even though the handler for the CRD-defined one is not actually used to serve that group/version/kind)\r\n\r\n**What you expected to happen**:\r\n\r\npublished openapi only includes the in-tree type, which has precedence\r\n\r\n/cc @sttts @roycaihw \r\n/area custom-resources\r\n/priority important-soon\r\n/sig api-machinery",
  "closed_at": "2019-08-30T01:07:45Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78706/comments",
  "created_at": "2019-06-04T19:46:15Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78706/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/78706",
  "id": 452175013,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 556590057,
      "name": "area/custom-resources",
      "node_id": "MDU6TGFiZWw1NTY1OTAwNTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/custom-resources"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d3e2f0",
      "default": false,
      "description": "Indicates that an issue or PR should not be auto-closed due to staleness.",
      "id": 778118403,
      "name": "lifecycle/frozen",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/frozen"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78706/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": null,
    "closed_issues": 1361,
    "created_at": "2019-01-31T15:17:37Z",
    "creator": {
      "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
      "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
      "followers_url": "https://api.github.com/users/liggitt/followers",
      "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/liggitt",
      "id": 980082,
      "login": "liggitt",
      "node_id": "MDQ6VXNlcjk4MDA4Mg==",
      "organizations_url": "https://api.github.com/users/liggitt/orgs",
      "received_events_url": "https://api.github.com/users/liggitt/received_events",
      "repos_url": "https://api.github.com/users/liggitt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/liggitt"
    },
    "description": null,
    "due_on": null,
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/45",
    "id": 4018466,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/45/labels",
    "node_id": "MDk6TWlsZXN0b25lNDAxODQ2Ng==",
    "number": 45,
    "open_issues": 0,
    "state": "open",
    "title": "v1.16",
    "updated_at": "2020-10-25T01:09:02Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/45"
  },
  "node_id": "MDU6SXNzdWU0NTIxNzUwMTM=",
  "number": 78706,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Some CRDs that duplicate built-in group/version/kinds show up in openapi",
  "updated_at": "2019-08-30T01:07:45Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78706",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
    "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
    "followers_url": "https://api.github.com/users/liggitt/followers",
    "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/liggitt",
    "id": 980082,
    "login": "liggitt",
    "node_id": "MDQ6VXNlcjk4MDA4Mg==",
    "organizations_url": "https://api.github.com/users/liggitt/orgs",
    "received_events_url": "https://api.github.com/users/liggitt/received_events",
    "repos_url": "https://api.github.com/users/liggitt/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/liggitt"
  }
}