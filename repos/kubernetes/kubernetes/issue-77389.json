{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "E2e tests occasionally flake on AWS. It happens randomly to all tests that create a pod with a volume, write something to the volume, delete the pod and create a new one that reads from the volume. For example:\r\n\r\n```\r\n[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options\r\n```\r\n\r\n## High-level description\r\n1. A/D controller detaches a volume from a node (= the old pod died)\r\n2. Immediately after that (under 1s) it tries to attach the same volume to the same node (=the new pod is scheduled and coincidentally it uses the same node).\r\n\r\nIn most cases this works, however, few times per day it happens that the second attach (in Kubernetes terms, see below) does not succeed and the test times out.\r\n\r\n## Details\r\nAWS cloud provider in Kubernetes heavily uses DescribeInstances and DescribeVolumes to check that a volume has been attached or detached:\r\n\r\nIn step 1. above, Kubernetes issues `DetachVolume` AWS API call and polls `DescribeVolumes` until it reports that the volume has been detached.\r\n\r\nIn step 2. above, Kubernetes issues `DescribeInstances` AWS API call to check what devices are used on a node and then it tries to find a free device for the volume that should be attached.\r\n\r\nIn this bug, `DescribeInstances` in step 2 reports the volume as **detaching**, even that `DescribeVolumes` reported the volume as **detached** in step 1. There was no `AttachVolume` call in between!\r\n\r\nKubernetes does not expect that this could ever happen and does not try attach the volume (it's not reported as detached, so why bother, right?). This is the code that finds out that the volume is not detached (\"detaching\" != \"detached\"):\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/7f95735597bd621ee357a568f6c8d5f1b23c98ea/pkg/cloudprovider/providers/aws/aws.go#L2129\r\n\r\nAnd few lines below we skip `AttachVolume`:\r\nhttps://github.com/kubernetes/kubernetes/blob/7f95735597bd621ee357a568f6c8d5f1b23c98ea/pkg/cloudprovider/providers/aws/aws.go#L2140-L2156\r\n\r\nWe (OpenShift) run **lot of** Kubernetes e2e tests on AWS. We run them in a single AWS project and I guess we hit some timing issues / races on AWS side. We hit also AWS API quota pretty hard, but it does not seem to be related to this bug, I mention it only to illustrate the amount of things that run in parallel and that AWS may not like that load.\r\n\r\n**Environment**:\r\nKubernetes v1.13.4\r\n\r\n/kind bug\r\n/sig aws\r\n/sig storage",
  "closed_at": "2019-10-12T12:28:38Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 10,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/77389/comments",
  "created_at": "2019-05-03T10:48:57Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/77389/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/77389",
  "id": 439991943,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to aws provider",
      "id": 852130657,
      "name": "area/provider/aws",
      "node_id": "MDU6TGFiZWw4NTIxMzA2NTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/provider/aws"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/77389/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0Mzk5OTE5NDM=",
  "number": 77389,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "AWS: volumes are not attached if they were detached shortly before",
  "updated_at": "2019-10-12T12:28:38Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/77389",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1745006?v=4",
    "events_url": "https://api.github.com/users/jsafrane/events{/privacy}",
    "followers_url": "https://api.github.com/users/jsafrane/followers",
    "following_url": "https://api.github.com/users/jsafrane/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsafrane/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jsafrane",
    "id": 1745006,
    "login": "jsafrane",
    "node_id": "MDQ6VXNlcjE3NDUwMDY=",
    "organizations_url": "https://api.github.com/users/jsafrane/orgs",
    "received_events_url": "https://api.github.com/users/jsafrane/received_events",
    "repos_url": "https://api.github.com/users/jsafrane/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jsafrane/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsafrane/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jsafrane"
  }
}