{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1710179?v=4",
    "events_url": "https://api.github.com/users/heyste/events{/privacy}",
    "followers_url": "https://api.github.com/users/heyste/followers",
    "following_url": "https://api.github.com/users/heyste/following{/other_user}",
    "gists_url": "https://api.github.com/users/heyste/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/heyste",
    "id": 1710179,
    "login": "heyste",
    "node_id": "MDQ6VXNlcjE3MTAxNzk=",
    "organizations_url": "https://api.github.com/users/heyste/orgs",
    "received_events_url": "https://api.github.com/users/heyste/received_events",
    "repos_url": "https://api.github.com/users/heyste/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/heyste/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/heyste/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/heyste"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/1710179?v=4",
      "events_url": "https://api.github.com/users/heyste/events{/privacy}",
      "followers_url": "https://api.github.com/users/heyste/followers",
      "following_url": "https://api.github.com/users/heyste/following{/other_user}",
      "gists_url": "https://api.github.com/users/heyste/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/heyste",
      "id": 1710179,
      "login": "heyste",
      "node_id": "MDQ6VXNlcjE3MTAxNzk=",
      "organizations_url": "https://api.github.com/users/heyste/orgs",
      "received_events_url": "https://api.github.com/users/heyste/received_events",
      "repos_url": "https://api.github.com/users/heyste/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/heyste/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heyste/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/heyste"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "# Progress <code>[6/6]</code>\r\n\r\n-   [X] APISnoop org-flow: [checkAPIGroupPreferredVersionTest.org](https://github.com/cncf/apisnoop/blob/master/tickets/k8s/checkAPIGroupPreferredVersionTest.org)\r\n-   [x] Test approval issue: [[kubernetes/kubernetes#92158](https://github.com/kubernetes/kubernetes/issues/92158)]\r\n-   [x] Test pr: kuberenetes/kubernetes [#92619](https://github.com/kubernetes/kubernetes/pull/92619) \r\n-   [x] Two weeks soak start date: [testgrid-link](https://testgrid.k8s.io/sig-release-master-blocking#gce-cos-master-default&width=5&include-filter-by-regex=should%20validate%20PreferredVersion%20for%20each%20APIGroup) 20 July 2020\r\n-   [x] Two weeks soak end date: 3 August 2020\r\n-   [X] Test promotion pr: [kubernetes/kubernetes#93271](https://github.com/kubernetes/kubernetes/pull/93271)\r\n\r\n# Identifying an untested feature Using APISnoop\r\n\r\nAccording to this APIsnoop query, there are still an endpoint which is untested.\r\n\r\n```sql-mode\r\nSELECT\r\n  operation_id,\r\n  -- k8s_action,\r\n  path,\r\n  description\r\n  -- kind\r\n  -- FROM untested_stable_core_endpoints\r\n  FROM untested_stable_endpoints\r\n  where path not like '%volume%'\r\n  -- and kind like ''\r\n  and operation_id ilike '%APIGroup'\r\n ORDER BY operation_id\r\n LIMIT 25\r\n       ;\r\n```\r\n\r\n```example\r\n          operation_id           |                path                 |        description         \r\n---------------------------------+-------------------------------------+----------------------------\r\n getApiregistrationAPIGroup      | /apis/apiregistration.k8s.io/       | get information of a group\r\n getAppsAPIGroup                 | /apis/apps/                         | get information of a group\r\n getAuthenticationAPIGroup       | /apis/authentication.k8s.io/        | get information of a group\r\n getAuthorizationAPIGroup        | /apis/authorization.k8s.io/         | get information of a group\r\n getAutoscalingAPIGroup          | /apis/autoscaling/                  | get information of a group\r\n getBatchAPIGroup                | /apis/batch/                        | get information of a group\r\n getCoordinationAPIGroup         | /apis/coordination.k8s.io/          | get information of a group\r\n getDiscoveryAPIGroup            | /apis/discovery.k8s.io/             | get information of a group\r\n getEventsAPIGroup               | /apis/events.k8s.io/                | get information of a group\r\n getExtensionsAPIGroup           | /apis/extensions/                   | get information of a group\r\n getFlowcontrolApiserverAPIGroup | /apis/flowcontrol.apiserver.k8s.io/ | get information of a group\r\n getNodeAPIGroup                 | /apis/node.k8s.io/                  | get information of a group\r\n getPolicyAPIGroup               | /apis/policy/                       | get information of a group\r\n getRbacAuthorizationAPIGroup    | /apis/rbac.authorization.k8s.io/    | get information of a group\r\n getSchedulingAPIGroup           | /apis/scheduling.k8s.io/            | get information of a group\r\n getSettingsAPIGroup             | /apis/settings.k8s.io/              | get information of a group\r\n getStorageAPIGroup              | /apis/storage.k8s.io/               | get information of a group\r\n(17 rows)\r\n\r\n```\r\n\r\n# API Reference and feature documentation\r\n\r\n-   [Kubernetes API Reference Docs](https://kubernetes.io/docs/reference/kubernetes-api/)\r\n-   [Kubernetes API: v1.18](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#)\r\n-   [client-go](https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/)\r\n\r\n# The mock test\r\n\r\n## Test outline\r\n\r\n1.  Get a list of all group /apis\r\n\r\n2.  Iterate through list\r\n\r\n3.  Query each endpoint\r\n\r\n4.  List the PreferredVersion for the endpoint\r\n\r\n## Test the functionality in Go\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n  \"context\"\r\n  \"flag\"\r\n  \"fmt\"\r\n  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n  \"k8s.io/client-go/kubernetes\"\r\n  \"k8s.io/client-go/tools/clientcmd\"\r\n  \"os\"\r\n)\r\n\r\nfunc main() {\r\n  // uses the current context in kubeconfig\r\n  kubeconfig := flag.String(\"kubeconfig\", fmt.Sprintf(\"%v/%v/%v\", os.Getenv(\"HOME\"), \".kube\", \"config\"), \"(optional) absolute path to the kubeconfig file\")\r\n  flag.Parse()\r\n  config, err := clientcmd.BuildConfigFromFlags(\"\", *kubeconfig)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  // make our work easier to find in the audit_event queries\r\n  config.UserAgent = \"live-test-writing\"\r\n  // creates the clientset\r\n  ClientSet, _ := kubernetes.NewForConfig(config)\r\n\r\n  // TEST BEGINS HERE\r\n  fmt.Println(\"[status] begin\")\r\n\r\n  // get list of APIGroup endpoints\r\n  list := &metav1.APIGroupList{}\r\n  err = ClientSet.Discovery().RESTClient().Get().AbsPath(\"/apis/\").Do(context.TODO()).Into(list)\r\n\r\n  if err != nil {\r\n    fmt.Println(\"Failed to find /apis/\", err)\r\n    os.Exit(1)\r\n  }\r\n\r\n  for _, group := range list.Groups {\r\n    fmt.Println(\"Checking APIGroup:\", group.Name)\r\n\r\n    // hit APIGroup endpoint\r\n    checkGroup := &metav1.APIGroup{}\r\n    apiPath := \"/apis/\" + group.Name + \"/\"\r\n    err = ClientSet.Discovery().RESTClient().Get().AbsPath(apiPath).Do(context.TODO()).Into(checkGroup)\r\n\r\n    if err != nil {\r\n      fmt.Printf(\"Fail to access: %s | Error: %v\\n\", apiPath, err)\r\n      os.Exit(1)\r\n    }\r\n\r\n    // get PreferredVersion for endpoint\r\n    fmt.Println(\"PreferredVersion:\", checkGroup.PreferredVersion, \"\\n\")\r\n  }\r\n\r\n  // TEST ENDS HERE\r\n  fmt.Println(\"[status] complete\")\r\n}\r\n```\r\n\r\n```go\r\n[status] begin\r\nChecking APIGroup: apiregistration.k8s.io\r\nPreferredVersion: {apiregistration.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: extensions\r\nPreferredVersion: {extensions/v1beta1 v1beta1} \r\n\r\nChecking APIGroup: apps\r\nPreferredVersion: {apps/v1 v1} \r\n\r\nChecking APIGroup: events.k8s.io\r\nPreferredVersion: {events.k8s.io/v1beta1 v1beta1} \r\n\r\nChecking APIGroup: authentication.k8s.io\r\nPreferredVersion: {authentication.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: authorization.k8s.io\r\nPreferredVersion: {authorization.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: autoscaling\r\nPreferredVersion: {autoscaling/v1 v1} \r\n\r\nChecking APIGroup: batch\r\nPreferredVersion: {batch/v1 v1} \r\n\r\nChecking APIGroup: certificates.k8s.io\r\nPreferredVersion: {certificates.k8s.io/v1beta1 v1beta1} \r\n\r\nChecking APIGroup: networking.k8s.io\r\nPreferredVersion: {networking.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: policy\r\nPreferredVersion: {policy/v1beta1 v1beta1} \r\n\r\nChecking APIGroup: rbac.authorization.k8s.io\r\nPreferredVersion: {rbac.authorization.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: storage.k8s.io\r\nPreferredVersion: {storage.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: admissionregistration.k8s.io\r\nPreferredVersion: {admissionregistration.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: apiextensions.k8s.io\r\nPreferredVersion: {apiextensions.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: scheduling.k8s.io\r\nPreferredVersion: {scheduling.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: coordination.k8s.io\r\nPreferredVersion: {coordination.k8s.io/v1 v1} \r\n\r\nChecking APIGroup: auditregistration.k8s.io\r\nPreferredVersion: {auditregistration.k8s.io/v1alpha1 v1alpha1} \r\n\r\nChecking APIGroup: node.k8s.io\r\nPreferredVersion: {node.k8s.io/v1beta1 v1beta1} \r\n\r\nChecking APIGroup: discovery.k8s.io\r\nPreferredVersion: {discovery.k8s.io/v1beta1 v1beta1} \r\n\r\n[status] complete\r\n```\r\n\r\n# Verifying increase in coverage with APISnoop\r\n\r\nDiscover useragents:\r\n\r\n```sql-mode\r\nselect distinct useragent from audit_event where bucket='apisnoop' and useragent not like 'kube%' and useragent not like 'coredns%' and useragent not like 'kindnetd%' and useragent like 'live%';\r\n```\r\n\r\n```example\r\n     useragent     \r\n-------------------\r\n live-test-writing\r\n(1 row)\r\n\r\n```\r\n\r\nList endpoints hit by the test:\r\n\r\n```sql-mode\r\nselect * from endpoints_hit_by_new_test where useragent like 'live%';\r\n```\r\n\r\n```example\r\n     useragent     |           operation_id           | hit_by_ete | hit_by_new_test \r\n-------------------+----------------------------------+------------+-----------------\r\n live-test-writing | getAdmissionregistrationAPIGroup | t          |               1\r\n live-test-writing | getApiextensionsAPIGroup         | t          |               1\r\n live-test-writing | getApiregistrationAPIGroup       | f          |               1\r\n live-test-writing | getAPIVersions                   | t          |               1\r\n live-test-writing | getAppsAPIGroup                  | f          |               1\r\n live-test-writing | getAuthenticationAPIGroup        | f          |               1\r\n live-test-writing | getAuthorizationAPIGroup         | f          |               1\r\n live-test-writing | getAutoscalingAPIGroup           | f          |               1\r\n live-test-writing | getBatchAPIGroup                 | f          |               1\r\n live-test-writing | getCertificatesAPIGroup          | t          |               1\r\n live-test-writing | getCoordinationAPIGroup          | f          |               1\r\n live-test-writing | getDiscoveryAPIGroup             | f          |               1\r\n live-test-writing | getEventsAPIGroup                | f          |               1\r\n live-test-writing | getExtensionsAPIGroup            | f          |               1\r\n live-test-writing | getNetworkingAPIGroup            | t          |               1\r\n live-test-writing | getNodeAPIGroup                  | f          |               1\r\n live-test-writing | getPolicyAPIGroup                | f          |               1\r\n live-test-writing | getRbacAuthorizationAPIGroup     | f          |               1\r\n live-test-writing | getSchedulingAPIGroup            | f          |               1\r\n live-test-writing | getStorageAPIGroup               | f          |               1\r\n(20 rows)\r\n\r\n```\r\n\r\nDisplay endpoint coverage change:\r\n\r\n```sql-mode\r\nselect * from projected_change_in_coverage;\r\n```\r\n\r\n```example\r\n   category    | total_endpoints | old_coverage | new_coverage | change_in_number \r\n---------------+-----------------+--------------+--------------+------------------\r\n test_coverage |             458 |          206 |          222 |               16\r\n(1 row)\r\n\r\n```\r\n\r\n# Final notes\r\n\r\nIf a test with these calls gets merged, ****test coverage will go up by 15 points****\r\n\r\nThis test is also created with the goal of conformance promotion.\r\n\r\n---\r\n\r\n/sig testing\r\n/sig architecture\r\n/area conformance",
  "closed_at": "2020-08-04T01:46:20Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92158/comments",
  "created_at": "2020-06-15T23:23:02Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92158/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/92158",
  "id": 639249778,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to kubernetes conformance tests",
      "id": 717986501,
      "name": "area/conformance",
      "node_id": "MDU6TGFiZWw3MTc5ODY1MDE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/conformance"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Architecture.",
      "id": 636152047,
      "name": "sig/architecture",
      "node_id": "MDU6TGFiZWw2MzYxNTIwNDc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/architecture"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Testing.",
      "id": 483069764,
      "name": "sig/testing",
      "node_id": "MDU6TGFiZWw0ODMwNjk3NjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/testing"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92158/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MzkyNDk3Nzg=",
  "number": 92158,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Write checkAPIGroupPreferredVersion Test +Promote - +16 Endpoint coverage",
  "updated_at": "2020-08-04T16:40:25Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92158",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/61125752?v=4",
    "events_url": "https://api.github.com/users/Riaankl/events{/privacy}",
    "followers_url": "https://api.github.com/users/Riaankl/followers",
    "following_url": "https://api.github.com/users/Riaankl/following{/other_user}",
    "gists_url": "https://api.github.com/users/Riaankl/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Riaankl",
    "id": 61125752,
    "login": "Riaankl",
    "node_id": "MDQ6VXNlcjYxMTI1NzUy",
    "organizations_url": "https://api.github.com/users/Riaankl/orgs",
    "received_events_url": "https://api.github.com/users/Riaankl/received_events",
    "repos_url": "https://api.github.com/users/Riaankl/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Riaankl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Riaankl/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Riaankl"
  }
}