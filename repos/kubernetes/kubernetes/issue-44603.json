{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?** (choose one):\r\n\r\n`BUG REPORT`\r\n\r\n**Kubernetes version** (use `kubectl version`):\r\n\r\n`v1.6.1`\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**: \r\n4 VMs via ESXI 6.5 on a single physical server\r\n- **OS** (e.g. from /etc/os-release): \r\nUbuntu 16.04.2\r\n- **Kernel** (e.g. `uname -a`): \r\n`Linux kube-master-1 4.8.0-46-generic #49~16.04.1-Ubuntu SMP Fri Mar 31 14:51:03 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux`\r\n- **Install tools**: \r\nkubeadm `1.6.1-00`\r\n- **Others**:\r\ndocker `1.12.6`\r\n\r\n**What happened**:\r\n\r\nWhen bootstraping a new cluster with `kubeadm v1.6.1` and the `vsphere` cloud-provider, the `kubelet` cant' start because of the following `invalid memory address or nil pointer dereference` panic error.\r\n\r\n```\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: panic: runtime error: invalid memory address or nil pointer dereference\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: [signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0x120cd37]\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: goroutine 1 [running]:\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: panic(0x2d9d660, 0xc420010040)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /usr/local/go/src/runtime/panic.go:500 +0x1a1\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere.getVMName(0xc42034d440, 0xc420745d90, 0x0, 0x0, 0x0, 0x0)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere.go:255 +0x6a7\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere.newVSphere(0xc4203bdfe8, 0x4, 0xc420270aa0, 0x14, 0xc420396400, 0xd, 0xc420396608, 0x3, 0x1, 0xc420396b40, ...)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere.go:285 +0x15b\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere.init.1.func1(0x4d38520, 0xc420026708, 0x7ffdd2920d33, 0x7, 0xc420296cc8, 0xc4208a9201)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere.go:204 +0xa8\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/pkg/cloudprovider.GetCloudProvider(0x7ffdd2920d33, 0x7, 0x4d38520, 0xc420026708, 0x0, 0x0, 0x0, 0x0)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/plugins.go:87 +0xda\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/pkg/cloudprovider.InitCloudProvider(0x7ffdd2920d33, 0x7, 0x7ffdd2920d4a, 0x1c, 0x0, 0x0, 0x0, 0x0)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/plugins.go:119 +0x141\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/cmd/kubelet/app.run(0xc420953800, 0x0, 0xc4208a9ec0, 0x456eb0)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubelet/app/server.go:424 +0x1567\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: k8s.io/kubernetes/cmd/kubelet/app.Run(0xc420953800, 0x0, 0x22, 0xc4203bd640)\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubelet/app/server.go:285 +0x39\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]: main.main()\r\nApr 18 10:33:09 kube-master-1 kubelet[14075]:         /go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubelet/kubelet.go:48 +0x92\r\n```\r\n\r\nMoreover, it is not possible to specify the [VMName](https://github.com/kubernetes/kubernetes/blob/67f2a7cc00931cf9df909e6665ab9ece4b8497b3/pkg/cloudprovider/providers/vsphere/vsphere.go#L137) manually in the cloud-provider config file because of the following error:\r\n\r\n```\r\nApr 18 10:30:39 kube-master-1 kubelet[13962]: error: failed to run Kubelet: could not init cloud provider \"vsphere\": invalid variable: section \"Global\" subsection \"\" variable \"vm-name\"\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nMy `v1.6.1` kubernetes cluster initialized on my master node with `vsphere` cloud-provider enabled.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\n\r\n*/etc/systemd/system/kubelet.service.d/10-kubeadm.conf*\r\n\r\n```\r\n[Service]\r\nEnvironment=\"KUBELET_KUBECONFIG_ARGS=--kubeconfig=/etc/kubernetes/kubelet.conf --require-kubeconfig=true\"\r\nEnvironment=\"KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests --allow-privileged=true\"\r\nEnvironment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin\"\r\nEnvironment=\"KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local\"\r\nEnvironment=\"KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --client-ca-file=/etc/kubernetes/pki/ca.crt\"\r\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=vsphere --cloud-config=/etc/kubernetes/cloud-config\"\r\nExecStart=\r\nExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_SYSTEM_PODS_ARGS $KUBELET_NETWORK_ARGS $KUBELET_DNS_ARGS $KUBELET_AUTHZ_ARGS $KUBELET_EXTRA_ARGS\r\n```\r\n\r\n*/etc/kubernetes/cloud-config*\r\n\r\n```\r\n[Global]\r\n        user = kube\r\n        password = {PASSWORD}\r\n        server = {ESXI-IP}\r\n        port = 443\r\n        insecure-flag = 1\r\n        datacenter = ha-datacenter\r\n        datastore = datastore-ssd-2\r\n        working-dir =\r\n[Disk]\r\n    scsicontrollertype = pvscsi\r\n```\r\n\r\n*/etc/kubernetes/kubeadm.conf*\r\n\r\n```\r\nkind: MasterConfiguration\r\napiVersion: kubeadm.k8s.io/v1alpha1\r\ncloudProvider: vsphere\r\n```\r\n\r\n*kubeadm init*\r\n```\r\nroot@kube-master-1:/etc/kubernetes# kubeadm init --skip-preflight-checks --config=/etc/kubernetes/kubeadm.conf --apiserver-advertise-address 192.168.0.10 --kubernetes-version v1.6.1 --token {TOKEN}\r\n[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\r\n[init] Using Kubernetes version: v1.6.0\r\n[init] Using Authorization mode: RBAC\r\n[init] WARNING: For cloudprovider integrations to work --cloud-provider must be set for all kubelets in the cluster.\r\n\t(/etc/systemd/system/kubelet.service.d/10-kubeadm.conf should be edited for this purpose)\r\n[preflight] Skipping pre-flight checks\r\n[preflight] Starting the kubelet service\r\n[certificates] Generated CA certificate and key.\r\n[certificates] Generated API server certificate and key.\r\n[certificates] API Server serving cert is signed for DNS names [kube-master-1 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 {PUBLIC-IP}]\r\n[certificates] Generated API server kubelet client certificate and key.\r\n[certificates] Generated service account token signing key and public key.\r\n[certificates] Generated front-proxy CA certificate and key.\r\n[certificates] Generated front-proxy client certificate and key.\r\n[certificates] Valid certificates and keys now exist in \"/etc/kubernetes/pki\"\r\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/scheduler.conf\"\r\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\r\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\r\n[kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/controller-manager.conf\"\r\n[apiclient] Created API client, waiting for the control plane to become ready\r\n...\r\n```\r\n\r\n**Anything else we need to know**:\r\n\r\nEach VM has 2 network interfaces, one with a public IP (requirement of `online.net` when doing virtualisation on a single physical server) and one with a private IP.\r\n\r\n*/etc/docker/daemon.json*\r\n\r\n```json\r\n{\r\n    \"ip-masq\": false, \r\n    \"iptables\": false, \r\n    \"live-restore\": true, \r\n    \"log-level\": \"warn\", \r\n    \"log-opts\": {\r\n        \"max-file\": \"10\", \r\n        \"max-size\": \"100m\"\r\n    }, \r\n    \"storage-driver\": \"overlay2\"\r\n}\r\n```",
  "closed_at": "2017-04-20T01:52:59Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 13,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44603/comments",
  "created_at": "2017-04-18T09:58:31Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44603/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/44603",
  "id": 222363052,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44603/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjIzNjMwNTI=",
  "number": 44603,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "kubelet panic `invalid memory address or nil pointer dereference` using `kubeadm init` with vsphere cloud-provider",
  "updated_at": "2017-06-14T18:52:13Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44603",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1931038?v=4",
    "events_url": "https://api.github.com/users/sdurrheimer/events{/privacy}",
    "followers_url": "https://api.github.com/users/sdurrheimer/followers",
    "following_url": "https://api.github.com/users/sdurrheimer/following{/other_user}",
    "gists_url": "https://api.github.com/users/sdurrheimer/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sdurrheimer",
    "id": 1931038,
    "login": "sdurrheimer",
    "node_id": "MDQ6VXNlcjE5MzEwMzg=",
    "organizations_url": "https://api.github.com/users/sdurrheimer/orgs",
    "received_events_url": "https://api.github.com/users/sdurrheimer/received_events",
    "repos_url": "https://api.github.com/users/sdurrheimer/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sdurrheimer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sdurrheimer/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sdurrheimer"
  }
}