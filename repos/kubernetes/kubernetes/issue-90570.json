{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**What happened**:\r\n\r\nwhen initializing a kubernetes cluster in Google Cloud manually (not using GKE), internal (and external if available/applicable) node IP is not populated in \"kubectl get nodes\" if the interface used to connect to the master and passed to kubelet does not correspond to the first network interface, nic0 on google cloud console UI. \r\n\r\nI cannot \"kubectl edit node\" and patch in the node IP information into the \"addresses\" field either. \r\n\r\nThis issue does not occur when kubelet --node-ip=(ip of nic0).\r\nkubelet on all members of the cluster declare cloud-provider=\"gce\". \r\n\r\n**What you expected to happen**:\r\n\r\nwhen kubelet is given a node-ip argument, it is checked against all nics of the google cloud instance and populated in node information even if a nic other than nic0 is used. \r\nOr at least I am allowed to override nodeIP somehow after the node is brought up. \r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nWe have scripts that automate this \"manual kubernetes\" process, I will describe it as generally as I can but i can share chunks of the script as needed. \r\nGiven two VPCs,\r\ninitialize an instance for master, one nic on VPC1\r\ninitialize an instance for worker with two nics, one on VPC2, the other on VPC1. \r\ninstall required dependencies on both (apt-get docker-ce kubelet kubeadm kubectl ...)\r\non master, mkdir -p /etc/default/kubelet; echo \"KUBELET_EXTRA_ARGS=--cloud-provider='gce' > /etc/default/kubelet; kubeadm init\r\non worker, mkdir -p /etc/default/kubelet; echo \"KUBELET_EXTRA_ARGS=--node-ip=(nic1 ip) --cloud-provider='gce' >/etc/default/kubelet; kubeadm join\r\nwait a bit. \r\nkubectl get nodes -o wide, verify no internal IP or external IP information is populated for the worker\r\njournalctl -xef on worker to see something like \r\n15855 kubelet_node_status.go:520] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: (nic1 ip)\r\n\r\n**Anything else we need to know?**:\r\ni'm guessing the problem stems from something like https://github.com/kubernetes/kubernetes/blob/f7907083c21a1ad5af260a6f6887503c2566abfb/staging/src/k8s.io/legacy-cloud-providers/gce/gce_instances.go#L86\r\nwhere we only check nic0 and return that, and then this bit here\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/nodestatus/setters.go#L97\r\nonly loops through nic0's info, doesn't match, and then we return an error. \r\nif the first bit returned an array of IPs instead of just a single set, that would probably fix this. \r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): \r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.2\", GitCommit:\"52c56ce7a8272c798dbc29846288d7cd9fbae032\", GitTreeState:\"clean\", BuildDate:\"2020-04-16T11:56:40Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.1\", GitCommit:\"7879fc12a63337efff607952a323df90cdc7a335\", GitTreeState:\"clean\", BuildDate:\"2020-04-08T17:30:47Z\", GoVersion:\"go1.13.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- Cloud provider or hardware configuration: Google Cloud, all n1-standard-4 instances\r\n- OS (e.g: `cat /etc/os-release`):  \r\nNAME=\"Ubuntu\"\r\nVERSION=\"18.04.4 LTS (Bionic Beaver)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 18.04.4 LTS\"\r\nVERSION_ID=\"18.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=bionic\r\nUBUNTU_CODENAME=bionic\r\n\r\n- Kernel (e.g. `uname -a`): \r\nLinux 5.0.0-1033-gcp #34-Ubuntu SMP Tue Mar 3 04:36:26 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n- Install tools: installed kubeadm kubelet docker and whatever else through apt-get\r\n- Network plugin and version (if this is a network-related bug):\r\n- Others:\r\n",
  "closed_at": "2020-06-29T05:18:15Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90570/comments",
  "created_at": "2020-04-28T21:57:09Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90570/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/90570",
  "id": 608641804,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cloud Provider.",
      "id": 958178286,
      "name": "sig/cloud-provider",
      "node_id": "MDU6TGFiZWw5NTgxNzgyODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cloud-provider"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90570/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MDg2NDE4MDQ=",
  "number": 90570,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "GCE \"baremetal\" cluster, worker node IPs not populated when kubelet --node-ip given IP of not-first-NIC",
  "updated_at": "2020-06-29T05:18:15Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90570",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/628023?v=4",
    "events_url": "https://api.github.com/users/hamburgerbun/events{/privacy}",
    "followers_url": "https://api.github.com/users/hamburgerbun/followers",
    "following_url": "https://api.github.com/users/hamburgerbun/following{/other_user}",
    "gists_url": "https://api.github.com/users/hamburgerbun/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hamburgerbun",
    "id": 628023,
    "login": "hamburgerbun",
    "node_id": "MDQ6VXNlcjYyODAyMw==",
    "organizations_url": "https://api.github.com/users/hamburgerbun/orgs",
    "received_events_url": "https://api.github.com/users/hamburgerbun/received_events",
    "repos_url": "https://api.github.com/users/hamburgerbun/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hamburgerbun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hamburgerbun/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hamburgerbun"
  }
}