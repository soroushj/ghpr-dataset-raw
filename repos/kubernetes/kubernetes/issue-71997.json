{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/6496100?v=4",
    "events_url": "https://api.github.com/users/alvaroaleman/events{/privacy}",
    "followers_url": "https://api.github.com/users/alvaroaleman/followers",
    "following_url": "https://api.github.com/users/alvaroaleman/following{/other_user}",
    "gists_url": "https://api.github.com/users/alvaroaleman/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/alvaroaleman",
    "id": 6496100,
    "login": "alvaroaleman",
    "node_id": "MDQ6VXNlcjY0OTYxMDA=",
    "organizations_url": "https://api.github.com/users/alvaroaleman/orgs",
    "received_events_url": "https://api.github.com/users/alvaroaleman/received_events",
    "repos_url": "https://api.github.com/users/alvaroaleman/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/alvaroaleman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alvaroaleman/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/alvaroaleman"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/6496100?v=4",
      "events_url": "https://api.github.com/users/alvaroaleman/events{/privacy}",
      "followers_url": "https://api.github.com/users/alvaroaleman/followers",
      "following_url": "https://api.github.com/users/alvaroaleman/following{/other_user}",
      "gists_url": "https://api.github.com/users/alvaroaleman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alvaroaleman",
      "id": 6496100,
      "login": "alvaroaleman",
      "node_id": "MDQ6VXNlcjY0OTYxMDA=",
      "organizations_url": "https://api.github.com/users/alvaroaleman/orgs",
      "received_events_url": "https://api.github.com/users/alvaroaleman/received_events",
      "repos_url": "https://api.github.com/users/alvaroaleman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alvaroaleman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alvaroaleman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alvaroaleman"
    }
  ],
  "author_association": "NONE",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!-->\r\n\r\n\r\n**What happened**:\r\nProvsioning a PVC using a storage class with vSphere as the cloud provider failed with error \"runtime error: index out of range\".\r\n\r\n**What you expected to happen**:\r\nThe PVC should have been created.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nCreate a PVC using a storage class with vSphere as the cloud provider and a VMware vCenter Server where the default language is not English.\r\n\r\n**Anything else we need to know?**:\r\nK8s in conjunction with vSphere PVC relies on English error messages from the VMware API in order to determine the canonical path for a newly created volume (VMDK file).\r\n\r\nThe faulting code (v1.11.3, still the same on master) can be found here (starting at line 312): https://github.com/kubernetes/kubernetes/blob/v1.11.3/pkg/cloudprovider/providers/vsphere/vsphere_util.go\r\n\r\n```\r\nfunc getcanonicalVolumePath(ctx context.Context, dc *vclib.Datacenter, volumePath string) (string, error) {\r\n\tvar folderID string\r\n\tvar folderExists bool\r\n\tcanonicalVolumePath := volumePath\r\n\tdsPathObj, err := vclib.GetDatastorePathObjFromVMDiskPath(volumePath)\r\n\tif err != nil {\r\n\t\treturn \"\", err\r\n\t}\r\n\tdsPath := strings.Split(strings.TrimSpace(dsPathObj.Path), \"/\")\r\n\tif len(dsPath) <= 1 {\r\n\t\treturn canonicalVolumePath, nil\r\n\t}\r\n\tdatastore := dsPathObj.Datastore\r\n\tdsFolder := dsPath[0]\r\n\tfolderNameIDMap, datastoreExists := datastoreFolderIDMap[datastore]\r\n\tif datastoreExists {\r\n\t\tfolderID, folderExists = folderNameIDMap[dsFolder]\r\n\t}\r\n\t// Get the datastore folder ID if datastore or folder doesn't exist in datastoreFolderIDMap\r\n\tif !datastoreExists || !folderExists {\r\n\t\tif !vclib.IsValidUUID(dsFolder) {\r\n\t\t\tdummyDiskVolPath := \"[\" + datastore + \"] \" + dsFolder + \"/\" + DummyDiskName\r\n\t\t\t// Querying a non-existent dummy disk on the datastore folder.\r\n\t\t\t// It would fail and return an folder ID in the error message.\r\n\t\t\t_, err := dc.GetVirtualDiskPage83Data(ctx, dummyDiskVolPath)\r\n\t\t\tif err != nil {\r\n\t\t\t\tre := regexp.MustCompile(\"File (.*?) was not found\")\r\n\t\t\t\tmatch := re.FindStringSubmatch(err.Error())\r\n\t\t\t\tcanonicalVolumePath = match[1]\r\n\t\t\t}\r\n\t\t}\r\n\t\tdiskPath := vclib.GetPathFromVMDiskPath(canonicalVolumePath)\r\n\t\tif diskPath == \"\" {\r\n\t\t\treturn \"\", fmt.Errorf(\"Failed to parse canonicalVolumePath: %s in getcanonicalVolumePath method\", canonicalVolumePath)\r\n\t\t}\r\n\t\tfolderID = strings.Split(strings.TrimSpace(diskPath), \"/\")[0]\r\n\t\tsetdatastoreFolderIDMap(datastoreFolderIDMap, datastore, dsFolder, folderID)\r\n\t}\r\n\tcanonicalVolumePath = strings.Replace(volumePath, dsFolder, folderID, 1)\r\n\treturn canonicalVolumePath, nil\r\n}\r\n```\r\n\r\nThe line \"canonicalVolumePath = match[1]\" (340) in the above code is the problem because \"File (.*?) was not found\" (English) never matches for a different language (e.g. German: \"Datei [DATASTORE] kubevols/kube-dummyDisk.vmdk wurde nicht gefunden\") and a \u201cruntime error: index out of range\u201d oocurs in the \"kube-controller-manager\".\r\n\r\nThis causes the already created volume (VMDK file) not to be reported back to the K8s system which in turn will try to recreate it repeatedly in a loop (fails with \"Cannot complete the operation because the file or folder [DATASTORE] /kubevols/kubernetes-dynamic-pvc-[UUID] already exists\").\r\n\r\nFind below the corresponding log excerpt (kube-controller-manager): \r\n\r\n```\r\nI1210 13:40:10.467434       1 pv_controller.go:1394] error saving claim default/testing: Operation cannot be fulfilled on persistentvolumeclaims \"testing\": the object has been modified; please apply your changes to the latest version and try again\r\nI1210 13:40:12.227023       1 vsphere.go:1108] Starting to create a vSphere volume with volumeOptions: &{CapacityKB:1048576 Tags:map[kubernetes.io/created-for/pvc/namespace:default kubernetes.io/created-for/pvc/name:testing kubernetes.io/created-for/pv/name:pvc-1d2167a0-fc81-11e8-bd11-005056968ce7] Name:kubernetes-dynamic-pvc-1d2167a0-fc81-11e8-bd11-005056968ce7 DiskFormat:thin Datastore: VSANStorageProfileData: StoragePolicyName: StoragePolicyID: SCSIControllerType:}\r\nW1210 13:40:13.081793       1 datacenter.go:214] QueryVirtualDiskUuid failed for diskPath: \"[DATASTORE] kubevols/kube-dummyDisk.vmdk\". err: ServerFaultCode: Datei [DATASTORE] kubevols/kube-dummyDisk.vmdk wurde nicht gefunden\r\nE1210 13:40:13.097671       1 goroutinemap.go:150] Operation for \"provision-default/testing[1d2167a0-fc81-11e8-bd11-005056968ce7]\" failed. No retries permitted until 2018-12-10 13:40:13.597467328 +0000 UTC m=+3186.860099451 (durationBeforeRetry 500ms). Error: \"recovered from panic \\\"runtime error: index out of range\\\". (err=<nil>) Call stack:\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:72\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:154\\n/usr/local/go/src/runtime/asm_amd64.s:573\\n/usr/local/go/src/runtime/panic.go:502\\n/usr/local/go/src/runtime/panic.go:28\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere_util.go:340\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere.go:1198\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/cloudprovider/providers/vsphere/vsphere.go:1210\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/volume/vsphere_volume/vsphere_volume_util.go:143\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/volume/vsphere_volume/vsphere_volume.go:359\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/controller/volume/persistentvolume/pv_controller.go:1481\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/controller/volume/persistentvolume/pv_controller.go:1369\\n/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/pkg/util/goroutinemap/goroutinemap.go:115\\n/usr/local/go/src/runtime/asm_amd64.s:2361\\n\"\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.5\", GitCommit:\"32ac1c9073b132b8ba18aa830f46b77dcceb0723\", GitTreeState:\"clean\", BuildDate:\"2018-06-21T11:46:00Z\", GoVersion:\"go1.9.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"11\", GitVersion:\"v1.11.3\", GitCommit:\"a4529464e4629c21224b3d52edfe0ea91b072862\", GitTreeState:\"clean\", BuildDate:\"2018-09-09T17:53:03Z\", GoVersion:\"go1.10.3\", Compiler:\"gc\", Platform:\"linux/amd64\"} \r\n```\r\n- Cloud provider or hardware configuration: vSphere\r\n- OS (e.g. from /etc/os-release): n/a\r\n- Kernel (e.g. `uname -a`): n/a\r\n- Install tools: n/a\r\n- Others: n/a\r\n\r\n<!-- DO NOT EDIT BELOW THIS LINE -->\r\n/kind bug",
  "closed_at": "2019-01-29T19:32:16Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71997/comments",
  "created_at": "2018-12-12T15:48:36Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71997/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/71997",
  "id": 390286739,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71997/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzOTAyODY3Mzk=",
  "number": 71997,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Provisioning a PVC using a storage class on vSphere fails with \"runtime error: index out of range\" if the default language on the VMware vCenter Server is not English",
  "updated_at": "2019-01-29T19:32:16Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71997",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/45266242?v=4",
    "events_url": "https://api.github.com/users/ipointffogl/events{/privacy}",
    "followers_url": "https://api.github.com/users/ipointffogl/followers",
    "following_url": "https://api.github.com/users/ipointffogl/following{/other_user}",
    "gists_url": "https://api.github.com/users/ipointffogl/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ipointffogl",
    "id": 45266242,
    "login": "ipointffogl",
    "node_id": "MDQ6VXNlcjQ1MjY2MjQy",
    "organizations_url": "https://api.github.com/users/ipointffogl/orgs",
    "received_events_url": "https://api.github.com/users/ipointffogl/received_events",
    "repos_url": "https://api.github.com/users/ipointffogl/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ipointffogl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ipointffogl/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ipointffogl"
  }
}