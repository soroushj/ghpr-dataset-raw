{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- This form is for bug reports and feature requests ONLY! \r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\nI'm trying to use `PartialObjectMetadataList`, but fallback to JSON if the server doesn't support `PartialObjectMetadataList`.\r\n\r\nRequests with the following Accept headers fail against 1.6, which doesn't support `PartialObjectMetadataList`. They should fall back to JSON.\r\n\r\n```\r\nAccept: application/json;as=PartialObjectMetadataList;v=v1alpha1;g=meta.k8s.io, application/json\r\n```\r\n\r\n```\r\n{\r\n  \"metadata\": {},\r\n  \"status\": \"Failure\",\r\n  \"message\": \"only the following media types are accepted: application/json, application/yaml, application/vnd.kubernetes.protobuf\",\r\n  \"reason\": \"NotAcceptable\",\r\n  \"code\": 406\r\n}\r\n```\r\n\r\nRequests with the following Accept header in 1.7 return JSON, but they should return the more specific type per RFC 7231.\r\n\r\n```\r\nAccept: application/json, application/json;as=PartialObjectMetadataList;v=v1alpha1;g=meta.k8s.io\r\n```\r\n\r\n\r\nhttps://tools.ietf.org/html/rfc7231#section-5.3.2\r\n\r\n```\r\n   Media ranges can be overridden by more specific media ranges or\r\n   specific media types.  If more than one media range applies to a\r\n   given type, the most specific reference has precedence.  For example,\r\n\r\n     Accept: text/*, text/plain, text/plain;format=flowed, */*\r\n\r\n   have the following precedence:\r\n\r\n   1.  text/plain;format=flowed\r\n\r\n   2.  text/plain\r\n\r\n   3.  text/*\r\n\r\n   4.  */*\r\n```\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nThe following command returns an error rather than JSON:\r\n\r\n```\r\n$ curl -k -H 'Accept: application/json;as=BOGUS;v=v1alpha1;g=meta.k8s.io, application/json' https://127.0.0.1:8443/api/v1/namespaces/node/pods\r\n{\r\n  \"metadata\": {},\r\n  \"status\": \"Failure\",\r\n  \"message\": \"only the following media types are accepted: application/json, application/yaml, application/vnd.kubernetes.protobuf\",\r\n  \"reason\": \"NotAcceptable\",\r\n  \"code\": 406\r\n}\r\n```\r\n\r\nThe following command returns the full JSON when it should return only object metadata:\r\n\r\n```\r\n$ curl -k -H 'Accept: application/json, application/json;as=PartialObjectMetadataList;v=v1alpha1;g=meta.k8s.io' https://127.0.0.1:8443/api/v1/namespaces/node/pods\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): kubernetes v1.7.0+695f48a16f\r\n\r\n@liggitt ",
  "closed_at": "2017-12-12T01:57:55Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/50519/comments",
  "created_at": "2017-08-11T13:59:51Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/50519/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/50519",
  "id": 249644416,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/50519/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNDk2NDQ0MTY=",
  "number": 50519,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Content negotiation incorrect when Accept header uses type parameters",
  "updated_at": "2017-12-12T01:57:55Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/50519",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1167259?v=4",
    "events_url": "https://api.github.com/users/spadgett/events{/privacy}",
    "followers_url": "https://api.github.com/users/spadgett/followers",
    "following_url": "https://api.github.com/users/spadgett/following{/other_user}",
    "gists_url": "https://api.github.com/users/spadgett/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/spadgett",
    "id": 1167259,
    "login": "spadgett",
    "node_id": "MDQ6VXNlcjExNjcyNTk=",
    "organizations_url": "https://api.github.com/users/spadgett/orgs",
    "received_events_url": "https://api.github.com/users/spadgett/received_events",
    "repos_url": "https://api.github.com/users/spadgett/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/spadgett/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spadgett/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/spadgett"
  }
}