{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n\r\n**What happened**:\r\nFollowing warning happened at the sequence of operationExecutor.UnmountDevice for detached/unmounted case.\r\n\r\n```\r\nI0726 18:15:48.627901   23682 reconciler.go:283] operationExecutor.UnmountDevice started for volume \"pv0001\" (UniqueName: \"kubernetes.io/fc/[50060e801049cfd1]\") on node \"127.0.0.1\" \r\nW0726 18:15:48.628954   23682 mount.go:144] could not determine device for path: \"/var/lib/kubelet/plugins/kubernetes.io/fc/50060e801049cfd1-lun-0\"\r\nW0726 18:15:48.629015   23682 util.go:108] Warning: \"/var/lib/kubelet/plugins/kubernetes.io/fc/50060e801049cfd1-lun-0\" is not a mountpoint, deleting\r\n```\r\n\r\nFrom my quick investigation, it seems that unmount operation for global mount should be done by reconciler.go instead of executing inside the FC Plugin since attacher/detacher for FC plugin was merged recently.\r\n\r\nDetail log: Pod deletion\r\n```\r\n# tail -f /tmp/kubelet.log\r\n...\r\nI0726 18:15:46.323763   23682 kubelet.go:1772] SyncLoop (DELETE, \"api\"): \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\"\r\nI0726 18:15:46.324160   23682 kuberuntime_container.go:575] Killing container \"docker://b37b71254f47a11a701864a27b24ec1cdfa3002ce46ddc0f5aff23280856ed4a\" with 30 second grace period\r\nI0726 18:15:47.285139   23682 qos_container_manager_linux.go:279] [ContainerManager]: Updated QoS cgroup configuration\r\nI0726 18:15:47.316003   23682 kubelet.go:1790] SyncLoop (PLEG): \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\", event: &pleg.PodLifecycleEvent{ID:\"e7f98a41-724f-11e7-b450-f8bc12550954\", Type:\"ContainerDied\", Data:\"b37b71254f47a11a701864a27b24ec1cdfa3002ce46ddc0f5aff23280856ed4a\"}\r\nI0726 18:15:47.316100   23682 kubelet.go:1790] SyncLoop (PLEG): \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\", event: &pleg.PodLifecycleEvent{ID:\"e7f98a41-724f-11e7-b450-f8bc12550954\", Type:\"ContainerDied\", Data:\"e64c821ee61d45014fb293919dd43733d38effbd84c78347d52fcf893a41492f\"}\r\nW0726 18:15:47.316182   23682 pod_container_deletor.go:77] Container \"e64c821ee61d45014fb293919dd43733d38effbd84c78347d52fcf893a41492f\" not found in pod's containers\r\nI0726 18:15:47.321292   23682 qos_container_manager_linux.go:279] [ContainerManager]: Updated QoS cgroup configuration\r\nE0726 18:15:47.879827   23682 kubelet_volumes.go:128] Orphaned pod \"9799ca97-7188-11e7-bde0-f8bc12550954\" found, but volume paths are still present on disk : There were a total of 1 errors similar to this.  Turn up verbosity to see them.\r\nI0726 18:15:48.330695   23682 qos_container_manager_linux.go:279] [ContainerManager]: Updated QoS cgroup configuration\r\nI0726 18:15:48.337701   23682 kubelet.go:1772] SyncLoop (DELETE, \"api\"): \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\"\r\nI0726 18:15:48.366592   23682 kubelet.go:1766] SyncLoop (REMOVE, \"api\"): \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\"\r\nI0726 18:15:48.366678   23682 kubelet.go:1949] Failed to delete pod \"nginx-pod1_default(e7f98a41-724f-11e7-b450-f8bc12550954)\", err: pod not found\r\nI0726 18:15:48.527341   23682 reconciler.go:186] operationExecutor.UnmountVolume started for volume \"default-token-6s523\" (UniqueName: \"kubernetes.io/secret/e7f98a41-724f-11e7-b450-f8bc12550954-default-token-6s523\") pod \"e7f98a41-724f-11e7-b450-f8bc12550954\" (UID: \"e7f98a41-724f-11e7-b450-f8bc12550954\") \r\nI0726 18:15:48.527456   23682 reconciler.go:186] operationExecutor.UnmountVolume started for volume \"data\" (UniqueName: \"kubernetes.io/fc/[50060e801049cfd1]\") pod \"e7f98a41-724f-11e7-b450-f8bc12550954\" (UID: \"e7f98a41-724f-11e7-b450-f8bc12550954\") \r\nI0726 18:15:48.533847   23682 operation_generator.go:527] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/secret/e7f98a41-724f-11e7-b450-f8bc12550954-default-token-6s523\" (OuterVolumeSpecName: \"default-token-6s523\") pod \"e7f98a41-724f-11e7-b450-f8bc12550954\" (UID: \"e7f98a41-724f-11e7-b450-f8bc12550954\"). InnerVolumeSpecName \"default-token-6s523\". PluginName \"kubernetes.io/secret\", VolumeGidValue \"\"\r\nI0726 18:15:48.544697   23682 operation_generator.go:527] UnmountVolume.TearDown succeeded for volume \"kubernetes.io/fc/[50060e801049cfd1]\" (OuterVolumeSpecName: \"data\") pod \"e7f98a41-724f-11e7-b450-f8bc12550954\" (UID: \"e7f98a41-724f-11e7-b450-f8bc12550954\"). InnerVolumeSpecName \"pv0001\". PluginName \"kubernetes.io/fc\", VolumeGidValue \"\"\r\nI0726 18:15:48.627737   23682 reconciler.go:290] Volume detached for volume \"default-token-6s523\" (UniqueName: \"kubernetes.io/secret/e7f98a41-724f-11e7-b450-f8bc12550954-default-token-6s523\") on node \"127.0.0.1\" DevicePath \"\"\r\nI0726 18:15:48.627901   23682 reconciler.go:283] operationExecutor.UnmountDevice started for volume \"pv0001\" (UniqueName: \"kubernetes.io/fc/[50060e801049cfd1]\") on node \"127.0.0.1\" \r\nW0726 18:15:48.628954   23682 mount.go:144] could not determine device for path: \"/var/lib/kubelet/plugins/kubernetes.io/fc/50060e801049cfd1-lun-0\"\r\nW0726 18:15:48.629015   23682 util.go:108] Warning: \"/var/lib/kubelet/plugins/kubernetes.io/fc/50060e801049cfd1-lun-0\" is not a mountpoint, deleting\r\nI0726 18:15:48.629127   23682 operation_generator.go:608] UnmountDevice succeeded for volume \"pv0001\" (UniqueName: \"kubernetes.io/fc/[50060e801049cfd1]\") on node \"127.0.0.1\" \r\nI0726 18:15:48.728201   23682 reconciler.go:290] Volume detached for volume \"pv0001\" (UniqueName: \"kubernetes.io/fc/[50060e801049cfd1]\") on node \"127.0.0.1\" DevicePath \"\"\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nGlobal unmount will be finished without any warning messages.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n- Create PV with FC volume plugin\r\n- Create PVC which claims FC Volume\r\n- Create a Pod with above PVC\r\n- Delete the Pod\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): Latest master",
  "closed_at": "2017-07-28T15:15:06Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49669/comments",
  "created_at": "2017-07-26T23:35:21Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49669/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/49669",
  "id": 245884770,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49669/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNDU4ODQ3NzA=",
  "number": 49669,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "FC volume plugin shouldn't unmount global mount point at TeadDown sequence",
  "updated_at": "2017-07-28T15:15:06Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49669",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/19844283?v=4",
    "events_url": "https://api.github.com/users/mtanino/events{/privacy}",
    "followers_url": "https://api.github.com/users/mtanino/followers",
    "following_url": "https://api.github.com/users/mtanino/following{/other_user}",
    "gists_url": "https://api.github.com/users/mtanino/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mtanino",
    "id": 19844283,
    "login": "mtanino",
    "node_id": "MDQ6VXNlcjE5ODQ0Mjgz",
    "organizations_url": "https://api.github.com/users/mtanino/orgs",
    "received_events_url": "https://api.github.com/users/mtanino/received_events",
    "repos_url": "https://api.github.com/users/mtanino/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mtanino/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mtanino/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mtanino"
  }
}