{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/647318?v=4",
    "events_url": "https://api.github.com/users/lavalamp/events{/privacy}",
    "followers_url": "https://api.github.com/users/lavalamp/followers",
    "following_url": "https://api.github.com/users/lavalamp/following{/other_user}",
    "gists_url": "https://api.github.com/users/lavalamp/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lavalamp",
    "id": 647318,
    "login": "lavalamp",
    "node_id": "MDQ6VXNlcjY0NzMxOA==",
    "organizations_url": "https://api.github.com/users/lavalamp/orgs",
    "received_events_url": "https://api.github.com/users/lavalamp/received_events",
    "repos_url": "https://api.github.com/users/lavalamp/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lavalamp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lavalamp/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lavalamp"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/647318?v=4",
      "events_url": "https://api.github.com/users/lavalamp/events{/privacy}",
      "followers_url": "https://api.github.com/users/lavalamp/followers",
      "following_url": "https://api.github.com/users/lavalamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/lavalamp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lavalamp",
      "id": 647318,
      "login": "lavalamp",
      "node_id": "MDQ6VXNlcjY0NzMxOA==",
      "organizations_url": "https://api.github.com/users/lavalamp/orgs",
      "received_events_url": "https://api.github.com/users/lavalamp/received_events",
      "repos_url": "https://api.github.com/users/lavalamp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lavalamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lavalamp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lavalamp"
    }
  ],
  "author_association": "MEMBER",
  "body": "/kind feature\r\n/sig api-machinery\r\n\r\n@lavalamp @deads2k do you think this feature request needs a KEP, or can we view it as completing https://github.com/kubernetes/community/pull/896?\r\n\r\n## Motivation\r\n\r\nKubernetes supports API chunking on LIST requests. It allows a large LIST response to be broken into smaller, consistent partial responses. Consistency here means that all the partial responses is for a single resource version. However, apiservers instruct etcd to delete old versions every [5 minutes](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/storagebackend/config.go#L31), so if a client cannot complete all the chunks in 5 minutes, the late requests will fail with \u201cresource version too old\u201d error.\r\n\r\nAs listed in the API chunking [proposal](https://github.com/kubernetes/community/pull/896/files), some clients care more about getting a lexically complete list than getting a consistent list. That is, when a \u201cresource version too old\u201d error happens, the client wants to continue the list from the next key (in kubernetes case, keys are lexically ordered), with the latest resource version. Such clients include `kubectl get` and migration style commands (e.g., those rewrite data in etcd from json to proto; or convert the Kubernetes API version of the data in etcd).\r\n\r\n## Proposal\r\nAdding a `BeginningName` and a `BeginningNamespace` to the ListOptions. They can be used with or without chunking.\r\n\r\n```golang\r\nListOptions {\r\n\t\u2026\r\n\tBeginningNamespace string\r\n\tBeginningName string\r\n}\r\n```\r\n\r\nLet's walk through a few cases:\r\n```\r\n1. Path: /api/v1/pods\r\n\r\nListOptions {\r\n\t// Required, i.e., cannot be \u201c\u201d.\r\n\tBeginningNamespace: \u201cstaging\u201d,\r\n\t// Required\r\n\tBeginningName: \u201ca\u201d,\r\n}\r\n\r\nResults: apiserver starts listing pods whose key in etcd is lexically greater than \u201cstaging/a\u201d\r\n\r\n\r\n2. Path: /api/v1/namespaces/{namespace}/pods\r\n\r\nListOptions {\r\n\t// Required, must match the namespace in the path.\r\n\tBeginningNamespace: \u201cstaging\u201d,\r\n\t// Required\r\n\tBeginningName: \u201ca\u201d,\r\n}\r\n\r\nResults: apiserver starts listing pods whose key in etcd is prefixed with \u201cstaging/\u201d and lexically greater than \u201cstaging/a\u201d.\r\n\r\n3. Path: /api/v1/nodes (nodes are cluster-scoped):\r\n\r\nListOptions {\r\n\t// Must be \u201c\u201d\r\n\tBeginningNamespace: \u201c\u201d,\r\n\t// Required\r\n\tBeginningName: \u201ca\u201d,\r\n}\r\n\r\nResults: apiserver starts listing nodes whose key in etcd is lexically greater than \u201ca\u201d\r\n\r\n4. Path: N/A\r\n\r\nListOptions: {\r\n\tLimit: 50,\r\n\tContinue: \u201csome_value\u201d, \r\n\t// Must be empty\r\n\tBeginningNamespace: \u201c\u201d,\r\n\t// Must be empty\r\n\tBeginningName: \u201c\u201d,\r\n}\r\n\r\nResults: apiserver behaves the same as it currently does, sending back results based on the continue token.\r\n\r\n5. Path: N/A\r\n\r\nListOptions: {\r\n\tLimit: 50\r\n\tContinue: \u201c\u201d, \r\n\tBeginningNamespace: \u201cstaging\u201d,\r\n\tBeginningName: \u201ca\u201d,\r\n}\r\n\r\nResults: apiserver returns no more than 50 elements whose etcd key is lexically greater than \u201cstaging/a\u201d. \r\nIf there are more elements, apiserver sends back a continue token. To continue the consistent chunking, the client should continue with\r\n\r\nListOptions: {\r\n\tLimit: 50\r\n\tContinue: <token sent back by the apiserver>, \r\n\t// Must be empty\t\r\n\tBeginningNamespace: \u201c\u201d,\r\n\t// Must be empty\r\n\tBeginningName: \u201c\u201d,\r\n}\r\n```\r\n\r\n## Security implications\r\nCurrently Kubernetes supports two kind of LIST access control:\r\n1. Giving a user permissions to list a resource in all namespaces\r\n2. Giving a user permissions to list a resource in specific namespaces\r\n\r\nFor 1, the user already has the highest possible permission.\r\nFor 2, because \u201cBeginningNamespace\u201d must match the namespace in path, the \u201clist from a key\u201d feature doesn\u2019t break today\u2019s security model.",
  "closed_at": "2018-09-01T03:41:37Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 10,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66981/comments",
  "created_at": "2018-08-04T02:28:55Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66981/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/66981",
  "id": 347578409,
  "labels": [
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66981/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNDc1Nzg0MDk=",
  "number": 66981,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Support LIST starting from a key",
  "updated_at": "2018-09-01T03:41:37Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66981",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/2823529?v=4",
    "events_url": "https://api.github.com/users/caesarxuchao/events{/privacy}",
    "followers_url": "https://api.github.com/users/caesarxuchao/followers",
    "following_url": "https://api.github.com/users/caesarxuchao/following{/other_user}",
    "gists_url": "https://api.github.com/users/caesarxuchao/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/caesarxuchao",
    "id": 2823529,
    "login": "caesarxuchao",
    "node_id": "MDQ6VXNlcjI4MjM1Mjk=",
    "organizations_url": "https://api.github.com/users/caesarxuchao/orgs",
    "received_events_url": "https://api.github.com/users/caesarxuchao/received_events",
    "repos_url": "https://api.github.com/users/caesarxuchao/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/caesarxuchao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/caesarxuchao/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/caesarxuchao"
  }
}