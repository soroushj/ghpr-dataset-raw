{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1745006?v=4",
    "events_url": "https://api.github.com/users/jsafrane/events{/privacy}",
    "followers_url": "https://api.github.com/users/jsafrane/followers",
    "following_url": "https://api.github.com/users/jsafrane/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsafrane/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jsafrane",
    "id": 1745006,
    "login": "jsafrane",
    "node_id": "MDQ6VXNlcjE3NDUwMDY=",
    "organizations_url": "https://api.github.com/users/jsafrane/orgs",
    "received_events_url": "https://api.github.com/users/jsafrane/received_events",
    "repos_url": "https://api.github.com/users/jsafrane/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jsafrane/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsafrane/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jsafrane"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/1745006?v=4",
      "events_url": "https://api.github.com/users/jsafrane/events{/privacy}",
      "followers_url": "https://api.github.com/users/jsafrane/followers",
      "following_url": "https://api.github.com/users/jsafrane/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsafrane/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jsafrane",
      "id": 1745006,
      "login": "jsafrane",
      "node_id": "MDQ6VXNlcjE3NDUwMDY=",
      "organizations_url": "https://api.github.com/users/jsafrane/orgs",
      "received_events_url": "https://api.github.com/users/jsafrane/received_events",
      "repos_url": "https://api.github.com/users/jsafrane/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jsafrane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsafrane/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jsafrane"
    }
  ],
  "author_association": "MEMBER",
  "body": "This is continuation of #48438 and #48936.\r\n\r\n**What happened**:\r\nWhen StorageClass refers to a key that is not accessible to Kubernetes (i.e. AWS API returns AccessDeniedException), AWS plugin still tries to provision a volume under assumption that while Kubernetes can't access the key, the other components may access it and create the volume and attach it to a node later.\r\n\r\nRelated code is [here](https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/aws/aws.go#L2205) - `checkEncryptionKey` checks only for `NotFoundException`. Other errors are just logged and provisioning continues.\r\n\r\nProblem is that when AWS really can't access the key, it **will** provision some volume (ec2.CreateVolume returns success + valid AWS EBS), but this AWS EBS disappears after few seconds. Therefore Kubernetes does not know that something went wrong and creates a PV for the returned EBS. Kubernetes later fails to run a pod that refers to such PV, because the PV does not exist.\r\n\r\n**What you expected to happen**:\r\nKubernetes must not create PV in this case and must report error during provisioning of such volume.\r\n\r\nIdeas:\r\n\r\n* According to [AWS documentation](https://docs.aws.amazon.com/kms/latest/developerguide/services-ebs.html), the only signal that AWS produces is an event in Amazon CloudWatch Events that a key could not be used for encryption. Kubernetes AWS cloud provider is not subscribed to these events and does not get this notification. We would need new permission for controller-manager to get the events and some new code to filter them and report back to user.\r\n\r\n* Kubernetes AWS cloud provider could wait for X seconds and re-check that created volume still exists and did not disappear because of inaccessible key. What would be reliable value of X?\r\n\r\n* Kubernetes volume plugin for AWS could return both a warning \"I failed to check encryption key, created volume may not work\" that would be propagated to user **and** the suspicious volume at the same time, but the API between volume plugins and Kubernetes allows only one - either error or volume. It could be extended, still the user experience would be suboptimal.\r\n\r\n* Kubernetes could send an error to user during volume attach (!) that a volume does not exist, please check your KMS key permissions. Again, UX is quite bad here.\r\n\r\n/kind bug\r\n/sig aws",
  "closed_at": "2018-06-22T02:48:10Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 15,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62171/comments",
  "created_at": "2018-04-05T15:57:19Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62171/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/62171",
  "id": 311670282,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62171/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMTE2NzAyODI=",
  "number": 62171,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "AWS does not fail when provisioning a volume encrypted with inaccessible KSM key.",
  "updated_at": "2018-06-22T02:48:10Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62171",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1745006?v=4",
    "events_url": "https://api.github.com/users/jsafrane/events{/privacy}",
    "followers_url": "https://api.github.com/users/jsafrane/followers",
    "following_url": "https://api.github.com/users/jsafrane/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsafrane/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jsafrane",
    "id": 1745006,
    "login": "jsafrane",
    "node_id": "MDQ6VXNlcjE3NDUwMDY=",
    "organizations_url": "https://api.github.com/users/jsafrane/orgs",
    "received_events_url": "https://api.github.com/users/jsafrane/received_events",
    "repos_url": "https://api.github.com/users/jsafrane/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jsafrane/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsafrane/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jsafrane"
  }
}