{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind feature\r\n\r\n**What happened**:\r\n\r\nIf you create CR shorty after CRD, it can happen that it returns error that CRD doesn't exists, even if it exists and is Established.\r\n\r\nRelevant issue for this problem #57042, where this happened on the cluster with limited resources while deploying Istio. This one describes age `<invalid>` more, but could is relevant to the problem. For earlier research, check out https://github.com/kubernetes/kubernetes/issues/57042#issuecomment-372677121.\r\n\r\n**What you expected to happen**:\r\n\r\nCR creation success if CRD is Established.\r\n\r\n**Anything else we need to know?**:\r\n\r\nWith the current implementation, we have the following steps when creating and establishing the CRD:\r\n* Naming controller sets the `NamesAccepted` status.\r\n* Naming controller sets the `Established` status shortly after (synchronously without roundtripping to the apiserver).\r\n\r\nAfter some time, the following happens:\r\n* Informer gets notified that Established is true.\r\n* Some CR request is sent (e.g. by the user code) and received by the CR handler (e.g. `ServeHTTP`). It calls the lister to make sure CRD is Established.\r\n\r\nHowever, we think there can be a race condition here, which causes the above described issue.\r\nWhat can happen, is that the Established becomes true, CR request comes in, the lister is called, but the informer hasn't got the UPDATE event, and therefore, Established is not true in the lister memory cache. In that case, the request is rejected even if Established is set to true, and we get the described issue.\r\n\r\nThe potential fix could be to change the workflow little bit. Instead of `NamesAccpeted`=> `Established`, we want to add another status, `Installing`, which would happen after `NamesAccpeted`. By the implementation idea, once `Installation` is set to true, it can't be turned to false (maybe just when it's time to turn it into `Established`), unlike the `NamesAccepted` status.\r\n\r\nThen, we would turn CRD into `Established` in the UPDATE event handler for CR handlers, e.g. in the [updateCustomResourceDefinition handler](https://github.com/kubernetes/kubernetes/blob/df7f96fc209cabf73eeb4fa29bf4cbbabe3a2f4d/staging/src/k8s.io/apiextensions-apiserver/pkg/apiserver/customresource_handler.go#L294).\r\n\r\nAlso, we want to make `ServeHTTP` for CR to answer the request when the CRD is still in `Installing`, but not `Established` state, e.g. by [changing this part of the code](https://github.com/kubernetes/kubernetes/blob/df7f96fc209cabf73eeb4fa29bf4cbbabe3a2f4d/staging/src/k8s.io/apiextensions-apiserver/pkg/apiserver/customresource_handler.go#L183).\r\n\r\nThis can be further improved for HA environments if we get an HA checkpointing algorithm, so we can extend to logic to only set Established when all API servers have seen installing.\r\n\r\nI'll be working on fixing this one, so this issue is a placeholder for further discussions on the approach until I open the PR. If you have any suggestion, please let me know.\r\n\r\n/cc deads2k sttts\r\n/sig api-machinery\r\n/area custom-resources\r\n",
  "closed_at": "2018-05-29T13:58:14Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62725/comments",
  "created_at": "2018-04-17T11:33:53Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62725/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/62725",
  "id": 315019693,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 556590057,
      "name": "area/custom-resources",
      "node_id": "MDU6TGFiZWw1NTY1OTAwNTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/custom-resources"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62725/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMTUwMTk2OTM=",
  "number": 62725,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Improve Establishing logic for CRDs by implementing Installing status to prevent race conditions",
  "updated_at": "2018-05-29T13:58:14Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62725",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/18719127?v=4",
    "events_url": "https://api.github.com/users/xmudrii/events{/privacy}",
    "followers_url": "https://api.github.com/users/xmudrii/followers",
    "following_url": "https://api.github.com/users/xmudrii/following{/other_user}",
    "gists_url": "https://api.github.com/users/xmudrii/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/xmudrii",
    "id": 18719127,
    "login": "xmudrii",
    "node_id": "MDQ6VXNlcjE4NzE5MTI3",
    "organizations_url": "https://api.github.com/users/xmudrii/orgs",
    "received_events_url": "https://api.github.com/users/xmudrii/received_events",
    "repos_url": "https://api.github.com/users/xmudrii/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/xmudrii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xmudrii/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/xmudrii"
  }
}