{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "Within a Kubernetes cluster each node runs a service proxy that will round robin load balance requests to the various pods within the cluster.  Currently there is no mechanism to maintain session affinity for applications that require sticky sessions.  To enable session affinity we need to modify the load balancer resides within each node's service proxy to direct requests to specific endpoints based on a client IP address (future enhancement would be to support cookie based session ID). \n\nFrom a high level, I propose the following changes to enable support for session affinity.  \n\n``` go\n// Session Affinity Type string\ntype AffinityType string\n\nconst (\n    // AffinityTypeClientIP is the Client IP based.\n    AffinityTypeClientIP AffinityType = \"CLIENT-IP\"\n    // AffinityTypeNone - no session affinity.\n    AffinityTypeNone AffinityType = \"NONE\"\n)\n type ServiceSpec struct {\n \u2026\u2026 \n SessionAffinity *AffinityType \n}\n```\n1. Add SessionAffinity to ServiceSpec in api.types (I welcome better object names):\n2. Add a map, serviceDtlMap to the LoadBalanacerRR strcut in roundrobin.go.  \n   1. The serviceDtlMap will be a map whose key is the service name and value will be a new type called serviceDetail.  The serviceDetail struct will hold information about the session affinity settings (is it enabled and the type of session affinity - cookie or client IP) along with a map of ssessionAffinityMap. \n   2. The sessionAffinityMap will have a key that is either the clientIP or the cookie and the value will a new type called sessionAffinityDetail.\n   3. The sessionAffinityDetail struct will hold the client IP address, the session cookie, the endpoint url and the last used date and time (last used DTTM will be used for cleaning up old records).\n3. Modify the OnUpdate method in roundrobin.go to also update the LoadBalancerRR.sessionAffinityMap when new services or endpoints are added or removed.\n4. Alter LoadBalancerRR NextEndpoint method (roundrobin.go) to first check the session affinity map for an endpoint based on either the cookie or the client ip address (based on preference in step 1 above).  If an endpoint exists for this request, then return that endpoint - otherwise continue with the existing flow of selecting next endpoint and then add this endpoint to the sessionAffnityMap.\n5. Add a background task to clean up stale session affinity records based on some life time setting (say 30 or 60 minutes of inactivity).\n\nNote that the external load balancer will also require some form of session affinity, otherwise it could send a client request to node who's service proxy does not have a record for the client in it's session affinity map.\n",
  "closed_at": "2014-12-30T23:45:28Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/6004328?v=4",
    "events_url": "https://api.github.com/users/foleymic/events{/privacy}",
    "followers_url": "https://api.github.com/users/foleymic/followers",
    "following_url": "https://api.github.com/users/foleymic/following{/other_user}",
    "gists_url": "https://api.github.com/users/foleymic/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/foleymic",
    "id": 6004328,
    "login": "foleymic",
    "node_id": "MDQ6VXNlcjYwMDQzMjg=",
    "organizations_url": "https://api.github.com/users/foleymic/orgs",
    "received_events_url": "https://api.github.com/users/foleymic/received_events",
    "repos_url": "https://api.github.com/users/foleymic/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/foleymic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/foleymic/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/foleymic"
  },
  "comments": 11,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/2867/comments",
  "created_at": "2014-12-11T18:52:26Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/2867/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/2867",
  "id": 51723265,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Indicates an issue on api area.",
      "id": 125063986,
      "name": "area/api",
      "node_id": "MDU6TGFiZWwxMjUwNjM5ODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/api"
    },
    {
      "color": "fef2c0",
      "default": false,
      "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done.",
      "id": 149621825,
      "name": "priority/awaiting-more-evidence",
      "node_id": "MDU6TGFiZWwxNDk2MjE4MjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/awaiting-more-evidence"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/2867/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTcyMzI2NQ==",
  "number": 2867,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Feature - Add support for session affinity (aka sticky sessions)",
  "updated_at": "2017-10-03T06:21:16Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/2867",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/6004328?v=4",
    "events_url": "https://api.github.com/users/foleymic/events{/privacy}",
    "followers_url": "https://api.github.com/users/foleymic/followers",
    "following_url": "https://api.github.com/users/foleymic/following{/other_user}",
    "gists_url": "https://api.github.com/users/foleymic/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/foleymic",
    "id": 6004328,
    "login": "foleymic",
    "node_id": "MDQ6VXNlcjYwMDQzMjg=",
    "organizations_url": "https://api.github.com/users/foleymic/orgs",
    "received_events_url": "https://api.github.com/users/foleymic/received_events",
    "repos_url": "https://api.github.com/users/foleymic/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/foleymic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/foleymic/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/foleymic"
  }
}