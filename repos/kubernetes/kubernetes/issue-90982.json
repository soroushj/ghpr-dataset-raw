{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/6206907?v=4",
    "events_url": "https://api.github.com/users/mrobson/events{/privacy}",
    "followers_url": "https://api.github.com/users/mrobson/followers",
    "following_url": "https://api.github.com/users/mrobson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrobson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mrobson",
    "id": 6206907,
    "login": "mrobson",
    "node_id": "MDQ6VXNlcjYyMDY5MDc=",
    "organizations_url": "https://api.github.com/users/mrobson/orgs",
    "received_events_url": "https://api.github.com/users/mrobson/received_events",
    "repos_url": "https://api.github.com/users/mrobson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mrobson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrobson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mrobson"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/6206907?v=4",
      "events_url": "https://api.github.com/users/mrobson/events{/privacy}",
      "followers_url": "https://api.github.com/users/mrobson/followers",
      "following_url": "https://api.github.com/users/mrobson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrobson/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mrobson",
      "id": 6206907,
      "login": "mrobson",
      "node_id": "MDQ6VXNlcjYyMDY5MDc=",
      "organizations_url": "https://api.github.com/users/mrobson/orgs",
      "received_events_url": "https://api.github.com/users/mrobson/received_events",
      "repos_url": "https://api.github.com/users/mrobson/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mrobson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrobson/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mrobson"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\nThe issue stems from use cases were 1 initiator is used for multiple LUNs. Because of this, all of the LUNs are discovered and mapped on a node when it does its initial discovery / login via AttachDisk[1]. Because a pod never mounts the device on any of the other nodes, it is never removed.\r\n\r\n[1] https://github.com/kubernetes/kubernetes/blob/release-1.18/pkg/volume/iscsi/iscsi_util.go#L279\r\n\r\nIn situations where LUN numbers can be reused, it\u2019s possible to hit the below race condition where a new LUN reattaches to a faulty multipath device created for a previous LUN of the same number.\r\n\r\n**What you expected to happen**:\r\nOnly the required LUN should be discovered and mounted.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nAssume we start from an empty environment using Node A and B. An empty environment is not a requirement, it just makes it visually easier.\r\n\r\n1) User A creates a PVC, the PV and LUN1 are dynamically provisioned and mounted by the pod on Node A. Node A does an iscsiadm login (in addition to other things) and scans for the scsi devices, adds them to the multipath devicemap and attaches to /dev/dm-XX.\r\n\r\n2) User B creates a second PVC, the PV and LUN2 are dynamically provisioned and mounted by the pod on Node B. Node B does an iscsiadm login (in addition to other things) and scans for the scsi devices, adds them to the multipath devicemap and attaches to a /dev/dm-XX device. This process finds both LUN1 and LUN2 and creates multipath devicemaps and devices for both of them.\r\n\r\n3) User A creates a PVC, the PV and LUN3 are dynamically provisioned and mounted by the pod on Node A. Node A is already logged in because of LUN1 so it just scans for the new LUN, adds it to a multipath devicemap and attaches to a /dev/dm-XX device.\r\n\r\nAt this point:\r\nNode A knows about LUN1 and has it mounted and LUN3 and has it mounted\r\nNode B knows about LUN1 and LUN2 but only has LUN2 mounted\r\n\r\n4) User A deletes their first pod and PVC from Node A. This triggers an unmount and the flushing and removal of the multipath device and underlying block devices on Node A. This deletes LUN1 on the backend. Because the pod was only running on Node A, the unmount and removal procedures do nothing for the discovered LUN1 and its devices on Node B. The multipath device for LUN1 on Node B loses its paths and goes into a faulty state.\r\n\r\n5) User C creates a PVC, the PV and LUN1 (reused number) are dynamically provisioned and mounted by the pod on Node B. Node B is already logged in because of LUN2 and it already knows about LUN1 as it was discovered when LUN2 came along. In this case, LUN1 is reattached to the old multipath device and block devices from the previously deleted LUN1. This is when we see the LUN assignment / remap warning:\r\n\r\nEx:\r\nMay  5 10:02:58 server kernel: sd 40:0:0:29: Warning! Received an indication that the LUN assignments on this target have changed. The Linux SCSI layer does not automatical\r\n\r\n6) Kubernetes tries to mount the multipath device to its pod and, based on our testing, sees a variety of possible issues, depending on what kind of leftover data is visible. These range from fixable fsck file system issues, fsck failures and complete disk formatting failures.\r\n\r\nThe other primary issue we see is where there are PVC size mismatches and non fatal fsck fixes. If LUN1 was originally 1GB, the multipath and block devices reflect that. If the new PVC asked for 5GB, LUN1 is 5GB, but when it reconnects, the user only sees the previous 1GB devices. The reverse is also true where you could request 1GB and end up with the old 5GB block devices which results in formatting errors.\r\n\r\n**Anything else we need to know?**:\r\nThe race condition is somewhat uncommon and depends on LUN number reuse and WWID stings. As the number of LUNs grow and as more servers are restarted for patching etc.. there will be a great and greater chance of people hitting this as churn occurs.\r\n\r\nThe other big issue which is independent of hitting the above race condition  is the performance impact and stability of the server. Having a few hundred extra devices is not ideal, but the bigger issue looks to be the constant failed i/o\u2019s and multipathd path down checks for LUNs which have been removed and remapped.\r\n\r\n**Environment**: kubernetes\r\n- Kubernetes version (use `kubectl version`): master\r\n- Cloud provider or hardware configuration: all\r\n- OS (e.g: `cat /etc/os-release`): all\r\n- Kernel (e.g. `uname -a`): all\r\n",
  "closed_at": "2020-05-20T23:45:16Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90982/comments",
  "created_at": "2020-05-11T15:19:01Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90982/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/90982",
  "id": 615967680,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90982/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MTU5Njc2ODA=",
  "number": 90982,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Automatic session scanning discovers all iSCSI devices during login and can cause LUN assignment issues",
  "updated_at": "2020-05-20T23:45:16Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90982",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/6206907?v=4",
    "events_url": "https://api.github.com/users/mrobson/events{/privacy}",
    "followers_url": "https://api.github.com/users/mrobson/followers",
    "following_url": "https://api.github.com/users/mrobson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mrobson/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mrobson",
    "id": 6206907,
    "login": "mrobson",
    "node_id": "MDQ6VXNlcjYyMDY5MDc=",
    "organizations_url": "https://api.github.com/users/mrobson/orgs",
    "received_events_url": "https://api.github.com/users/mrobson/received_events",
    "repos_url": "https://api.github.com/users/mrobson/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mrobson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mrobson/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mrobson"
  }
}