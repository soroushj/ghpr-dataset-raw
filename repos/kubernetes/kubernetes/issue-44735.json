{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): FEATURE REQUEST\r\n\r\n**Kubernetes version** (use `kubectl version`): 1.6.1\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**: openstack\r\n- **OS** (e.g. from /etc/os-release): centos7\r\n\r\n**What happened**:\r\n\r\nWe have openstack environment with three different zones, called as `zone-1`, `zone-2` and `zone-3`. The problem with current storageclass is that it does not support any random method to provision storages to different zones. Like mentioned here https://github.com/kubernetes/kubernetes/issues/35695#issuecomment-277165783 other classes have some support to that. In openstack if we do not define availability zone, it will always use zone called `nova`.\r\n\r\nExample: We want provision mysql galera 3 node cluster, that we have one node in each zone. That is impossible with kubernetes currently because we need to always defined in which zone our storageclass is pointing.\r\n\r\n```\r\nkind: StorageClass\r\napiVersion: storage.k8s.io/v1beta1\r\nmetadata:\r\n  name: zone1\r\nprovisioner: kubernetes.io/cinder\r\nparameters:\r\n  availability: zone-1\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\r\n  name: galera\r\n  labels:\r\n    app: mysql\r\nspec:\r\n  ports:\r\n  - port: 3306\r\n    name: mysql\r\n  clusterIP: None\r\n  selector:\r\n    app: mysql\r\n---\r\napiVersion: apps/v1beta1\r\nkind: StatefulSet\r\nmetadata:\r\n  name: mysql\r\nspec:\r\n  serviceName: \"galera\"\r\n  replicas: 3\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: mysql\r\n      annotations:\r\n        pod.alpha.kubernetes.io/initialized: \"true\"\r\n    spec:\r\n      containers:\r\n      - name: mysql\r\n        image: adfinissygroup/k8s-mariadb-galera-centos:v002\r\n        imagePullPolicy: Always\r\n        ports:\r\n        - containerPort: 3306\r\n          name: mysql\r\n        - containerPort: 4444\r\n          name: sst\r\n        - containerPort: 4567\r\n          name: replication\r\n        - containerPort: 4568\r\n          name: ist\r\n        readinessProbe:\r\n          exec:\r\n            command:\r\n            - /usr/share/container-scripts/mysql/readiness-probe.sh\r\n          initialDelaySeconds: 15\r\n          timeoutSeconds: 5\r\n        volumeMounts:\r\n        - name: datadir\r\n          mountPath: /var/lib/mysql\r\n        env:\r\n          - name: POD_NAMESPACE\r\n            valueFrom:\r\n              fieldRef:\r\n                apiVersion: v1\r\n                fieldPath: metadata.namespace\r\n  volumeClaimTemplates:\r\n  - metadata:\r\n      name: datadir\r\n      annotations:\r\n       volume.beta.kubernetes.io/storage-class: zone1\r\n    spec:\r\n      accessModes: [ \"ReadWriteOnce\" ]\r\n      resources:\r\n        requests:\r\n          storage: 2Gi\r\n```\r\n\r\nThere are actually two problems in this yaml: 1) storageclass zone name must be hardcoded, we do not have way to spread statefulset to multiple AZs. 2) openstack plugin do not have skill to read in which zone PVC is located. If I will execute this yaml, all pvcs are created to zone-1 but it might be that some stateful pods are going to zone-2 or to zone-3.\r\n\r\n**What you expected to happen**: I except that we should have somekind of way to create multi AZ statefulsets. BTW do we have way to say \"please spread statefulset replicas to all zones\" kind of similar feature than daemonset in nodes, but for zones.",
  "closed_at": "2017-05-09T15:10:45Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44735/comments",
  "created_at": "2017-04-20T18:02:23Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44735/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/44735",
  "id": 223150378,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to openstack provider",
      "id": 239914558,
      "name": "area/provider/openstack",
      "node_id": "MDU6TGFiZWwyMzk5MTQ1NTg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/provider/openstack"
    },
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 353400216,
      "name": "area/stateful-apps",
      "node_id": "MDU6TGFiZWwzNTM0MDAyMTY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/stateful-apps"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44735/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjMxNTAzNzg=",
  "number": 44735,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Openstack cinder storageclass should support also random zone names.",
  "updated_at": "2017-08-08T02:28:41Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44735",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/22482503?v=4",
    "events_url": "https://api.github.com/users/zetaab/events{/privacy}",
    "followers_url": "https://api.github.com/users/zetaab/followers",
    "following_url": "https://api.github.com/users/zetaab/following{/other_user}",
    "gists_url": "https://api.github.com/users/zetaab/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/zetaab",
    "id": 22482503,
    "login": "zetaab",
    "node_id": "MDQ6VXNlcjIyNDgyNTAz",
    "organizations_url": "https://api.github.com/users/zetaab/orgs",
    "received_events_url": "https://api.github.com/users/zetaab/received_events",
    "repos_url": "https://api.github.com/users/zetaab/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/zetaab/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zetaab/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/zetaab"
  }
}