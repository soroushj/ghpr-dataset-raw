{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "```\nWARNING: DATA RACE\nWrite by goroutine 100:\n  internal/race.Write()\n      /usr/local/go/src/internal/race/race.go:41 +0x2e\n  sync.(*WaitGroup).Wait()\n      /usr/local/go/src/sync/waitgroup.go:125 +0xf9\n  k8s.io/kubernetes/pkg/util/goroutinemap.(*goRoutineMap).Wait()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/goroutinemap/goroutinemap.go:160 +0x3a\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*volumeReactor).waitTest()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/framework_test.go:460 +0x82\n  k8s.io/kubernetes/pkg/controller/persistentvolume.TestControllerSync()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller_test.go:117 +0x16df\n  testing.tRunner()\n      /usr/local/go/src/testing/testing.go:473 +0xdc\n\nPrevious read by goroutine 6540:\n  internal/race.Read()\n      /usr/local/go/src/internal/race/race.go:37 +0x2e\n  sync.(*WaitGroup).Add()\n      /usr/local/go/src/sync/waitgroup.go:67 +0xfa\n  k8s.io/kubernetes/pkg/util/goroutinemap.(*goRoutineMap).Run()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/goroutinemap/goroutinemap.go:105 +0x55e\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).scheduleOperation()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller.go:1234 +0x255\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).reclaimVolume()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller.go:843 +0x51d\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).syncVolume()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller.go:405 +0xee0\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).updateVolume()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller_base.go:230 +0x396\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).(k8s.io/kubernetes/pkg/controller/persistentvolume.updateVolume)-fm()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller_base.go:115 +0x55\n  k8s.io/kubernetes/pkg/controller/framework.ResourceEventHandlerFuncs.OnUpdate()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/framework/controller.go:176 +0x5b\n  k8s.io/kubernetes/pkg/controller/framework.(*ResourceEventHandlerFuncs).OnUpdate()\n      <autogenerated>:26 +0xed\n  k8s.io/kubernetes/pkg/controller/framework.NewIndexerInformer.func1()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/framework/controller.go:308 +0x37c\n  k8s.io/kubernetes/pkg/client/cache.(*DeltaFIFO).Pop()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/cache/delta_fifo.go:414 +0x3fe\n  k8s.io/kubernetes/pkg/controller/framework.(*Controller).processLoop()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/framework/controller.go:127 +0x78\n  k8s.io/kubernetes/pkg/controller/framework.(*Controller).(k8s.io/kubernetes/pkg/controller/framework.processLoop)-fm()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/framework/controller.go:103 +0x2d\n  k8s.io/kubernetes/pkg/util/wait.JitterUntil.func1()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/wait/wait.go:86 +0x58\n  k8s.io/kubernetes/pkg/util/wait.JitterUntil()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/wait/wait.go:87 +0xc9\n  k8s.io/kubernetes/pkg/util/wait.Until()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/wait/wait.go:49 +0x50\n  k8s.io/kubernetes/pkg/controller/framework.(*Controller).Run()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/framework/controller.go:103 +0x25d\n\nGoroutine 100 (running) created at:\n  testing.RunTests()\n      /usr/local/go/src/testing/testing.go:582 +0xae2\n  testing.(*M).Run()\n      /usr/local/go/src/testing/testing.go:515 +0x11d\n  main.main()\n      k8s.io/kubernetes/pkg/controller/persistentvolume/_test/_testmain.go:88 +0x210\n\nGoroutine 6540 (running) created at:\n  k8s.io/kubernetes/pkg/controller/persistentvolume.(*PersistentVolumeController).Run()\n      /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/persistentvolume/controller_base.go:406 +0x1a0\n```\n",
  "closed_at": "2016-06-30T02:54:05Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 12,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/28128/comments",
  "created_at": "2016-06-27T19:37:49Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/28128/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/28128",
  "id": 162530855,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 105152717,
      "name": "area/test",
      "node_id": "MDU6TGFiZWwxMDUxNTI3MTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/test"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/28128/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNjI1MzA4NTU=",
  "number": 28128,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Data race in GoRoutineMap (persistentvolume unit tests)",
  "updated_at": "2016-06-30T02:54:05Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/28128",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/730123?v=4",
    "events_url": "https://api.github.com/users/sttts/events{/privacy}",
    "followers_url": "https://api.github.com/users/sttts/followers",
    "following_url": "https://api.github.com/users/sttts/following{/other_user}",
    "gists_url": "https://api.github.com/users/sttts/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sttts",
    "id": 730123,
    "login": "sttts",
    "node_id": "MDQ6VXNlcjczMDEyMw==",
    "organizations_url": "https://api.github.com/users/sttts/orgs",
    "received_events_url": "https://api.github.com/users/sttts/received_events",
    "repos_url": "https://api.github.com/users/sttts/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sttts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sttts/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sttts"
  }
}