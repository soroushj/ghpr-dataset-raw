{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8463?v=4",
    "events_url": "https://api.github.com/users/mortent/events{/privacy}",
    "followers_url": "https://api.github.com/users/mortent/followers",
    "following_url": "https://api.github.com/users/mortent/following{/other_user}",
    "gists_url": "https://api.github.com/users/mortent/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mortent",
    "id": 8463,
    "login": "mortent",
    "node_id": "MDQ6VXNlcjg0NjM=",
    "organizations_url": "https://api.github.com/users/mortent/orgs",
    "received_events_url": "https://api.github.com/users/mortent/received_events",
    "repos_url": "https://api.github.com/users/mortent/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mortent/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mortent/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mortent"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/8463?v=4",
      "events_url": "https://api.github.com/users/mortent/events{/privacy}",
      "followers_url": "https://api.github.com/users/mortent/followers",
      "following_url": "https://api.github.com/users/mortent/following{/other_user}",
      "gists_url": "https://api.github.com/users/mortent/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mortent",
      "id": 8463,
      "login": "mortent",
      "node_id": "MDQ6VXNlcjg0NjM=",
      "organizations_url": "https://api.github.com/users/mortent/orgs",
      "received_events_url": "https://api.github.com/users/mortent/received_events",
      "repos_url": "https://api.github.com/users/mortent/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mortent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mortent/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mortent"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/\r\n-->\r\n\r\n\r\n**What happened**:\r\n\r\nThere are too many pdb update operations compared with other resources.\r\n![image](https://user-images.githubusercontent.com/11936090/52943840-fd609b80-33a8-11e9-880a-308e7de12638.png)\r\nThat is, there are many \"Put\" operations for pdb periodically in kube-apiserver log.\r\n```\r\nI0212 20:35:05.923317   10957 wrap.go:42] PUT /apis/policy/v1beta1/namespaces/<namespace>/poddisruptionbudgets/<name>/status: (2.618059ms) 200 \r\n...\r\n```\r\n\r\nIn my view, the amount of pdb operations  is connected with disruption controller's resyncPeriod and pdb's quantity in cluster. \r\n\r\nFor example:\r\n\r\ndisruption-controlle's default resyncPeriod is 30s,  and there are 100 pdbs in cluster.\r\n\r\nWe can find that the update operation times per minute is  about  200.\r\n\r\nThe data is reasonable, explanation is as follows: \r\n\r\nAccording to disruption-controlle's design, there is one  resync every 30s.  One resync means to call updatePdbStatus function for every pdb, so there are 200 times updatePdbStatus.  \r\n\r\nFunction updatePdbStatus  judges whether the pdb is changed. If changed, call  apiserver to update the pdb' status.\r\n\r\n```\r\nfunc (dc *DisruptionController) updatePdbStatus(pdb *policy.PodDisruptionBudget, currentHealthy, desiredHealthy, expectedCount int32, disruptedPods map[string]metav1.Time) error {\r\n...\r\nif pdb.Status.CurrentHealthy == currentHealthy &&\r\n\t\tpdb.Status.DesiredHealthy == desiredHealthy &&\r\n\t\tpdb.Status.ExpectedPods == expectedCount &&\r\n\t\tpdb.Status.PodDisruptionsAllowed == disruptionsAllowed &&\r\n\t\treflect.DeepEqual(pdb.Status.DisruptedPods, disruptedPods) &&\r\n\t\tpdb.Status.ObservedGeneration == pdb.Generation {\r\n\t\treturn nil\r\n\t}\r\n...\r\n}\r\n```\r\nWhen no eviction happens,  disruptedPods is empty.  In this situation,  disruptedPods is an empty map, but pdb.Status.DisruptedPods is nil, empty map is not equal to nil.\r\nSo reflect.DeepEqual(pdb.Status.DisruptedPods, disruptedPods) returns false.\r\n\r\nThe pdb is thought to has be changed,  then apiserver is called to update the pdb' status.  In fact, there is no change for the pdb when disruptedPods is an empty map and pdb.Status.DisruptedPods is nil.\r\n\r\n**What you expected to happen**:\r\nThere shouldn't be so many pdb update operations. That is, when pdb has no change,  apiserver shouldn't be called to update its status.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nCreate some pdbs in cluster,  you will see many \"Put\" operations for pdb periodically in kube-apiserver log.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\nkubernetes v1.13.2\r\n\r\n**Fix suggestions**:\r\nThe bug is caused by the mixed usage of empty and  nil for disruptedPods,  the type of which is map[string]metav1.Time. There are two fix suggestions for it:\r\n\r\n1. Choose one of empty map and  nil for disruptedPods, use it consistently and refuse to mix empty map and  nil. For example,  when disruptedPods is empty or nil, save it as an empty map in etcd.  Then every client gets pdb from etcd, the pdb.Status.DisruptedPods is an empty map.  \r\n\r\n1. After get pdb for etcd,  assign an empty map to it if pdb.Status.DisruptedPods  is nil. \r\n\r\nMaybe the mixed usage of  empty and nil for map is a common problem in k8s design, not just for disruptedPods. I will propose a work around solution for the problem.\r\n\r\nIf the solution has any problem, please let me know and I can modify the code.",
  "closed_at": "2019-04-09T01:53:04Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/74240/comments",
  "created_at": "2019-02-19T08:23:09Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/74240/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/74240",
  "id": 411799761,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Apps.",
      "id": 404091735,
      "name": "sig/apps",
      "node_id": "MDU6TGFiZWw0MDQwOTE3MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/apps"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/74240/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MTE3OTk3NjE=",
  "number": 74240,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "There are too many pdb update operations even if no changes take place",
  "updated_at": "2019-04-09T01:53:04Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/74240",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/11936090?v=4",
    "events_url": "https://api.github.com/users/snowplayfire/events{/privacy}",
    "followers_url": "https://api.github.com/users/snowplayfire/followers",
    "following_url": "https://api.github.com/users/snowplayfire/following{/other_user}",
    "gists_url": "https://api.github.com/users/snowplayfire/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/snowplayfire",
    "id": 11936090,
    "login": "snowplayfire",
    "node_id": "MDQ6VXNlcjExOTM2MDkw",
    "organizations_url": "https://api.github.com/users/snowplayfire/orgs",
    "received_events_url": "https://api.github.com/users/snowplayfire/received_events",
    "repos_url": "https://api.github.com/users/snowplayfire/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/snowplayfire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/snowplayfire/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/snowplayfire"
  }
}