{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/14308438?v=4",
    "events_url": "https://api.github.com/users/bsalamat/events{/privacy}",
    "followers_url": "https://api.github.com/users/bsalamat/followers",
    "following_url": "https://api.github.com/users/bsalamat/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsalamat/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bsalamat",
    "id": 14308438,
    "login": "bsalamat",
    "node_id": "MDQ6VXNlcjE0MzA4NDM4",
    "organizations_url": "https://api.github.com/users/bsalamat/orgs",
    "received_events_url": "https://api.github.com/users/bsalamat/received_events",
    "repos_url": "https://api.github.com/users/bsalamat/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bsalamat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsalamat/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bsalamat"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/14308438?v=4",
      "events_url": "https://api.github.com/users/bsalamat/events{/privacy}",
      "followers_url": "https://api.github.com/users/bsalamat/followers",
      "following_url": "https://api.github.com/users/bsalamat/following{/other_user}",
      "gists_url": "https://api.github.com/users/bsalamat/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bsalamat",
      "id": 14308438,
      "login": "bsalamat",
      "node_id": "MDQ6VXNlcjE0MzA4NDM4",
      "organizations_url": "https://api.github.com/users/bsalamat/orgs",
      "received_events_url": "https://api.github.com/users/bsalamat/received_events",
      "repos_url": "https://api.github.com/users/bsalamat/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bsalamat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bsalamat/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bsalamat"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!-->\r\n**What happened**:\r\n/kind bug\r\n**What you expected to happen**:\r\n* Problem 1: Predicates filter nodes. Existing pods on those nodes will be not be counted when calculating max pods per (zone or node) resulting in imbalanced cluster.\r\nEg: [GeneralPredicates](https://github.com/kubernetes/kubernetes/blob/e20c15174e96957c4e1faf7822125c7d295316a4/pkg/scheduler/algorithm/predicates/predicates.go#L1071) removes nodes which cannot [fit this pod](https://github.com/kubernetes/kubernetes/blob/e20c15174e96957c4e1faf7822125c7d295316a4/pkg/scheduler/algorithm/predicates/predicates.go#L728). If any of the pods are already scheduled on this node, they are not considered when counting  [max pods](https://github.com/kubernetes/kubernetes/blob/e20c15174e96957c4e1faf7822125c7d295316a4/pkg/scheduler/algorithm/priorities/selector_spreading.go#L122-L137) in `CalculateSpreadPriorityReduce`.\r\n\r\n* Problem 2: When there are 2 selectors(service and replication controller), it is sufficient to match any one selector for distribution. This creates imbalance [[selector match code](https://github.com/kubernetes/kubernetes/blob/e20c15174e96957c4e1faf7822125c7d295316a4/pkg/scheduler/algorithm/priorities/selector_spreading.go#L101)].\r\nPods from previous deploys matches `service selector` and are counted when distributing pods across zones/nodes (Even though they do not match `replicaset selector`) . These pods will be deleted. After the deploy completes, the cluster is imbalanced - by zone and/or pods per node.\r\n```\r\nservice selector: {app:sd-status-staging}\r\nrc selector  {app: sd-status-staging,pod-template-hash: 4090075901}\r\n```\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n* Problem 1:\r\nGet pods to get scheduled on nodes with very high cpu utilization [Existing cpu utilization + 1 new pod will result in `allocatable.MilliCPU` almost equal to 0]. \r\nGeneralPredicate will drop this node after scheduling the first pod. \r\nThis will lead to over utilization of an already loaded zone. \r\nIf there are enough nodes like this one, it will create a pile on effect resulting in most pods scheduled in an already loaded zone.\r\n\r\n* Problem 2:\r\nHave 2 selectors and deploy 30 pods across 3 zones. Twice.\r\n```\r\nservice selector: {app:sd-status-staging}\r\nrc selector  {app: sd-status-staging,pod-template-hash: 4090075901}\r\n\r\nExpected distribution by zone: 10, 10 10.\r\nActual distribution by zone: 10, 8, 12 (imbalanced cluster).\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n\r\n**Environment**:\r\n* Kubernetes version (use `kubectl version`):\r\n\r\n```\r\nServer Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.8\", GitCommit:\"7eab6a49736cc7b01869a15f9f05dc5b49efb9fc\", GitTreeState:\"clean\", BuildDate:\"2018-09-14T15:54:20Z\", GoVersion:\"go1.9.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nHappens on master too.\r\n```\r\n/sig scheduling\r\n\r\n<!-- DO NOT EDIT BELOW THIS LINE -->\r\n/kind bug",
  "closed_at": "2019-01-15T03:49:14Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71327/comments",
  "created_at": "2018-11-21T21:23:48Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71327/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/71327",
  "id": 383296751,
  "labels": [
    {
      "color": "006b75",
      "default": true,
      "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines.",
      "id": 433686790,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw0MzM2ODY3OTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/help%20wanted"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Scheduling.",
      "id": 125550211,
      "name": "sig/scheduling",
      "node_id": "MDU6TGFiZWwxMjU1NTAyMTE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/scheduling"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71327/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzODMyOTY3NTE=",
  "number": 71327,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "SelectorSpreadPriority does not spread pods across zones",
  "updated_at": "2019-01-15T13:54:22Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/71327",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/3836498?v=4",
    "events_url": "https://api.github.com/users/Ramyak/events{/privacy}",
    "followers_url": "https://api.github.com/users/Ramyak/followers",
    "following_url": "https://api.github.com/users/Ramyak/following{/other_user}",
    "gists_url": "https://api.github.com/users/Ramyak/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Ramyak",
    "id": 3836498,
    "login": "Ramyak",
    "node_id": "MDQ6VXNlcjM4MzY0OTg=",
    "organizations_url": "https://api.github.com/users/Ramyak/orgs",
    "received_events_url": "https://api.github.com/users/Ramyak/received_events",
    "repos_url": "https://api.github.com/users/Ramyak/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Ramyak/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Ramyak/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Ramyak"
  }
}