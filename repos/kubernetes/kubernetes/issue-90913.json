{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "# Progress `[7/7]`\r\n* [x] Original approval issue: #90663\r\n* [x]  APISnoop org-flow: [deleteCoreV1CollectionNamespacedPodTest.org](https://github.com/cncf/apisnoop/blob/master/tickets/k8s/deleteCoreV1CollectionNamespacedPodTest.org)\r\n* [x]  Test approval issue: [kubernetes/kubernetes#90913](https://github.com/kubernetes/kubernetes/issues/90913)\r\n* [x]  Test pr: [PR](https://github.com/kubernetes/kubernetes/pull/92479)\r\n* [x]  Two weeks soak start date:  [testgrid-link](https://testgrid.k8s.io/sig-release-master-blocking#gce-cos-master-default&width=5&include-filter-by-regex=should%20delete%20a%20collection%20of%20pods) 09 July 2020\r\n* [x]  Two weeks soak end date: 24 July 2020\r\n* [x]  Test promotion pr: [#93086](https://github.com/kubernetes/kubernetes/pull/93086)\r\n\r\nThis issue is created to allow edit by @Riaankl\r\n\r\n/wip\r\n/hold\r\n\r\n# Identifying an untested feature Using APISnoop\r\nAccording to this APIsnoop query, there are still an endpoint which is untested.\r\n\r\n```\r\nSELECT\r\n  operation_id,\r\n  -- k8s_action,\r\n  -- path,\r\n  description,\r\n  kind\r\n  FROM untested_stable_core_endpoints\r\n  -- FROM untested_stable_endpoints\r\n  where path not like '%volume%'\r\n  -- and kind like ''\r\n  and operation_id ilike 'delete%CollectionNamespacedPod'\r\n ORDER BY kind,operation_id desc\r\n LIMIT 25\r\n       ;\r\n```\r\n\r\n```\r\n            operation_id             |       description        | kind \r\n-------------------------------------+--------------------------+------\r\n deleteCoreV1CollectionNamespacedPod | delete collection of Pod | Pod\r\n(1 row)\r\n```\r\n\r\n# API Reference and feature documentation\r\n* [Kubernetes API Reference Docs](https://kubernetes.io/docs/reference/kubernetes-api/)\r\n* [Kubernetes API: v1.18 /deleteCoreV1CollectionNamespacedPod](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#delete-collection-pods-v1-core)\r\n* [client-go - Pod: DeleteCollection](https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/pod.go)\r\n\r\n# The mock test\r\n## Test outline\r\n1. Create a set of 3 Pods with a static label within a Namespace.\r\n2. Confirm that all 3 Pods with the label in the Namespace are created.\r\n3. Delete the set of Namespaced Pods with a label via DeleteCollection.\r\n4. Confirm that all Pods with the label have been deleted.\r\n\r\n## Test the functionality in Go\r\n```go\r\npackage main\r\n\r\nimport (\r\n  // \"encoding/json\"\r\n  \"fmt\"\r\n  \"time\"\r\n  \"flag\"\r\n  \"os\"\r\n  v1 \"k8s.io/api/core/v1\"\r\n  // \"k8s.io/client-go/dynamic\"\r\n  // \"k8s.io/apimachinery/pkg/runtime/schema\"\r\n  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\r\n  \"k8s.io/client-go/kubernetes\"\r\n  // \"k8s.io/apimachinery/pkg/types\"\r\n  \"k8s.io/client-go/tools/clientcmd\"\r\n)\r\n\r\nfunc main() {\r\n  // uses the current context in kubeconfig\r\n  kubeconfig := flag.String(\"kubeconfig\", fmt.Sprintf(\"%v/%v/%v\", os.Getenv(\"HOME\"), \".kube\", \"config\"), \"(optional) absolute path to the kubeconfig file\")\r\n  flag.Parse()\r\n  config, err := clientcmd.BuildConfigFromFlags(\"\", *kubeconfig)\r\n  if err != nil {\r\n    fmt.Println(err)\r\n    return\r\n  }\r\n  // make our work easier to find in the audit_event queries\r\n  config.UserAgent = \"live-test-writing\"\r\n  // creates the clientset\r\n  ClientSet, _ := kubernetes.NewForConfig(config)\r\n\r\n  // TEST BEGINS HERE\r\n\r\n  // create a set of pod test names\r\n  podTestNames := [3]string{\"test-pod-nginx-1\", \"test-pod-nginx-2\", \"test-pod-nginx-3\"}\r\n\r\n  // create a set of test pods with a label in the default namespace\r\n  for _, podTestName := range podTestNames {\r\n    _, err = ClientSet.CoreV1().Pods(\"default\").Create(&v1.Pod{\r\n      ObjectMeta: metav1.ObjectMeta{\r\n        Name: podTestName,\r\n        Labels: map[string]string{\r\n          \"type\": \"Testing\"},\r\n      },\r\n      Spec: v1.PodSpec{\r\n        Containers: []v1.Container{{\r\n          Image: \"nginx\",\r\n          Name: \"nginx\",\r\n        }},\r\n        RestartPolicy: v1.RestartPolicyNever,\r\n      }})\r\n\r\n    if err != nil {\r\n      fmt.Println(\"[error]\", err)\r\n      return\r\n    }\r\n    fmt.Println(\"[status] created\", podTestName)\r\n    time.Sleep(3 * time.Second)\r\n  }\r\n\r\n  // get a list of Pods with a label in the default namespace\r\n  podsList, err := ClientSet.CoreV1().Pods(\"default\").List(metav1.ListOptions{\r\n    LabelSelector: \"type=Testing\"})\r\n\r\n  // check that there are 3 pods found\r\n  fmt.Println(\"[status] Found\", len(podsList.Items), \"pods\")\r\n  if len(podsList.Items) != 3 {\r\n    fmt.Println(\"[error] Incorrect number of Pods found\")\r\n    return\r\n  }\r\n\r\n  // delete Collection of Pods for the label in the default namespace\r\n  _  = ClientSet.CoreV1().Pods(\"default\").DeleteCollection(&metav1.DeleteOptions{}, metav1.ListOptions{\r\n         LabelSelector: \"type=Testing\"})\r\n  fmt.Println(\"[status] DeleteCollection processed\")\r\n\r\n  // Give the cluster time to delete all pods\r\n  time.Sleep(30 * time.Second)\r\n\r\n  // get a list of Pods in the default namespace with the label\r\n  podsList, err = ClientSet.CoreV1().Pods(\"default\").List(metav1.ListOptions{\r\n    LabelSelector: \"type=Testing\"})\r\n  if err != nil {\r\n    fmt.Println(\"[error]\", err)\r\n    return\r\n  }\r\n\r\n  // check that there are no pods found\r\n  fmt.Println(\"[status] Found\", len(podsList.Items), \"pods\")\r\n  if len(podsList.Items) != 0 {\r\n    fmt.Println(\"[error] Still found a Pod(s)\")\r\n    return\r\n  }\r\n\r\n  // TEST ENDS HERE\r\n\r\n  fmt.Println(\"[status] complete\")\r\n\r\n}\r\n```\r\n\r\n```go\r\n[status] created test-pod-nginx-1\r\n[status] created test-pod-nginx-2\r\n[status] created test-pod-nginx-3\r\n[status] Found 3 pods\r\n[status] DeleteCollection processed\r\n[status] Found 0 pods\r\n[status] complete\r\n```\r\n\r\n# Verifying increase in coverage with APISnoop\r\nDiscover useragents:\r\n\r\n```\r\nselect distinct useragent from audit_event where bucket='apisnoop' and useragent not like 'kube%' and useragent not like 'coredns%' and useragent not like 'kindnetd%' and useragent like 'live%';\r\n```\r\n\r\n```\r\n     useragent     \r\n-------------------\r\n live-test-writing\r\n(1 row)\r\n```\r\n\r\nList endpoints hit by the test:\r\n\r\n```\r\nselect * from endpoints_hit_by_new_test where useragent like 'live%';\r\n```\r\n\r\n```\r\n     useragent     |            operation_id             | hit_by_ete | hit_by_new_test \r\n-------------------+-------------------------------------+------------+-----------------\r\n live-test-writing | createCoreV1NamespacedPod           | t          |               3\r\n live-test-writing | deleteCoreV1CollectionNamespacedPod | f          |               1\r\n live-test-writing | listCoreV1NamespacedPod             | t          |               2\r\n(3 rows)\r\n```\r\n\r\nDisplay endpoint coverage change:\r\n\r\n```\r\nselect * from projected_change_in_coverage;\r\n```\r\n\r\n```\r\n   category    | total_endpoints | old_coverage | new_coverage | change_in_number \r\n---------------+-----------------+--------------+--------------+------------------\r\n test_coverage |             445 |          188 |          189 |                1\r\n(1 row)\r\n```\r\n\r\nTwo other endpoints tested here have tests in progress to conformance already.\r\n\r\n# Final notes\r\nIf a test with these calls gets merged, ****test coverage will go up by 1 points****\r\n\r\nThis test is also created with the goal of conformance promotion.\r\n\r\n\r\n",
  "closed_at": "2020-07-29T02:25:48Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 11,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90913/comments",
  "created_at": "2020-05-08T23:32:21Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90913/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/90913",
  "id": 615037488,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to kubernetes conformance tests",
      "id": 717986501,
      "name": "area/conformance",
      "node_id": "MDU6TGFiZWw3MTc5ODY1MDE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/conformance"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Architecture.",
      "id": 636152047,
      "name": "sig/architecture",
      "node_id": "MDU6TGFiZWw2MzYxNTIwNDc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/architecture"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Testing.",
      "id": 483069764,
      "name": "sig/testing",
      "node_id": "MDU6TGFiZWw0ODMwNjk3NjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/testing"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90913/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2MTUwMzc0ODg=",
  "number": 90913,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Write deleteCoreV1CollectionNamespacedPod test - +1 endpoint coverage",
  "updated_at": "2020-07-29T16:47:36Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/90913",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/61125752?v=4",
    "events_url": "https://api.github.com/users/Riaankl/events{/privacy}",
    "followers_url": "https://api.github.com/users/Riaankl/followers",
    "following_url": "https://api.github.com/users/Riaankl/following{/other_user}",
    "gists_url": "https://api.github.com/users/Riaankl/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Riaankl",
    "id": 61125752,
    "login": "Riaankl",
    "node_id": "MDQ6VXNlcjYxMTI1NzUy",
    "organizations_url": "https://api.github.com/users/Riaankl/orgs",
    "received_events_url": "https://api.github.com/users/Riaankl/received_events",
    "repos_url": "https://api.github.com/users/Riaankl/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Riaankl/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Riaankl/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Riaankl"
  }
}