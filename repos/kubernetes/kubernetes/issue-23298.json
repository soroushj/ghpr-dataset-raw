{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/13481082?v=4",
    "events_url": "https://api.github.com/users/therc/events{/privacy}",
    "followers_url": "https://api.github.com/users/therc/followers",
    "following_url": "https://api.github.com/users/therc/following{/other_user}",
    "gists_url": "https://api.github.com/users/therc/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/therc",
    "id": 13481082,
    "login": "therc",
    "node_id": "MDQ6VXNlcjEzNDgxMDgy",
    "organizations_url": "https://api.github.com/users/therc/orgs",
    "received_events_url": "https://api.github.com/users/therc/received_events",
    "repos_url": "https://api.github.com/users/therc/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/therc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/therc/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/therc"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/13481082?v=4",
      "events_url": "https://api.github.com/users/therc/events{/privacy}",
      "followers_url": "https://api.github.com/users/therc/followers",
      "following_url": "https://api.github.com/users/therc/following{/other_user}",
      "gists_url": "https://api.github.com/users/therc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/therc",
      "id": 13481082,
      "login": "therc",
      "node_id": "MDQ6VXNlcjEzNDgxMDgy",
      "organizations_url": "https://api.github.com/users/therc/orgs",
      "received_events_url": "https://api.github.com/users/therc/received_events",
      "repos_url": "https://api.github.com/users/therc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/therc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/therc"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "I\u2019m having trouble to pull images from ECR on K8S 1.2. Before I was doing it with the imagePullSecrets field, but now I wanted to try the [new feature](http://kubernetes.io/docs/user-guide/images/#using-aws-ec2-container-registry) which sadly didn't work.\n\nThe policy for the minion IAM role I have looks just like the one on the [template](https://github.com/kubernetes/kubernetes/blob/master/cluster/aws/templates/iam/kubernetes-minion-policy.json) but it\u2019s failing to pull the image:\n\n```\n$ kubectl describe pod myapp-api-celery-deployment-2551798148-bakj7\nName:       myapp-api-celery-deployment-2551798148-bakj7\nNamespace:  default\nNode:       ip-172-20-0-249.us-west-2.compute.internal/172.20.0.249\nStart Time: Mon, 21 Mar 2016 15:09:49 -0600\nLabels:     app=myapp,component=api-celery,pod-template-hash=2551798148\nStatus:     Pending\nIP:     10.244.1.3\nControllers:    ReplicaSet/myapp-api-celery-deployment-2551798148\nContainers:\n  myapp:\n    Container ID:\n    Image:      ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/myapp:latest\n    Image ID:\n    Ports:      5672/TCP, 443/TCP, 80/TCP\n    QoS Tier:\n      cpu:  Burstable\n      memory:   BestEffort\n    Requests:\n      cpu:      100m\n    State:      Waiting\n      Reason:       ImagePullBackOff\n    Ready:      False\n    Restart Count:  0\n    Environment Variables:\n      ENVIRONMENT:  aws\nConditions:\n  Type      Status\n  Ready     False\nVolumes:\n  myapp-secret:\n    Type:   Secret (a volume populated by a Secret)\n    SecretName: myapp-secret\n  default-token-0r10y:\n    Type:   Secret (a volume populated by a Secret)\n    SecretName: default-token-0r10y\nEvents:\n  FirstSeen LastSeen    Count   From                            SubobjectPath       Type        Reason      Message\n  --------- --------    -----   ----                            -------------       --------    ------      -------\n  1m        1m      1   {default-scheduler }                                Normal      Scheduled   Successfully assigned myapp-api-celery-deployment-2551798148-bakj7 to ip-172-20-0-249.us-west-2.compute.internal\n  1m        35s     4   {kubelet ip-172-20-0-249.us-west-2.compute.internal}    spec.containers{myapp}  Normal      Pulling     pulling image \"ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/myapp:latest\"\n  1m        33s     4   {kubelet ip-172-20-0-249.us-west-2.compute.internal}    spec.containers{myapp}  Warning     Failed      Failed to pull image \"ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/myapp:latest\": Error: Status 403 trying to pull repository myapp: \"Your Authorization Token has expired. Please run 'aws ecr get-login' to fetch a new one.\"\n  1m        33s     4   {kubelet ip-172-20-0-249.us-west-2.compute.internal}                Warning     FailedSync  Error syncing pod, skipping: failed to \"StartContainer\" for \"myapp\" with ErrImagePull: \"Error: Status 403 trying to pull repository myapp: \\\"Your Authorization Token has expired. Please run 'aws ecr get-login' to fetch a new one.\\\"\"\n\n  1m    7s  7   {kubelet ip-172-20-0-249.us-west-2.compute.internal}    spec.containers{myapp}  Normal  BackOff     Back-off pulling image \"ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/myapp:latest\"\n  1m    7s  7   {kubelet ip-172-20-0-249.us-west-2.compute.internal}                Warning FailedSync  Error syncing pod, skipping: failed to \"StartContainer\" for \"myapp\" with ImagePullBackOff: \"Back-off pulling image \\\"ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/myapp:latest\\\"\"\n```\n\nMaybe it's worth noting the following:\n1. The cluster was created with `kube-up.sh` but when it was created there was an existing `kubernetes-minion` role on AWS which didn't have that GetAuthorizationToken policy.\n2. I added the policy after creating the cluster, but it didn't work.\n3. I terminated the minion instances so that the autoscaler recreated them to see if maybe the policy was not refreshed for those instances. But that didn't work either.\n\n**UPDATE**: as I mentioned on a comment below I didn't know ECR was available on `us-west-2` as well now. It seems that this works fine if both the ECR registry and the cluster are in the same region.\n\n@justinsb \n",
  "closed_at": "2016-05-13T22:15:45Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 40,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23298/comments",
  "created_at": "2016-03-21T21:15:42Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23298/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/23298",
  "id": 142474198,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 135360517,
      "name": "area/images-registry",
      "node_id": "MDU6TGFiZWwxMzUzNjA1MTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/images-registry"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23298/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNDI0NzQxOTg=",
  "number": 23298,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Cross-region ECR support",
  "updated_at": "2016-05-13T22:15:45Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23298",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1889916?v=4",
    "events_url": "https://api.github.com/users/miguelfrde/events{/privacy}",
    "followers_url": "https://api.github.com/users/miguelfrde/followers",
    "following_url": "https://api.github.com/users/miguelfrde/following{/other_user}",
    "gists_url": "https://api.github.com/users/miguelfrde/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/miguelfrde",
    "id": 1889916,
    "login": "miguelfrde",
    "node_id": "MDQ6VXNlcjE4ODk5MTY=",
    "organizations_url": "https://api.github.com/users/miguelfrde/orgs",
    "received_events_url": "https://api.github.com/users/miguelfrde/received_events",
    "repos_url": "https://api.github.com/users/miguelfrde/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/miguelfrde/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/miguelfrde/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/miguelfrde"
  }
}