{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**What happened**:\r\nI have a Custom Resource with a `map[string]interface{}` field in the corresponding Go struct. I have generated most of the DeepCopy functions for it but for that field I have to make the deep copying myself (cannot be generated because of that `interface{}`). It calls `runtime.DeepCopyJSON()` function to do the copying.\r\nWhen I run my integration tests against a cluster with `KUBE_CACHE_MUTATION_DETECTOR=true` I get the following panic:\r\n```\r\ngoroutine 67 [running]:\r\nvendor/k8s.io/apimachinery/pkg/util/runtime.HandleCrash(0x0, 0x0, 0x0)\r\n        vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:58 +0x16b\r\npanic(0x53918e0, 0xc420462080)\r\n        GOROOT/src/runtime/panic.go:502 +0x24a\r\nvendor/k8s.io/apimachinery/pkg/util/runtime.HandleCrash(0x0, 0x0, 0x0)\r\n        vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:58 +0x16b\r\npanic(0x53918e0, 0xc420462080)\r\n        GOROOT/src/runtime/panic.go:502 +0x24a\r\nvendor/k8s.io/apimachinery/pkg/util/runtime.HandleCrash(0x0, 0x0, 0x0)\r\n        vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:58 +0x16b\r\npanic(0x53918e0, 0xc420462080)\r\n        GOROOT/src/runtime/panic.go:502 +0x24a\r\nvendor/k8s.io/apimachinery/pkg/runtime.DeepCopyJSONValue(0x534f5c0, 0xc42027ac10, 0xc42027abe0, 0xc)\r\n        vendor/k8s.io/apimachinery/pkg/runtime/converter.go:466 +0x684\r\nvendor/k8s.io/apimachinery/pkg/runtime.DeepCopyJSONValue(0x53a8d00, 0xc42019c210, 0xc4204e9650, 0xc42002e150)\r\n        vendor/k8s.io/apimachinery/pkg/runtime/converter.go:454 +0x1c8\r\nvendor/k8s.io/apimachinery/pkg/runtime.DeepCopyJSONValue(0x53a8d00, 0xc42019c1e0, 0x53a9180, 0xc4200c9e18)\r\n        vendor/k8s.io/apimachinery/pkg/runtime/converter.go:454 +0x1c8\r\nvendor/k8s.io/apimachinery/pkg/runtime.DeepCopyJSON(0xc42019c1e0, 0xc4204e9830)\r\n        vendor/k8s.io/apimachinery/pkg/runtime/converter.go:444 +0x49\r\nmy-type/v1.(*MyTypeConfigSet).DeepCopyInto(0xc4204e9750, 0xc4205bb738)\r\n        pkg/apis/composition/v1/types.go:64 +0x4e\r\nmy-type/v1.MyTypeConfigSet.DeepCopy(0xc42019c1e0, 0xc42019c1b0)\r\n        pkg/apis/composition/v1/zz_generated.deepcopy.go:47 +0x5a\r\nmy-type/v1.(*MyTypeSpec).DeepCopyInto(0xc4201b27e8, 0xc4203fa108)\r\n        pkg/apis/composition/v1/zz_generated.deepcopy.go:154 +0x45a\r\nmy-type/v1.(*MyType).DeepCopyInto(0xc4201b26e0, 0xc4203fa000)\r\n        pkg/apis/composition/v1/zz_generated.deepcopy.go:19 +0x12a\r\nmy-type/v1.(*MyType).DeepCopy(0xc4201b26e0, 0xc4201e8301)\r\n        pkg/apis/composition/v1/zz_generated.deepcopy.go:29 +0x5d\r\nmy-type/v1.(*MyType).DeepCopyObject(0xc4201b26e0, 0x54e63c0, 0xc4201b26e0)\r\n        pkg/apis/composition/v1/zz_generated.deepcopy.go:35 +0x39\r\nvendor/k8s.io/client-go/tools/cache.(*defaultCacheMutationDetector).AddObject(0xc420336e00, 0x54e63c0, 0xc4201b26e0)\r\n        vendor/k8s.io/client-go/tools/cache/mutation_detector.go:99 +0xd3\r\nvendor/k8s.io/client-go/tools/cache.(*sharedIndexInformer).HandleDeltas(0xc4201e82d0, 0x53cc3e0, 0xc420192400, 0x0, 0x0)\r\n        vendor/k8s.io/client-go/tools/cache/shared_informer.go:353 +0x1d1\r\nvendor/k8s.io/client-go/tools/cache.(*sharedIndexInformer).HandleDeltas-fm(0x53cc3e0, 0xc420192400, 0x53cc3e0, 0xc420192400)\r\n        vendor/k8s.io/client-go/tools/cache/shared_informer.go:202 +0x56\r\nvendor/k8s.io/client-go/tools/cache.(*DeltaFIFO).Pop(0xc4203f2000, 0xc420184020, 0x0, 0x0, 0x0, 0x0)\r\n        vendor/k8s.io/client-go/tools/cache/delta_fifo.go:444 +0x37d\r\nvendor/k8s.io/client-go/tools/cache.(*controller).processLoop(0xc4201de080)\r\n        vendor/k8s.io/client-go/tools/cache/controller.go:150 +0x6e\r\n...\r\n```\r\nor alternatively (why two ways to log this?):\r\n```\r\nE0418 15:02:00.239118   96944 runtime.go:66] Observed a panic: &errors.errorString{s:\"cannot deep copy uint64\"} (cannot deep copy uint64)\r\nvendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:72\r\nvendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:65\r\nvendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:51\r\nbazel-out/darwin-fastbuild/bin/external/io_bazel_rules_go/darwin_amd64_race_stripped/stdlib~/src/runtime/asm_amd64.s:573\r\nGOROOT/src/runtime/panic.go:502\r\nvendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:58\r\nbazel-out/darwin-fastbuild/bin/external/io_bazel_rules_go/darwin_amd64_race_stripped/stdlib~/src/runtime/asm_amd64.s:573\r\nGOROOT/src/runtime/panic.go:502\r\nvendor/k8s.io/apimachinery/pkg/runtime/converter.go:466\r\nvendor/k8s.io/apimachinery/pkg/runtime/converter.go:454\r\nvendor/k8s.io/apimachinery/pkg/runtime/converter.go:454\r\nvendor/k8s.io/apimachinery/pkg/runtime/converter.go:444\r\nmytype/v1/types.go:64\r\nmytype/v1/zz_generated.deepcopy.go:47\r\nmytype/v1/zz_generated.deepcopy.go:154\r\nmytype/v1/zz_generated.deepcopy.go:19\r\nmytype/v1/zz_generated.deepcopy.go:29\r\nmytype/v1/zz_generated.deepcopy.go:35\r\nvendor/k8s.io/client-go/tools/cache/mutation_detector.go:99\r\nvendor/k8s.io/client-go/tools/cache/shared_informer.go:353\r\nvendor/k8s.io/client-go/tools/cache/shared_informer.go:202\r\nvendor/k8s.io/client-go/tools/cache/delta_fifo.go:444\r\nvendor/k8s.io/client-go/tools/cache/controller.go:150\r\nvendor/k8s.io/client-go/tools/cache/controller.go:124\r\nvendor/k8s.io/apimachinery/pkg/util/wait/wait.go:133\r\nvendor/k8s.io/apimachinery/pkg/util/wait/wait.go:134\r\nvendor/k8s.io/apimachinery/pkg/util/wait/wait.go:88\r\nvendor/k8s.io/client-go/tools/cache/controller.go:124\r\nvendor/k8s.io/client-go/tools/cache/shared_informer.go:227\r\n...\r\n```\r\n\r\n`cannot deep copy uint64` comes from\r\nhttps://github.com/kubernetes/kubernetes/blob/3e342077d597f7a972ceaff0f06379686bb040a3/staging/src/k8s.io/apimachinery/pkg/runtime/converter.go#L449-L468\r\n\r\nThis function was written with assumption that only `int64`/`float64` types are generated for numbers. This assumption comes from this code\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/5b27f8b8f9fcfc8405f9b34bf584abd0d168abf7/staging/src/k8s.io/apimachinery/pkg/util/json/json.go#L111-L118\r\n\r\nbut the jsoniter unmarshaler that is used in the code to parse objects coming from server does something different:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/135d58b3941fac99ae0426e18cbda266b83ca49e/staging/src/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go#L75-L88\r\n\r\nWhat do we want to do? Support `uint64` or only generate `int64`/`float64` for numbers? Would be great to only have one way to do things.\r\n\r\n**Environment**:\r\nKubernetes 1.10.0, master has the same code.\r\n\r\n/kind bug\r\n/sig api-machinery\r\n\r\n@kubernetes/sig-api-machinery-bugs ",
  "closed_at": "2018-05-07T12:14:05Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62769/comments",
  "created_at": "2018-04-18T05:59:17Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62769/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/62769",
  "id": 315341291,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62769/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMTUzNDEyOTE=",
  "number": 62769,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "DeepCopyJSON causes a panic",
  "updated_at": "2018-05-07T12:14:05Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/62769",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/126021?v=4",
    "events_url": "https://api.github.com/users/ash2k/events{/privacy}",
    "followers_url": "https://api.github.com/users/ash2k/followers",
    "following_url": "https://api.github.com/users/ash2k/following{/other_user}",
    "gists_url": "https://api.github.com/users/ash2k/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ash2k",
    "id": 126021,
    "login": "ash2k",
    "node_id": "MDQ6VXNlcjEyNjAyMQ==",
    "organizations_url": "https://api.github.com/users/ash2k/orgs",
    "received_events_url": "https://api.github.com/users/ash2k/received_events",
    "repos_url": "https://api.github.com/users/ash2k/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ash2k/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ash2k/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ash2k"
  }
}