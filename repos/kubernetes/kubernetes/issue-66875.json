{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/49258?v=4",
    "events_url": "https://api.github.com/users/spiffxp/events{/privacy}",
    "followers_url": "https://api.github.com/users/spiffxp/followers",
    "following_url": "https://api.github.com/users/spiffxp/following{/other_user}",
    "gists_url": "https://api.github.com/users/spiffxp/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/spiffxp",
    "id": 49258,
    "login": "spiffxp",
    "node_id": "MDQ6VXNlcjQ5MjU4",
    "organizations_url": "https://api.github.com/users/spiffxp/orgs",
    "received_events_url": "https://api.github.com/users/spiffxp/received_events",
    "repos_url": "https://api.github.com/users/spiffxp/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/spiffxp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spiffxp/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/spiffxp"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/49258?v=4",
      "events_url": "https://api.github.com/users/spiffxp/events{/privacy}",
      "followers_url": "https://api.github.com/users/spiffxp/followers",
      "following_url": "https://api.github.com/users/spiffxp/following{/other_user}",
      "gists_url": "https://api.github.com/users/spiffxp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/spiffxp",
      "id": 49258,
      "login": "spiffxp",
      "node_id": "MDQ6VXNlcjQ5MjU4",
      "organizations_url": "https://api.github.com/users/spiffxp/orgs",
      "received_events_url": "https://api.github.com/users/spiffxp/received_events",
      "repos_url": "https://api.github.com/users/spiffxp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/spiffxp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/spiffxp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/spiffxp"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/8110509?v=4",
      "events_url": "https://api.github.com/users/mgdevstack/events{/privacy}",
      "followers_url": "https://api.github.com/users/mgdevstack/followers",
      "following_url": "https://api.github.com/users/mgdevstack/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgdevstack/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mgdevstack",
      "id": 8110509,
      "login": "mgdevstack",
      "node_id": "MDQ6VXNlcjgxMTA1MDk=",
      "organizations_url": "https://api.github.com/users/mgdevstack/orgs",
      "received_events_url": "https://api.github.com/users/mgdevstack/received_events",
      "repos_url": "https://api.github.com/users/mgdevstack/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mgdevstack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgdevstack/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mgdevstack"
    },
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/9468083?v=4",
      "events_url": "https://api.github.com/users/johnbelamaric/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnbelamaric/followers",
      "following_url": "https://api.github.com/users/johnbelamaric/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnbelamaric/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnbelamaric",
      "id": 9468083,
      "login": "johnbelamaric",
      "node_id": "MDQ6VXNlcjk0NjgwODM=",
      "organizations_url": "https://api.github.com/users/johnbelamaric/orgs",
      "received_events_url": "https://api.github.com/users/johnbelamaric/received_events",
      "repos_url": "https://api.github.com/users/johnbelamaric/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnbelamaric/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnbelamaric/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnbelamaric"
    }
  ],
  "author_association": "MEMBER",
  "body": "/kind cleanup\r\n/area conformance\r\n/area test\r\n/sig node\r\n/sig testing\r\n/sig architecture\r\n\r\n/assign @mgdevstack \r\n/assign @mkurylec \r\n\r\nWe have a number of tests that only have the `[NodeConformance]` tag that may make sense as `[Conformance]` tests, we should identify whether these tests cases meet (or could meet) the [requirements to be promoted to conformance](https://github.com/kubernetes/community/blob/master/contributors/devel/conformance-tests.md#conformance-test-requirements). We should open PR's to promote these if so.\r\n\r\nI would advise starting with the test/common cases\r\n\r\n```\r\nspiffxp@spiffxp-macbookpro:kubernetes (master %)$ sift \"[^e]It\\(.*NodeConformance\" test\r\ntest/e2e_node/volume_manager_test.go:\t\t\tIt(\"should remove the volume from the node [NodeConformance]\", func() {\r\ntest/e2e_node/runtime_conformance_test.go:\t\t\t\tIt(testCase.description+\" [Conformance][NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should run the container with uid 65534 [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should run the container with uid 0 [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should run the container with readonly rootfs when readOnlyRootFilesystem=true [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should allow privilege escalation when not explicitly set and uid != 0 [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should not allow privilege escalation when false [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should allow privilege escalation when true [NodeConformance]\", func() {\r\ntest/e2e_node/security_context_test.go:\t\tIt(\"should run the container as unprivileged when false [NodeConformance]\", func() {\r\ntest/e2e_node/kubelet_test.go:\t\tIt(\"should have an error terminated reason [NodeConformance]\", func() {\r\ntest/e2e_node/kubelet_test.go:\t\tIt(\"should be possible to delete [NodeConformance]\", func() {\r\ntest/e2e_node/kubelet_test.go:\t\tIt(\"it should write entries to /etc/hosts [NodeConformance]\", func() {\r\ntest/e2e_node/pods_container_manager_test.go:\t\t\tIt(\"Top level QoS containers should have been created [NodeConformance]\", func() {\r\ntest/e2e/common/configmap_volume.go:\tIt(\"binary data should be reflected in volume [NodeConformance]\", func() {\r\ntest/e2e/common/projected.go:\tIt(\"should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance]\", func() {\r\ntest/e2e/common/secrets_volume.go:\tIt(\"should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance]\", func() {\r\ntest/e2e/common/pods.go:\tIt(\"should support remote command execution over websockets [NodeConformance]\", func() {\r\ntest/e2e/common/pods.go:\tIt(\"should support retrieving logs from the container over websockets [NodeConformance]\", func() {\r\ntest/e2e/common/pods.go:\tIt(\"should have their auto-restart back-off timer reset on image update [Slow][NodeConformance]\", func() {\r\ntest/e2e/common/pods.go:\tIt(\"should cap back-off at MaxContainerBackOff [Slow][NodeConformance]\", func() {\r\ntest/e2e/common/host_path.go:\tIt(\"should support r/w [NodeConformance]\", func() {\r\ntest/e2e/common/host_path.go:\tIt(\"should support subPath [NodeConformance]\", func() {\r\n```",
  "closed_at": "2019-06-14T00:48:21Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 18,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66875/comments",
  "created_at": "2018-08-01T21:58:16Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66875/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/66875",
  "id": 346784929,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to kubernetes conformance tests",
      "id": 717986501,
      "name": "area/conformance",
      "node_id": "MDU6TGFiZWw3MTc5ODY1MDE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/conformance"
    },
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 105152717,
      "name": "area/test",
      "node_id": "MDU6TGFiZWwxMDUxNTI3MTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/test"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to cleaning up code, process, or technical debt.",
      "id": 122775691,
      "name": "kind/cleanup",
      "node_id": "MDU6TGFiZWwxMjI3NzU2OTE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/cleanup"
    },
    {
      "color": "d3e2f0",
      "default": false,
      "description": "Indicates that an issue or PR should not be auto-closed due to staleness.",
      "id": 778118403,
      "name": "lifecycle/frozen",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/frozen"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Architecture.",
      "id": 636152047,
      "name": "sig/architecture",
      "node_id": "MDU6TGFiZWw2MzYxNTIwNDc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/architecture"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Testing.",
      "id": 483069764,
      "name": "sig/testing",
      "node_id": "MDU6TGFiZWw0ODMwNjk3NjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/testing"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66875/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNDY3ODQ5Mjk=",
  "number": 66875,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "There are NodeConformance tests that may be eligible for promotion to Conformance",
  "updated_at": "2019-06-14T00:48:21Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/66875",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/49258?v=4",
    "events_url": "https://api.github.com/users/spiffxp/events{/privacy}",
    "followers_url": "https://api.github.com/users/spiffxp/followers",
    "following_url": "https://api.github.com/users/spiffxp/following{/other_user}",
    "gists_url": "https://api.github.com/users/spiffxp/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/spiffxp",
    "id": 49258,
    "login": "spiffxp",
    "node_id": "MDQ6VXNlcjQ5MjU4",
    "organizations_url": "https://api.github.com/users/spiffxp/orgs",
    "received_events_url": "https://api.github.com/users/spiffxp/received_events",
    "repos_url": "https://api.github.com/users/spiffxp/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/spiffxp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/spiffxp/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/spiffxp"
  }
}