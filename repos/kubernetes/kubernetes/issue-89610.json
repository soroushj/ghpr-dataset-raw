{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/9354727?v=4",
    "events_url": "https://api.github.com/users/SataQiu/events{/privacy}",
    "followers_url": "https://api.github.com/users/SataQiu/followers",
    "following_url": "https://api.github.com/users/SataQiu/following{/other_user}",
    "gists_url": "https://api.github.com/users/SataQiu/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/SataQiu",
    "id": 9354727,
    "login": "SataQiu",
    "node_id": "MDQ6VXNlcjkzNTQ3Mjc=",
    "organizations_url": "https://api.github.com/users/SataQiu/orgs",
    "received_events_url": "https://api.github.com/users/SataQiu/received_events",
    "repos_url": "https://api.github.com/users/SataQiu/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/SataQiu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SataQiu/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/SataQiu"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/9354727?v=4",
      "events_url": "https://api.github.com/users/SataQiu/events{/privacy}",
      "followers_url": "https://api.github.com/users/SataQiu/followers",
      "following_url": "https://api.github.com/users/SataQiu/following{/other_user}",
      "gists_url": "https://api.github.com/users/SataQiu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SataQiu",
      "id": 9354727,
      "login": "SataQiu",
      "node_id": "MDQ6VXNlcjkzNTQ3Mjc=",
      "organizations_url": "https://api.github.com/users/SataQiu/orgs",
      "received_events_url": "https://api.github.com/users/SataQiu/received_events",
      "repos_url": "https://api.github.com/users/SataQiu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SataQiu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SataQiu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SataQiu"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\n\r\nWhen K8s is started in dual-stack mode with IPv6 as the \"main\" (or base) family services specified with ipFamily:IPv4 still get a ipv6 `ClusterIP`;\r\n\r\n```\r\nvm-001 ~ # kubectl get svc mconnect-ipv4\r\nNAME            TYPE           CLUSTER-IP        EXTERNAL-IP   PORT(S)          AGE\r\nmconnect-ipv4   LoadBalancer   fd00:4000::6586   10.0.0.0      5001:31270/TCP   5m25s\r\nvm-001 ~ # kubectl get svc mconnect-ipv4 -o json | jq .spec\r\n{\r\n  \"clusterIP\": \"fd00:4000::6586\",\r\n  \"externalTrafficPolicy\": \"Cluster\",\r\n  \"ipFamily\": \"IPv4\",\r\n  \"loadBalancerIP\": \"10.0.0.0\",\r\n  \"ports\": [\r\n    {\r\n      \"nodePort\": 31270,\r\n      \"port\": 5001,\r\n      \"protocol\": \"TCP\",\r\n      \"targetPort\": 5001\r\n    }\r\n  ],\r\n  \"selector\": {\r\n    \"app\": \"mconnect\"\r\n  },\r\n  \"sessionAffinity\": \"None\",\r\n  \"type\": \"LoadBalancer\"\r\n}\r\n```\r\nThe `loadBalancerIP` is expicitly set to \"10.0.0.0\" using [assign-lb-ip](https://github.com/Nordix/assign-lb-ip).\r\n\r\n**What you expected to happen**:\r\n\r\nServices with ipFamily:IPv4 shall get ipv4 ClusterIP addresses.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n\r\n* Setup a K8s cluster in dual-stack mode with family IPv6 as base\r\n* Define a service with ipFamily: IPv4\r\n\r\nTo make K8s think IPv6 is the main family the cue is to define ipv6 addresses to K8s binaries. Below are my settings as an example. I do not use `kubeadm` but install \"from scratch\";\r\n\r\nMaster processes;\r\n```\r\nkube-scheduler --kubeconfig /etc/kubernetes/kubeconfig --leader-elect=false \\\r\n  --feature-gates IPv6DualStack=true\r\n\r\nkube-controller-manager --kubeconfig /etc/kubernetes/kubeconfig \\\r\n  --allocate-node-cidrs=true --cluster-cidr=11.0.0.0/16,1100::/48 \\\r\n  --controllers=*,serviceaccount,serviceaccount-token \\\r\n  --feature-gates IPv6DualStack=true \\\r\n  --service-account-private-key-file=/srv/kubernetes/server.key \\\r\n  --root-ca-file=/srv/kubernetes/server.crt --leader-elect=false\r\n\r\nkube-apiserver --token-auth-file=/srv/kubernetes/known_tokens.csv \\\r\n  --allow-privileged=true --insecure-bind-address=1000::1:192.168.1.1 \\\r\n  --advertise-address=1000::1:192.168.1.1 --authorization-mode=AlwaysAllow \\\r\n  --feature-gates IPv6DualStack=true --etcd-servers=http://127.0.0.1:2379 -\\\r\n  --anonymous-auth=false --service-cluster-ip-range=fd00:4000::/112,12.0.0.0/16 \\\r\n  --enable-admission-plugins=ServiceAccount,AlwaysAdmit \\\r\n  --client-ca-file=/srv/kubernetes/ca.crt \\\r\n  --tls-private-key-file=/srv/kubernetes/server.key \\\r\n  --tls-cert-file=/srv/kubernetes/server.crt\r\n```\r\n\r\n`etcd` is accessed with ipv4 which does not affect the K8s family.\r\n\r\nWorker processes;\r\n```\r\nkubelet --address=:: --node-ip=1000::1:192.168.1.2 --container-runtime=remote \\\r\n  --container-runtime-endpoint=unix:///var/run/crio/crio.sock \\\r\n  --image-service-endpoint=unix:///var/run/crio/crio.sock \\\r\n  --feature-gates IPv6DualStack=true --register-node=true \\\r\n  --kubeconfig /etc/kubernetes/kubeconfig \\\r\n  --network-plugin=cni --cluster-dns=1000::1:192.168.1.2 \\\r\n  --cluster-domain=xcluster --runtime-cgroups=/systemd/system.slice \\\r\n  --kubelet-cgroups=/systemd/system.slice\r\n$ cat /etc/kubernetes/kubeconfig\r\napiVersion: v1\r\nclusters:\r\n- cluster:\r\n    server: http://[1000::1:192.168.1.1]:8080\r\n  name: xcluster\r\ncontexts:\r\n- context:\r\n    cluster: xcluster\r\n    user: root\r\n  name: xcluster\r\ncurrent-context: xcluster\r\nkind: Config\r\npreferences: {}\r\nusers:\r\n- name: root\r\n  user:\r\n    as-user-extra: {}\r\n\r\nkube-proxy --config /etc/kubernetes/kube-proxy.config\r\n$ cat /etc/kubernetes/kube-proxy.config\r\napiVersion: kubeproxy.config.k8s.io/v1alpha1\r\nkind: KubeProxyConfiguration\r\nbindAddress: \"::1\"\r\nfeatureGates:\r\n  IPv6DualStack: true\r\n  SCTPSupport: true\r\nclientConnection:\r\n  acceptContentTypes: \"\"\r\n  burst: 10\r\n  contentType: application/vnd.kubernetes.protobuf\r\n  kubeconfig: \"/etc/kubernetes/kubeconfig\"\r\n  qps: 5\r\nclusterCIDR: \"1100::/48,11.0.0.0/16\"\r\nconfigSyncPeriod: 15m0s\r\nconntrack:\r\n  maxPerCore: 32768\r\n  min: 131072\r\n  tcpCloseWaitTimeout: 1h0m0s\r\n  tcpEstablishedTimeout: 24h0m0s\r\nenableProfiling: false\r\nhealthzBindAddress: 0.0.0.0:10256\r\nhostnameOverride: \"\"\r\niptables:\r\n  masqueradeAll: false\r\n  masqueradeBit: 14\r\n  minSyncPeriod: 0s\r\n  syncPeriod: 30s\r\nipvs:\r\n  excludeCIDRs: null\r\n  minSyncPeriod: 0s\r\n  scheduler: \"\"\r\n  syncPeriod: 30s\r\nmetricsBindAddress: 127.0.0.1:10249\r\nmode: \"ipvs\"\r\nnodePortAddresses: null\r\noomScoreAdj: -999\r\nportRange: \"\"\r\nudpIdleTimeout: 250ms\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\nThere are other problems with dual-stack/ipv6-base but may be caused by this one. For example `kubectl top nodes` does not work and some `calico` processes does not become \"ready\".\r\n\r\nIpv6 traffic to ipv6 services and DNS works;\r\n```\r\n# mconnect -address mconnect-ipv6.default.svc.xcluster:5001 -nconn 100\r\nFailed connects; 0\r\nFailed reads; 0\r\nmconnect-deployment-6c5bc66c5c-fq82x 25\r\nmconnect-deployment-6c5bc66c5c-x8r9l 25\r\nmconnect-deployment-6c5bc66c5c-7rqw9 25\r\nmconnect-deployment-6c5bc66c5c-zk5b4 25\r\n```\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.0\", GitCommit:\"9e991415386e4cf155a24b1da15becaa390438d8\", GitTreeState:\"clean\", BuildDate:\"2020-03-25T14:58:59Z\", GoVersion:\"go1.13.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"18\", GitVersion:\"v1.18.0\", GitCommit:\"9e991415386e4cf155a24b1da15becaa390438d8\", GitTreeState:\"clean\", BuildDate:\"2020-03-25T14:50:46Z\", GoVersion:\"go1.13.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- Cloud provider or hardware configuration: -\r\n- OS (e.g: `cat /etc/os-release`): BusyBox based own setup.\r\n- Kernel (e.g. `uname -a`):\r\n```\r\nLinux vm-002 5.5.7 #4 SMP Wed Mar 18 12:47:34 CET 2020 x86_64 GNU/Linux\r\n```\r\n- Install tools: \"from scratch\"\r\n- Network plugin and version (if this is a network-related bug): `calico/cni:v3.12.0`\r\n- Others:\r\n",
  "closed_at": "2020-04-03T00:23:47Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/89610/comments",
  "created_at": "2020-03-28T09:17:36Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/89610/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/89610",
  "id": 589539848,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    },
    {
      "color": "d455d0",
      "default": false,
      "description": "Indicates an issue that can not or will not be resolved.",
      "id": 862108765,
      "name": "triage/unresolved",
      "node_id": "MDU6TGFiZWw4NjIxMDg3NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/triage/unresolved"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/89610/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1ODk1Mzk4NDg=",
  "number": 89610,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Dual-stack with base family IPv6: Services with ipFamily:IPv4 gets ipv6 addresses",
  "updated_at": "2020-04-03T00:23:47Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/89610",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/37046727?v=4",
    "events_url": "https://api.github.com/users/uablrek/events{/privacy}",
    "followers_url": "https://api.github.com/users/uablrek/followers",
    "following_url": "https://api.github.com/users/uablrek/following{/other_user}",
    "gists_url": "https://api.github.com/users/uablrek/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/uablrek",
    "id": 37046727,
    "login": "uablrek",
    "node_id": "MDQ6VXNlcjM3MDQ2NzI3",
    "organizations_url": "https://api.github.com/users/uablrek/orgs",
    "received_events_url": "https://api.github.com/users/uablrek/received_events",
    "repos_url": "https://api.github.com/users/uablrek/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/uablrek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/uablrek/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/uablrek"
  }
}