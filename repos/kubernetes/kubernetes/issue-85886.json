{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/16233859?v=4",
    "events_url": "https://api.github.com/users/hubv/events{/privacy}",
    "followers_url": "https://api.github.com/users/hubv/followers",
    "following_url": "https://api.github.com/users/hubv/following{/other_user}",
    "gists_url": "https://api.github.com/users/hubv/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hubv",
    "id": 16233859,
    "login": "hubv",
    "node_id": "MDQ6VXNlcjE2MjMzODU5",
    "organizations_url": "https://api.github.com/users/hubv/orgs",
    "received_events_url": "https://api.github.com/users/hubv/received_events",
    "repos_url": "https://api.github.com/users/hubv/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hubv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hubv/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hubv"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/16233859?v=4",
      "events_url": "https://api.github.com/users/hubv/events{/privacy}",
      "followers_url": "https://api.github.com/users/hubv/followers",
      "following_url": "https://api.github.com/users/hubv/following{/other_user}",
      "gists_url": "https://api.github.com/users/hubv/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/hubv",
      "id": 16233859,
      "login": "hubv",
      "node_id": "MDQ6VXNlcjE2MjMzODU5",
      "organizations_url": "https://api.github.com/users/hubv/orgs",
      "received_events_url": "https://api.github.com/users/hubv/received_events",
      "repos_url": "https://api.github.com/users/hubv/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/hubv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hubv/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/hubv"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\nIP addresses losing in k8s node status in a pure ipv6 vsphere environment.\r\n```\r\n[root@henry-c1 ~]# kubectl get nodes -o wide\r\nNAME        STATUS   ROLES    AGE    VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE                                      KERNEL-VERSION               CONTAINER-RUNTIME\r\nhenry-c1    Ready    <none>   6h9m   v1.15.4   <none>        <none>        Red Hat Enterprise Linux Server 7.6 (Maipo)   3.10.0-1062.1.2.el7.x86_64   docker://1.13.1\r\nhenry-c2    Ready    <none>   6h9m   v1.15.4   <none>        <none>        Red Hat Enterprise Linux Server 7.6 (Maipo)   3.10.0-1062.1.2.el7.x86_64   docker://1.13.1\r\nhenry-c3    Ready    <none>   6h9m   v1.15.4   <none>        <none>        Red Hat Enterprise Linux Server 7.6 (Maipo)   3.10.0-1062.1.2.el7.x86_64   docker://1.13.1\r\nhenry-we2   Ready    <none>   6h8m   v1.15.4   <none>        <none>        Red Hat Enterprise Linux Server 7.6 (Maipo)   3.10.0-1062.1.2.el7.x86_64   docker://1.13.1\r\n```\r\nall interfaces of nodes in this cluster are ipv6 only\r\n```\r\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n    inet 127.0.0.1/8 scope host lo\r\n       valid_lft forever preferred_lft forever\r\n    inet6 ::1/128 scope host\r\n       valid_lft forever preferred_lft forever\r\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\r\n    link/ether 00:50:56:b0:96:27 brd ff:ff:ff:ff:ff:ff\r\n    inet6 2650:1:87:96::113/64 scope global noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::250:56ff:feb0:9627/64 scope link noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n3: eth1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\r\n    link/ether 00:50:56:b0:0d:22 brd ff:ff:ff:ff:ff:ff\r\n    inet6 2002:da8:8003:801::113/64 scope global noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::250:56ff:feb0:d22/64 scope link noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n4: eth2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\r\n    link/ether 00:50:56:b0:83:bc brd ff:ff:ff:ff:ff:ff\r\n    inet6 2003:da8:8003:801::113/64 scope global noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::250:56ff:feb0:83bc/64 scope link noprefixroute\r\n       valid_lft forever preferred_lft forever\r\n```\r\nThe error logs in kubelet as the following:\r\n \r\n```\r\n[root@henry-c1 ~]# journalctl -u kubelet -r -o cat\r\n W1204 10:55:42.811053   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:55:32.797336   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:55:22.778379   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:55:12.758991   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:55:02.742213   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:52.723597   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:42.707867   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:32.690791   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:22.675851   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:12.656082   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:54:02.637246   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:53:52.619014   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:53:42.601095   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:53:32.583253   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\nW1204 10:53:22.565725   22987 kubelet_node_status.go:505] Failed to set some node status fields: failed to get node address from cloud provider that matches ip: 2650:1:87:96::113\r\n\r\n```\r\n**What you expected to happen**:\r\nIt will be very appreciated if we can get ipv6 addresses from vsphere cloud provider as ipv4 env\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\ndeploy k8s cluster in vsphere pure ipv6 envirenment\r\n**Anything else we need to know?**:\r\nFrom the code\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/vsphere/vsphere.go#L682-L700\r\n```\r\n                for _, v := range vmMoList[0].Guest.Net {\r\n                                if vs.cfg.Network.PublicNetwork == v.Network {\r\n                                                for _, ip := range v.IpAddress {\r\n                                                                if net.ParseIP(ip).To4() != nil {\r\n                                                                                nodehelpers.AddToNodeAddresses(&addrs,\r\n                                                                                                v1.NodeAddress{\r\n                                                                                                                Type:    v1.NodeExternalIP,\r\n                                                                                                                Address: ip,\r\n                                                                                                }, v1.NodeAddress{\r\n                                                                                                                Type:    v1.NodeInternalIP,\r\n                                                                                                                Address: ip,\r\n                                                                                                },\r\n                                                                                )\r\n                                                                }\r\n                                                }\r\n                                }\r\n                }\r\n                return addrs, nil\r\n\r\n```\r\nwe can know that while the provider retrieves VM\u2019s IP, It uses To4() function for all ip addresses from vsphere platform, this function can\u2019t handle ipv6 addresses as mentioned in guild: https://golang.org/pkg/net/#IP.To4\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n```\r\n[root@henry-c1 ~]# kubectl version\r\nClient Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.4\", GitCommit:\"67d2fcf276fcd9cf743ad4be9a9ef5828adc082f\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:51:13Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.4\", GitCommit:\"67d2fcf276fcd9cf743ad4be9a9ef5828adc082f\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:41:55Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n\r\n- Cloud provider or hardware configuration:\r\nvsphere\r\n- OS (e.g: `cat /etc/os-release`):\r\n```\r\nNAME=\"Red Hat Enterprise Linux Server\"\r\nVERSION=\"7.6 (Maipo)\"\r\nID=\"rhel\"\r\nID_LIKE=\"fedora\"\r\nVARIANT=\"Server\"\r\nVARIANT_ID=\"server\"\r\nVERSION_ID=\"7.6\"\r\nPRETTY_NAME=\"Red Hat Enterprise Linux Server 7.6 (Maipo)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:redhat:enterprise_linux:7.6:GA:server\"\r\nHOME_URL=\"https://www.redhat.com/\"\r\nBUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\r\n\r\nREDHAT_BUGZILLA_PRODUCT=\"Red Hat Enterprise Linux 7\"\r\nREDHAT_BUGZILLA_PRODUCT_VERSION=7.6\r\nREDHAT_SUPPORT_PRODUCT=\"Red Hat Enterprise Linux\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7.6\"\r\n```\r\n- Kernel (e.g. `uname -a`):\r\n```\r\n[root@henry-c1 ~]# uname -a\r\nLinux henry-c1 3.10.0-1062.1.2.el7.x86_64 #1 SMP Mon Sep 16 14:19:51 EDT 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n- Install tools:\r\nansible\r\n- Network plugin and version (if this is a network-related bug):\r\ncalico v3.5.6\r\n- Others:\r\n",
  "closed_at": "2019-12-09T09:05:11Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85886/comments",
  "created_at": "2019-12-04T09:30:22Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85886/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/85886",
  "id": 532556119,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cloud Provider.",
      "id": 958178286,
      "name": "sig/cloud-provider",
      "node_id": "MDU6TGFiZWw5NTgxNzgyODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cloud-provider"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85886/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MzI1NTYxMTk=",
  "number": 85886,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "ipv6 support issue for vsphere cloud privider",
  "updated_at": "2019-12-09T09:05:11Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/85886",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/16233859?v=4",
    "events_url": "https://api.github.com/users/hubv/events{/privacy}",
    "followers_url": "https://api.github.com/users/hubv/followers",
    "following_url": "https://api.github.com/users/hubv/following{/other_user}",
    "gists_url": "https://api.github.com/users/hubv/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hubv",
    "id": 16233859,
    "login": "hubv",
    "node_id": "MDQ6VXNlcjE2MjMzODU5",
    "organizations_url": "https://api.github.com/users/hubv/orgs",
    "received_events_url": "https://api.github.com/users/hubv/received_events",
    "repos_url": "https://api.github.com/users/hubv/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hubv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hubv/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hubv"
  }
}