{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/40677631?v=4",
    "events_url": "https://api.github.com/users/M00nF1sh/events{/privacy}",
    "followers_url": "https://api.github.com/users/M00nF1sh/followers",
    "following_url": "https://api.github.com/users/M00nF1sh/following{/other_user}",
    "gists_url": "https://api.github.com/users/M00nF1sh/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/M00nF1sh",
    "id": 40677631,
    "login": "M00nF1sh",
    "node_id": "MDQ6VXNlcjQwNjc3NjMx",
    "organizations_url": "https://api.github.com/users/M00nF1sh/orgs",
    "received_events_url": "https://api.github.com/users/M00nF1sh/received_events",
    "repos_url": "https://api.github.com/users/M00nF1sh/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/M00nF1sh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/M00nF1sh/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/M00nF1sh"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/40677631?v=4",
      "events_url": "https://api.github.com/users/M00nF1sh/events{/privacy}",
      "followers_url": "https://api.github.com/users/M00nF1sh/followers",
      "following_url": "https://api.github.com/users/M00nF1sh/following{/other_user}",
      "gists_url": "https://api.github.com/users/M00nF1sh/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/M00nF1sh",
      "id": 40677631,
      "login": "M00nF1sh",
      "node_id": "MDQ6VXNlcjQwNjc3NjMx",
      "organizations_url": "https://api.github.com/users/M00nF1sh/orgs",
      "received_events_url": "https://api.github.com/users/M00nF1sh/received_events",
      "repos_url": "https://api.github.com/users/M00nF1sh/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/M00nF1sh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/M00nF1sh/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/M00nF1sh"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!-->\r\n\r\n**What happened**:\r\n\r\nWe created a LoadBalancer service with type 'nlb' with two listeners forwarding traffic on two different ports. The service was created correctly along with the target groups and was functionning correctly.\r\n\r\nAround 20 hours later, no traffic was flowing from clients to any k8s nodes. While troubleshooting we discovered that the k8s node instance security group was lacking the input rules allowing traffic to the node ports for this LB.\r\n\r\nWe deleted the service and recreated it. The service started working normally again, but we found out that the two target groups were missing their k8s tags. \r\n\r\nThe logs contain the following error:\r\n~~~\r\nE0129 14:47:01.381032       1 service_controller.go:219] error processing service scalable/pr-testing (will retry): failed to ensure load balancer for service scalable/pr-testing: Error adding tags after modifying load balancer targets: \"ValidationError: Only one resource can be tagged at a time\\n\\tstatus code: 400, request id: bc7a47eb-23d4-11e9-9920-b76ff2fbca55\"\r\nI0129 14:47:01.381136       1 event.go:218] Event(v1.ObjectReference{Kind:\"Service\", Namespace:\"scalable\", Name:\"pr-testing\", UID:\"b84f1aaf-23d4-11e9-8b3c-0a73252851de\", APIVersion:\"v1\", ResourceVersion:\"120452349\", FieldPath:\"\"}): type: 'Warning' reason: 'CreatingLoadBalancerFailed' Error creating load balancer (will retry): failed to ensure load balancer for service scalable/pr-testing: Error adding tags after modifying load balancer targets: \"ValidationError: Only one resource can be tagged at a time\\n\\tstatus code: 400, request id: bc7a47eb-23d4-11e9-9920-b76ff2fbca55\"\r\n~~~\r\n\r\n**What you expected to happen**:\r\n\r\nWe expected the NLB target groups to have k8s tags, so that k8s could remember it created them.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nCreate a k8s service with NLB:\r\n~~~yaml\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  annotations:\r\n    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: \"true\"\r\n    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: \"300\"\r\n    service.beta.kubernetes.io/aws-load-balancer-type: nlb\r\n  labels:\r\n    app: pr-testing\r\n  name: pr-testing\r\nspec:\r\n  externalTrafficPolicy: Cluster\r\n  ports:\r\n  - name: non-ssl\r\n    port: 2345\r\n    protocol: TCP\r\n    targetPort: 2345\r\n  - name: ssl\r\n    port: 2445\r\n    protocol: TCP\r\n    targetPort: 2445\r\n  selector:\r\n    app: pr-testing\r\n  sessionAffinity: None\r\n  type: LoadBalancer\r\n~~~\r\n\r\nAdd a simple deployment that is matched by this service.\r\n\r\n**Anything else we need to know?**:\r\n\r\nLooking at AWS cloudtrail we could see the following error event:\r\n~~~json\r\n{\r\n    \"eventVersion\": \"1.05\",\r\n    \"userIdentity\": {\r\n       // elided for security reasons\r\n    },\r\n    \"eventTime\": \"2019-01-29T14:47:01Z\",\r\n    \"eventSource\": \"elasticloadbalancing.amazonaws.com\",\r\n    \"eventName\": \"AddTags\",\r\n    \"awsRegion\": \"us-east-1\",\r\n    \"sourceIPAddress\": \"34.201.38.207\",\r\n    \"userAgent\": \"aws-sdk-go/1.12.7 (go1.9.3; linux; amd64)\",\r\n    \"errorCode\": \"ValidationException\",\r\n    \"errorMessage\": \"Only one resource can be tagged at a time\",\r\n    \"requestParameters\": {\r\n        \"tags\": [\r\n            {\r\n                \"value\": \"kubernetes\",\r\n                \"key\": \"KubernetesCluster\"\r\n            },\r\n            {\r\n                \"value\": \"owned\",\r\n                \"key\": \"kubernetes.io/cluster/kubernetes\"\r\n            },\r\n            {\r\n                \"value\": \"scalable/pr-testing\",\r\n                \"key\": \"kubernetes.io/service-name\"\r\n            }\r\n        ],\r\n        \"resourceArns\": [\r\n            \"arn:aws:elasticloadbalancing:us-east-1:158809441554:targetgroup/k8s-tg-67535809ebce3-2345-30034/8051fd2606c91a15\",\r\n            \"arn:aws:elasticloadbalancing:us-east-1:158809441554:targetgroup/k8s-tg-67535809ebce3-2445-31527/f32c335558de58e7\"\r\n        ]\r\n    },\r\n    \"responseElements\": null,\r\n    \"requestID\": \"bc7a47eb-23d4-11e9-9920-b76ff2fbca55\",\r\n    \"eventID\": \"ec99d2d9-c6be-419c-93e1-eeb7dc81a13a\",\r\n    \"eventType\": \"AwsApiCall\",\r\n    \"apiVersion\": \"2015-12-01\",\r\n    \"recipientAccountId\": \"158809441554\"\r\n}\r\n~~~\r\n\r\nSo the `AddTags` API request was called with two Resource ARNs, which is confirmed by the code:\r\nhttps://github.com/kubernetes/kubernetes/blob/30ed3b41b7b080cf37639371726a445032d5ef29/pkg/cloudprovider/providers/aws/aws_loadbalancer.go#L309-L312\r\n\r\nSince we have two target groups, there are two resources to tag.\r\nExcept that the AWS API while allowing to send more than one resource ARNs doesn't allow it returning a validation error.\r\n\r\nThis could be solved by doing one `AddTags` per target groups.\r\n\r\nNote that this can't happen on a Classic LB because there's no target groups.\r\n\r\nI believe that those missing tags on the target groups are the root cause of the deletion of the security group rules allowing traffic to reach the nodeports, with this (hypothetical and unproved) scenario:\r\n\r\n1. k8s creates the target groups, the NLB, the listeners, the sg input rules\r\n2. k8s fails to tag the target groups, but doesn't rollback anything\r\n3. in a subsequent convergence loops, k8s notices that there are two k8s-managed Security Group input rules, but those don't match any Target Groups or match Target Groups that are not managed by k8s (because they don't have the owner tags)\r\n4. k8s deletes those rules\r\n\r\nUnfortunately we don't see the rule deletion in the controller manager logs, but it appears in Cloudtrail:\r\n~~~json\r\n{\r\n    \"eventVersion\": \"1.05\",\r\n    \"userIdentity\": {\r\n       // elided for security reasons\r\n    },\r\n    \"eventTime\": \"2019-01-29T10:18:48Z\",\r\n    \"eventSource\": \"ec2.amazonaws.com\",\r\n    \"eventName\": \"RevokeSecurityGroupIngress\",\r\n    \"awsRegion\": \"us-east-1\",\r\n    \"sourceIPAddress\": \"34.201.38.207\",\r\n    \"userAgent\": \"aws-sdk-go/1.12.7 (go1.9.3; linux; amd64)\",\r\n    \"requestParameters\": {\r\n        \"groupId\": \"sg-b6c7efcc\",\r\n        \"ipPermissions\": {\r\n            \"items\": [\r\n                {\r\n                    \"ipProtocol\": \"tcp\",\r\n                    \"fromPort\": 32443,\r\n                    \"toPort\": 32443,\r\n                    \"groups\": {},\r\n                    \"ipRanges\": {\r\n                        \"items\": [\r\n                            {\r\n                                \"cidrIp\": \"10.16.0.0/16\",\r\n                                \"description\": \"kubernetes.io/rule/nlb/health=a9acb96a5230711e98bec125cb496f33\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"ipv6Ranges\": {},\r\n                    \"prefixListIds\": {}\r\n                },\r\n                {\r\n                    \"ipProtocol\": \"tcp\",\r\n                    \"fromPort\": 30346,\r\n                    \"toPort\": 30346,\r\n                    \"groups\": {},\r\n                    \"ipRanges\": {\r\n                        \"items\": [\r\n                            {\r\n                                \"cidrIp\": \"10.16.0.0/16\",\r\n                                \"description\": \"kubernetes.io/rule/nlb/health=a9acb96a5230711e98bec125cb496f33\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"ipv6Ranges\": {},\r\n                    \"prefixListIds\": {}\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"responseElements\": {\r\n        \"requestId\": \"3ed62fec-3e79-4be5-a302-33b139afa49d\",\r\n        \"_return\": true\r\n    },\r\n    \"requestID\": \"3ed62fec-3e79-4be5-a302-33b139afa49d\",\r\n    \"eventID\": \"e5c573fa-e68d-4e7f-897f-560ec9ee1008\",\r\n    \"eventType\": \"AwsApiCall\",\r\n    \"recipientAccountId\": \"158809441554\"\r\n}\r\n~~~\r\n\r\nLet me know if you have any questions,\r\n\r\n**Environment**:\r\n- Kubernetes version: 1.10.7\r\n- Cloud provider or hardware configuration: AWS\r\n- OS (e.g. from /etc/os-release): CoreOS 1967.3.0\r\n- Kernel (e.g. `uname -a`): Linux 4.14.88-coreos\r\n- Install tools: home grown\r\n- Others:\r\n",
  "closed_at": "2019-02-08T01:12:11Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73479/comments",
  "created_at": "2019-01-29T16:06:01Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73479/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/73479",
  "id": 404364872,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73479/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0MDQzNjQ4NzI=",
  "number": 73479,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "AWS NLB created without k8s tags on target groups",
  "updated_at": "2019-02-08T01:12:11Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/73479",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/20242?v=4",
    "events_url": "https://api.github.com/users/masterzen/events{/privacy}",
    "followers_url": "https://api.github.com/users/masterzen/followers",
    "following_url": "https://api.github.com/users/masterzen/following{/other_user}",
    "gists_url": "https://api.github.com/users/masterzen/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/masterzen",
    "id": 20242,
    "login": "masterzen",
    "node_id": "MDQ6VXNlcjIwMjQy",
    "organizations_url": "https://api.github.com/users/masterzen/orgs",
    "received_events_url": "https://api.github.com/users/masterzen/received_events",
    "repos_url": "https://api.github.com/users/masterzen/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/masterzen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/masterzen/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/masterzen"
  }
}