{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- This form is for bug reports and feature requests ONLY!\r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/.\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n**What happened**:\r\n\r\nI'm using a proxy-pod to forward both `80/http` and `443/https` privileged ports to an `ingress-nginx` service using the following configuration:\r\n\r\n```yaml\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: ingress-proxy\r\n  namespace: ingress-nginx\r\nspec:\r\n  containers:\r\n  - name: proxy-http\r\n    image: gcr.io/google_containers/proxy-to-service:v2\r\n    args: [ \"tcp\", \"80\", \"ingress-nginx.ingress-nginx\" ]\r\n    ports:\r\n    - name: http\r\n      protocol: TCP\r\n      containerPort: 80\r\n      hostPort: 80\r\n      hostIP: 37.59.4.29\r\n  - name: proxy-https\r\n    image: gcr.io/google_containers/proxy-to-service:v2\r\n    args: [ \"tcp\", \"443\", \"ingress-nginx.ingress-nginx\" ]\r\n    ports:\r\n    - name: https\r\n      protocol: TCP\r\n      containerPort: 443\r\n      hostPort: 443\r\n      hostIP: 37.59.4.29\r\n```\r\n\r\nHowever, when I start this service, it somehow highjacks the ports for other host IPs as well.\r\n\r\nI have a legacy nginx-proxy running on the same server, inside docker bound on specific non-conflicting IPs, but as soon as I start the pod above, it breaks SSL termination of the existing nginx proxy (outputing the \"Fake ingress certificate\").\r\n\r\n- Existing docker-compose:\r\n\r\n```\r\n# docker-compose ps\r\n         Name                        Command               State                                                    Ports                                                  \r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nnginx_proxy               nginx -g daemon off;             Up      5.135.123.160:443->443/tcp,5.135.123.162:443->443/tcp, 5.135.123.160:80->80/tcp,5.135.123.162:80->80/tcp\r\nnginx_proxy_docker_gen    /bin/sh -c /usr/local/bin/ ...   Up                                                                                                              \r\nnginx_proxy_letsencrypt   /bin/bash /app/entrypoint. ...   Up \r\n```\r\n\r\n- Working SSL termination before pod start:\r\n\r\n```\r\n# curl -iv https://registry.mgcrea.io 2>&1 \r\n[...]\r\n* Server certificate:\r\n*  subject: CN=gitlab.mgcrea.io\r\n*  start date: Jun 11 21:55:37 2018 GMT\r\n*  expire date: Sep  9 21:55:37 2018 GMT\r\n*  subjectAltName: host \"registry.mgcrea.io\" matched cert's \"registry.mgcrea.io\"\r\n*  issuer: C=US; O=Let's Encrypt; CN=Let's Encrypt Authority X3\r\n*  SSL certificate verify ok.\r\n```\r\n\r\n- Non conflicting IP:\r\n\r\n```\r\n$ dig @8.8.8.8 registry.mgcrea.io\r\n[...]\r\n;; ANSWER SECTION:\r\nregistry.mgcrea.io.\t3599\tIN\tCNAME\tns349683-a.mgcrea.io.\r\nns349683-a.mgcrea.io.\t3599\tIN\tA\t5.135.123.160\r\n```\r\n\r\n- Broken SSL termination after pod start:\r\n\r\n```\r\n# curl -iv https://registry.mgcrea.io 2>&1 \r\n[...]\r\n* SSL certificate problem: unable to get local issuer certificate\r\n```\r\n\r\n```\r\n# openssl s_client -connect registry.mgcrea.io:443\r\n[...]\r\n-----END CERTIFICATE-----\r\nsubject=/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\r\nissuer=/O=Acme Co/CN=Kubernetes Ingress Controller Fake Certificate\r\n---\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nInitial services should not be affected by a Pod with a proper, non-conflicting HostIP/HostPort combination.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nSee above pod template.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n```\r\n$ kubectl version\r\nClient Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.3\", GitCommit:\"2bba0127d85d5a46ab4b778548be28623b32d0b0\", GitTreeState:\"clean\", BuildDate:\"2018-05-21T09:17:39Z\", GoVersion:\"go1.9.3\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"11\", GitVersion:\"v1.11.0\", GitCommit:\"91e7b4fd31fcd3d5f436da26c980becec37ceefe\", GitTreeState:\"clean\", BuildDate:\"2018-06-27T20:08:34Z\", GoVersion:\"go1.10.2\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- Cloud provider or hardware configuration:\r\n```\r\nBare metal setup via kubeadm\r\n```\r\n- OS (e.g. from /etc/os-release):\r\n```\r\ncat /etc/os-release\r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.04.4 LTS\"\r\nVERSION_ID=\"16.04\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\nVERSION_CODENAME=xenial\r\nUBUNTU_CODENAME=xenial\r\n```\r\n- Kernel (e.g. `uname -a`):\r\n```\r\nLinux fr-3eaa 4.15.0-23-generic #25~16.04.1-Ubuntu SMP Fri May 25 04:50:20 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n- Install tools:\r\n```\r\nkubeadm version: &version.Info{Major:\"1\", Minor:\"11\", GitVersion:\"v1.11.0\", GitCommit:\"91e7b4fd31fcd3d5f436da26c980becec37ceefe\", GitTreeState:\"clean\", BuildDate:\"2018-06-27T20:14:41Z\", GoVersion:\"go1.10.2\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n- Others:\r\n\r\n> Using flannel (followed official kubeadm tutorial):\r\n```\r\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml\r\n```\r\n> Up-to-date (non-supported) docker:\r\n```\r\n# docker -v\r\nDocker version 18.03.1-ce, build 9ee9f40\r\n```\r\n\r\n",
  "closed_at": "2019-02-20T20:51:15Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 12,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65976/comments",
  "created_at": "2018-07-09T14:08:54Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65976/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/65976",
  "id": 339465450,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65976/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzk0NjU0NTA=",
  "number": 65976,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Pod hostIP/hostPort settings not respected (highjacked ports on other host IPs)",
  "updated_at": "2019-02-20T20:51:15Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65976",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/108273?v=4",
    "events_url": "https://api.github.com/users/mgcrea/events{/privacy}",
    "followers_url": "https://api.github.com/users/mgcrea/followers",
    "following_url": "https://api.github.com/users/mgcrea/following{/other_user}",
    "gists_url": "https://api.github.com/users/mgcrea/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mgcrea",
    "id": 108273,
    "login": "mgcrea",
    "node_id": "MDQ6VXNlcjEwODI3Mw==",
    "organizations_url": "https://api.github.com/users/mgcrea/orgs",
    "received_events_url": "https://api.github.com/users/mgcrea/received_events",
    "repos_url": "https://api.github.com/users/mgcrea/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mgcrea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mgcrea/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mgcrea"
  }
}