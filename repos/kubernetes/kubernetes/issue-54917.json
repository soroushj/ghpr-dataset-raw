{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?**:\r\nfeature request\r\n\r\n> Uncomment only one, leave it on its own line: \r\n>\r\n> /kind feature\r\n\r\n\r\n**What happened**:\r\nAs far, GPU and hugepages are particular resources which reqiure limits must equal to requests.\r\nBut this rule may be broken when creating LimitRange, LimitRange with different values in default and defaultRequest can be created successfully, which would cause error in creating pods afterwards.\r\nWe should not leave this error to pod creation but tell the users when creating the LimitRange.\r\n\r\n**What you expected to happen**:\r\nValidate if values are proper for GPU and hugepages when creating LimitRange.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1. Create LimitRange with the following yaml:\r\n```\r\napiVersion: v1\r\nkind: LimitRange\r\nmetadata:\r\n  name: default-test\r\nspec:\r\n  limits:\r\n   default:\r\n      hugepages-2Mi: 40Mi\r\n      alpha.kubernetes.io/nvidia-gpu: 3\r\n    defaultRequest:\r\n      hugepages-2Mi: 30Mi\r\n      alpha.kubernetes.io/nvidia-gpu: 2\r\n    type: Container\r\n```\r\n\r\n2. Create pods with the following yaml:\r\n```\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  name: test\r\nspec:\r\n  containers:\r\n   image: tomcat_java:v10.0\r\n    command:\r\n     /home/test.sh\r\n    name: example\r\n    volumeMounts:\r\n     mountPath: /hugepages\r\n      name: hugepage\r\n  volumes:\r\n   name: hugepage\r\n    emptyDir:\r\n      medium: HugePages\r\n```\r\n\r\n3. It would prompt error like:\r\n```\r\nThe Pod \"test\" is invalid:\r\nspec.containers[0].resources.requests: Invalid value: \"2\": must be equal to alpha.kubernetes.io/nvidia-gpu limit\r\nspec.containers[0].resources.requests: Invalid value: \"30Mi\": must be equal to alpha.kubernetes.io/nvidia-gpu limit\r\n```\r\nmaybe we should let this error happen in creating LimitRange.\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"9+\", GitVersion:\"v1.9.0-alpha.1.1879+d9459270770143\", GitCommit:\"d94592707701438fece7ab7e49ea9e6a90fe7993\", GitTreeState:\"clean\", BuildDate:\"2017-11-01T07:53:05Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"9+\", GitVersion:\"v1.9.0-alpha.1.1879+d9459270770143\", GitCommit:\"d94592707701438fece7ab7e49ea9e6a90fe7993\", GitTreeState:\"clean\", BuildDate:\"2017-11-01T07:50:07Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n- Cloud provider or hardware configuration: bare metal\r\n- OS (e.g. from /etc/os-release): Ubuntu 16.04\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Others:\r\n\r\n/cc @derekwaynecarr @vishh would this a possible feature?",
  "closed_at": "2017-11-09T10:58:16Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54917/comments",
  "created_at": "2017-11-01T08:27:18Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54917/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/54917",
  "id": 270232340,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54917/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNzAyMzIzNDA=",
  "number": 54917,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "[feature] for GPU and hugepages, default must match defaultRequest in LimitRange if both are specified",
  "updated_at": "2017-11-09T10:58:16Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54917",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/23203101?v=4",
    "events_url": "https://api.github.com/users/tianshapjq/events{/privacy}",
    "followers_url": "https://api.github.com/users/tianshapjq/followers",
    "following_url": "https://api.github.com/users/tianshapjq/following{/other_user}",
    "gists_url": "https://api.github.com/users/tianshapjq/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tianshapjq",
    "id": 23203101,
    "login": "tianshapjq",
    "node_id": "MDQ6VXNlcjIzMjAzMTAx",
    "organizations_url": "https://api.github.com/users/tianshapjq/orgs",
    "received_events_url": "https://api.github.com/users/tianshapjq/received_events",
    "repos_url": "https://api.github.com/users/tianshapjq/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tianshapjq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tianshapjq/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tianshapjq"
  }
}