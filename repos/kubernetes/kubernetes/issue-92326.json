{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/\r\n-->\r\n\r\n\r\n**What happened**:\r\nWhen Managed Service Identity (MSI) is used to pull images from Azure Container Registry (ACR), it may fail with `Failed to pull image \"<redacted>.azurecr.io/<redacted>\": rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/<redacted>: unauthorized: authentication required` even though the MSI has reader access to the ACR. It will recover in 1-2 minutes.\r\n\r\n**What you expected to happen**:\r\nIt should not have any unauthorized error.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1. run a k8s deployment using public docker image\r\n2. immediately run a k8s deployment using ACR image\r\n3. observe the error in get events\r\n```\r\n66s         Normal    Scheduled           Pod          Successfully assigned default/nginx-deployment-7fd6966748-txsdm to aks-agentpool-17585647-vmss000001\r\n65s         Normal    Pulling             Pod          Pulling image \"nginx:1.14.2\"\r\n61s         Normal    Pulled              Pod          Successfully pulled image \"nginx:1.14.2\"\r\n58s         Normal    Created             Pod          Created container nginx\r\n58s         Normal    Started             Pod          Started container nginx\r\n66s         Normal    Scheduled           Pod          Successfully assigned default/nginx-deployment-7fd6966748-xmk6h to aks-agentpool-17585647-vmss000000\r\n65s         Normal    Pulling             Pod          Pulling image \"nginx:1.14.2\"\r\n61s         Normal    Pulled              Pod          Successfully pulled image \"nginx:1.14.2\"\r\n58s         Normal    Created             Pod          Created container nginx\r\n58s         Normal    Started             Pod          Started container nginx\r\n66s         Normal    SuccessfulCreate    ReplicaSet   Created pod: nginx-deployment-7fd6966748-xmk6h\r\n66s         Normal    SuccessfulCreate    ReplicaSet   Created pod: nginx-deployment-7fd6966748-txsdm\r\n66s         Normal    SuccessfulCreate    ReplicaSet   Created pod: nginx-deployment-7fd6966748-bxb62\r\n66s         Normal    ScalingReplicaSet   Deployment   Scaled up replica set nginx-deployment-7fd6966748 to 3\r\n46s         Normal    Scheduled           Pod          Successfully assigned default/ubuntu-56b4744f8b-6mcpk to aks-agentpool-17585647-vmss000000\r\n4s          Normal    Pulling             Pod          Pulling image \"<redacted>.azurecr.io/<redacted>\"\r\n30s         Warning   Failed              Pod          Failed to pull image \"<redacted>.azurecr.io/<redacted>\": rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/<redacted>: unauthorized: authentication required\r\n30s         Warning   Failed              Pod          Error: ErrImagePull\r\n16s         Normal    BackOff             Pod          Back-off pulling image \"<redacted>.azurecr.io/<redacted>\"\r\n16s         Warning   Failed              Pod          Error: ImagePullBackOff\r\n```\r\n\r\nKubelet log:\r\n```\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.421665   29650 provider.go:124] Refreshing cache for provider: *credentialprovider.defaultDockerConfigProvider\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422075   29650 config.go:137] looking for config.json at /var/lib/kubelet/config.json\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422119   29650 config.go:137] looking for config.json at /config.json\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422130   29650 config.go:137] looking for config.json at /.docker/config.json\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422137   29650 config.go:137] looking for config.json at /.docker/config.json\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422148   29650 config.go:107] looking for .dockercfg at /var/lib/kubelet/.dockercfg\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422177   29650 config.go:107] looking for .dockercfg at /.dockercfg\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422186   29650 config.go:107] looking for .dockercfg at /.dockercfg\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422194   29650 config.go:107] looking for .dockercfg at /.dockercfg\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422202   29650 provider.go:94] Unable to parse Docker config file: couldn't find valid .dockercfg after checking in [/var/lib/kubelet   /]\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422210   29650 provider.go:124] Refreshing cache for provider: *azure.acrProvider\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422232   29650 azure_credentials.go:189] try to provide secret for image docker.io/library/nginx\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422244   29650 azure_credentials.go:194] image(docker.io/library/nginx) is not from ACR, skip MSI authentication\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.422262   29650 kuberuntime_image.go:47] Pulling image \"nginx:1.14.2\" without credentials\r\nJun 19 22:36:33 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:33.421975   29650 event.go:258] Event(v1.ObjectReference{Kind:\"Pod\", Namespace:\"default\", Name:\"nginx-deployment-7fd6966748-xmk6h\", UID:\"128464dd-b9d3-4e54-a3f9-77d7af6e3be2\", APIVersion:\"v1\", ResourceVersion:\"158317\", FieldPath:\"spec.containers{nginx}\"}): type: 'Normal' reason: 'Pulling' Pulling image \"nginx:1.14.2\"\r\nJun 19 22:36:37 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:37.096673   29650 kube_docker_client.go:345] Stop pulling image \"nginx:1.14.2\": \"Status: Downloaded newer image for nginx:1.14.2\"\r\n\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:54.067201   29650 event.go:258] Event(v1.ObjectReference{Kind:\"Pod\", Namespace:\"default\", Name:\"ubuntu-56b4744f8b-6mcpk\", UID:\"d9d46d4b-7d40-4c10-82c4-07a36a788d7b\", APIVersion:\"v1\", ResourceVersion:\"158402\", FieldPath:\"spec.containers{ubuntu}\"}): type: 'Normal' reason: 'Pulling' Pulling image \"<redacted>.azurecr.io/<redacted>\"\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:54.175261   29650 kubelet.go:1975] SyncLoop (housekeeping)\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: E0619 22:36:54.310523   29650 remote_image.go:113] PullImage \"<redacted>.azurecr.io/<redacted>\" from image service failed: rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/fundamental/test/manifests/v0.0.12: unauthorized: authentication required\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: E0619 22:36:54.310655   29650 kuberuntime_manager.go:779] container start failed: ErrImagePull: rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/fundamental/test/manifests/v0.0.12: unauthorized: authentication required\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: E0619 22:36:54.310682   29650 pod_workers.go:190] Error syncing pod d9d46d4b-7d40-4c10-82c4-07a36a788d7b (\"ubuntu-56b4744f8b-6mcpk_default(d9d46d4b-7d40-4c10-82c4-07a36a788d7b)\"), skipping: failed to \"StartContainer\" for \"ubuntu\" with ErrImagePull: \"rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/fundamental/test/manifests/v0.0.12: unauthorized: authentication required\"\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:54.310974   29650 event.go:258] Event(v1.ObjectReference{Kind:\"Pod\", Namespace:\"default\", Name:\"ubuntu-56b4744f8b-6mcpk\", UID:\"d9d46d4b-7d40-4c10-82c4-07a36a788d7b\", APIVersion:\"v1\", ResourceVersion:\"158402\", FieldPath:\"spec.containers{ubuntu}\"}): type: 'Warning' reason: 'Failed' Failed to pull image \"<redacted>.azurecr.io/<redacted>\": rpc error: code = Unknown desc = Error response from daemon: Get https://<redacted>.azurecr.io/v2/fundamental/test/manifests/v0.0.12: unauthorized: authentication required\r\nJun 19 22:36:54 aks-agentpool-17585647-vmss000000 kubelet[29650]: I0619 22:36:54.311026   29650 event.go:258] Event(v1.ObjectReference{Kind:\"Pod\", Namespace:\"default\", Name:\"ubuntu-56b4744f8b-6mcpk\", UID:\"d9d46d4b-7d40-4c10-82c4-07a36a788d7b\", APIVersion:\"v1\", ResourceVersion:\"158402\", FieldPath:\"spec.containers{ubuntu}\"}): type: 'Warning' reason: 'Failed' Error: ErrImagePull\r\n```\r\n**Anything else we need to know?**:\r\nWhen MSI is configured in kubelet and a non-ACR docker image is pulled, the code [here](https://github.com/kubernetes/kubernetes/blob/v1.15.10/pkg/credentialprovider/azure/azure_credentials.go#L194) will skip the MSI authentication flow and [return an empty docker registry cfg](https://github.com/kubernetes/kubernetes/blob/v1.15.10/pkg/credentialprovider/azure/azure_credentials.go#L213) assuming it's anonymous ACR auth. The resulting docker registry cfg is [cached in the credential provider](https://github.com/kubernetes/kubernetes/blob/v1.15.10/pkg/credentialprovider/provider.go#L120). So any image pull from ACR will use the staled docker registry cfg and got unauthorized authentication until the cache is refreshed\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): 1.15.10\r\n- Cloud provider or hardware configuration: AKS with MSI\r\n",
  "closed_at": "2020-06-23T05:00:21Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92326/comments",
  "created_at": "2020-06-19T23:01:31Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92326/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/92326",
  "id": 642254610,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to azure provider",
      "id": 852130786,
      "name": "area/provider/azure",
      "node_id": "MDU6TGFiZWw4NTIxMzA3ODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/provider/azure"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cloud Provider.",
      "id": 958178286,
      "name": "sig/cloud-provider",
      "node_id": "MDU6TGFiZWw5NTgxNzgyODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cloud-provider"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92326/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU2NDIyNTQ2MTA=",
  "number": 92326,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Pulling Azure Container Registry image using Managed Service Identity may fail",
  "updated_at": "2020-06-23T05:00:21Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/92326",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/4204090?v=4",
    "events_url": "https://api.github.com/users/weinong/events{/privacy}",
    "followers_url": "https://api.github.com/users/weinong/followers",
    "following_url": "https://api.github.com/users/weinong/following{/other_user}",
    "gists_url": "https://api.github.com/users/weinong/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/weinong",
    "id": 4204090,
    "login": "weinong",
    "node_id": "MDQ6VXNlcjQyMDQwOTA=",
    "organizations_url": "https://api.github.com/users/weinong/orgs",
    "received_events_url": "https://api.github.com/users/weinong/received_events",
    "repos_url": "https://api.github.com/users/weinong/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/weinong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/weinong/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/weinong"
  }
}