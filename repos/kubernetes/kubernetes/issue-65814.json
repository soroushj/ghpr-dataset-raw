{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- This form is for bug reports and feature requests ONLY!\r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/.\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind feature\r\n\r\n**What happened**:\r\n\r\nThere is no guarantee SDK(s) handling requests to cloud providers will response in a reasonable amount of time. Some periodically running routines  (e.g. node status update) can hang for a long time before they finish their job which can cause Kubelet to loose its ability to report/respond in time. E.g. request for node addresses that takes up to 20 minutes forbids the Kubelet to report its Ready state causing the node controller to evict pods from the underlying node.\r\n\r\nInstead of relying on individual implementation of SDKs to handle timeouts and request hanging, we should decouple the code responsible for retrieving the node address from a cloud provider and a code responsible for providing the latest node addresses so the node status update routine just reads the recently fetched addresses without any risk of hanging on the abstracted `NodeAddreses` call.\r\n\r\n**What you expected to happen**:\r\n\r\nThe node status update routine call to `NodeAddresses` does not hang for unpredictable amount of time. Otherwise, causing a node to be evicted. Instead, we should implement a go routine running in parallel to kubelet and responsible for fetching the node addresses, storing the recently fetched addresses into a cache. Kubelet will then just ask for the cached node addresses instead of directly talking to cloud provided SDK.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nMake sure a response from a cloud provider never returns when asking for node addresses.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g. from /etc/os-release):\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Others:\r\n\r\nNot filling those as it potentially affects every Kubernetes version on any cloud provider on any OS.",
  "closed_at": "2018-07-09T17:47:07Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65814/comments",
  "created_at": "2018-07-04T12:50:49Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65814/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/65814",
  "id": 338263658,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 116719829,
      "name": "area/kubelet",
      "node_id": "MDU6TGFiZWwxMTY3MTk4Mjk=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubelet"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65814/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzgyNjM2NTg=",
  "number": 65814,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Have requests to cloud provider non-blocking",
  "updated_at": "2018-07-09T17:47:07Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65814",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8055242?v=4",
    "events_url": "https://api.github.com/users/ingvagabund/events{/privacy}",
    "followers_url": "https://api.github.com/users/ingvagabund/followers",
    "following_url": "https://api.github.com/users/ingvagabund/following{/other_user}",
    "gists_url": "https://api.github.com/users/ingvagabund/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ingvagabund",
    "id": 8055242,
    "login": "ingvagabund",
    "node_id": "MDQ6VXNlcjgwNTUyNDI=",
    "organizations_url": "https://api.github.com/users/ingvagabund/orgs",
    "received_events_url": "https://api.github.com/users/ingvagabund/received_events",
    "repos_url": "https://api.github.com/users/ingvagabund/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ingvagabund/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ingvagabund/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ingvagabund"
  }
}