{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "Test Grid: https://k8s-testgrid.appspot.com/presubmits-kubernetes#pull-kubernetes-unit&include-filter-by-regex=run_recursive_resources_tests\r\nLast good: https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/50627/pull-kubernetes-unit/61621/\r\nFirst bad: https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-unit/61622/\r\nSuspected commit range: https://github.com/kubernetes/kubernetes/compare/bd28e6d...d0c4c56\r\nProbable PR: https://github.com/kubernetes/kubernetes/pull/54533\r\n\r\nExample [Build Log](https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/54790/pull-kubernetes-unit/61777/build-log.txt):\r\n```\r\nI1031 13:38:57.449] Recording: run_recursive_resources_tests\r\nI1031 13:38:57.450] Running command: run_recursive_resources_tests\r\nI1031 13:38:57.466] \r\nI1031 13:38:57.467] +++ Running case: test-cmd.run_recursive_resources_tests \r\nI1031 13:38:57.469] +++ working dir: /go/src/k8s.io/kubernetes\r\nI1031 13:38:57.471] +++ command: run_recursive_resources_tests\r\nI1031 13:38:57.478] +++ [1031 13:38:57] Testing recursive resources\r\nI1031 13:38:57.483] +++ [1031 13:38:57] Creating namespace namespace1509457137479932506\r\nI1031 13:38:57.610] namespace \"namespace1509457137479932506\" created\r\nI1031 13:38:57.714] Context \"test\" modified.\r\nI1031 13:38:57.849] test-cmd-util.sh:1858: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: \r\nI1031 13:38:58.227] \u001b(Btest-cmd-util.sh:1862: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:38:58.229] \u001b(BSuccessful\r\nI1031 13:38:58.229] message:pod \"busybox0\" created\r\nI1031 13:38:58.229] pod \"busybox1\" created\r\nI1031 13:38:58.229] error: error validating \"hack/testdata/recursive/pod/pod/busybox-broken.yaml\": error validating data: kind not set; if you choose to ignore these errors, turn validation off with --validate=false\r\nI1031 13:38:58.229] has:error validating data: kind not set\r\nI1031 13:38:58.394] test-cmd-util.sh:1867: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:38:58.680] \u001b(Btest-cmd-util.sh:1875: Successful get pods {{range.items}}{{(index .spec.containers 0).image}}:{{end}}: busybox:busybox:\r\nI1031 13:38:58.682] \u001b(BSuccessful\r\nI1031 13:38:58.682] message:error: unable to decode \"hack/testdata/recursive/pod/pod/busybox-broken.yaml\": Object 'Kind' is missing in '{\"apiVersion\":\"v1\",\"ind\":\"Pod\",\"metadata\":{\"labels\":{\"app\":\"busybox2\"},\"name\":\"busybox2\"},\"spec\":{\"containers\":[{\"command\":[\"sleep\",\"3600\"],\"image\":\"busybox\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"busybox\"}],\"restartPolicy\":\"Always\"}}'\r\nI1031 13:38:58.682] has:Object 'Kind' is missing\r\nI1031 13:38:58.851] test-cmd-util.sh:1882: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:38:59.235] \u001b(Btest-cmd-util.sh:1886: Successful get pods {{range.items}}{{.metadata.labels.status}}:{{end}}: replaced:replaced:\r\nI1031 13:38:59.237] \u001b(BSuccessful\r\nI1031 13:38:59.237] message:pod \"busybox0\" replaced\r\nI1031 13:38:59.238] pod \"busybox1\" replaced\r\nI1031 13:38:59.238] error: error validating \"hack/testdata/recursive/pod-modify/pod/busybox-broken.yaml\": error validating data: kind not set; if you choose to ignore these errors, turn validation off with --validate=false\r\nI1031 13:38:59.238] has:error validating data: kind not set\r\nI1031 13:38:59.406] test-cmd-util.sh:1891: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:38:59.578] \u001b(BSuccessful\r\nI1031 13:38:59.599] unable to decode \"hack/testdata/recursive/pod/pod/busybox-broken.yaml\": Object 'Kind' is missing in '{\"apiVersion\":\"v1\",\"ind\":\"Pod\",\"metadata\":{\"labels\":{\"app\":\"busybox2\"},\"name\":\"busybox2\"},\"spec\":{\"containers\":[{\"command\":[\"sleep\",\"3600\"],\"image\":\"busybox\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"busybox\"}],\"restartPolicy\":\"Always\"}}'\r\nI1031 13:38:59.599] has:Object 'Kind' is missing\r\nI1031 13:38:59.749] test-cmd-util.sh:1901: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:39:00.042] \u001b(Btest-cmd-util.sh:1905: Successful get pods {{range.items}}{{.metadata.annotations.annotatekey}}:{{end}}: annotatevalue:annotatevalue:\r\nI1031 13:39:00.044] \u001b(BSuccessful\r\nI1031 13:39:00.045] message:pod \"busybox0\" annotated\r\nI1031 13:39:00.045] pod \"busybox1\" annotated\r\nI1031 13:39:00.045] error: unable to decode \"hack/testdata/recursive/pod/pod/busybox-broken.yaml\": Object 'Kind' is missing in '{\"apiVersion\":\"v1\",\"ind\":\"Pod\",\"metadata\":{\"labels\":{\"app\":\"busybox2\"},\"name\":\"busybox2\"},\"spec\":{\"containers\":[{\"command\":[\"sleep\",\"3600\"],\"image\":\"busybox\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"busybox\"}],\"restartPolicy\":\"Always\"}}'\r\nI1031 13:39:00.045] has:Object 'Kind' is missing\r\nI1031 13:39:00.212] test-cmd-util.sh:1910: Successful get pods {{range.items}}{{.metadata.name}}:{{end}}: busybox0:busybox1:\r\nI1031 13:39:00.575] \u001b(Btest-cmd-util.sh:1914: Successful get pods {{range.items}}{{.metadata.labels.status}}:{{end}}: replaced:replaced:\r\nI1031 13:39:00.577] \u001b(BSuccessful\r\nI1031 13:39:00.577] message:Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply\r\nI1031 13:39:00.577] pod \"busybox0\" configured\r\nI1031 13:39:00.577] Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply\r\nI1031 13:39:00.577] pod \"busybox1\" configured\r\nI1031 13:39:00.578] error: error validating \"hack/testdata/recursive/pod-modify/pod/busybox-broken.yaml\": error validating data: kind not set; if you choose to ignore these errors, turn validation off with --validate=false\r\nI1031 13:39:00.578] has:error validating data: kind not set\r\nI1031 13:39:00.707] test-cmd-util.sh:1920: Successful get deployment {{range.items}}{{.metadata.name}}:{{end}}: \r\nI1031 13:39:00.896] \u001b(Bdeployment \"nginx\" created\r\nW1031 13:39:00.996] I1031 13:39:00.897117   15215 event.go:218] Event(v1.ObjectReference{Kind:\"Deployment\", Namespace:\"namespace1509457137479932506\", Name:\"nginx\", UID:\"da5eb3ec-be40-11e7-b109-0242ac110002\", APIVersion:\"extensions\", ResourceVersion:\"781\", FieldPath:\"\"}): type: 'Normal' reason: 'ScalingReplicaSet' Scaled up replica set nginx-5cb7fb9f96 to 3\r\nW1031 13:39:00.997] I1031 13:39:00.905030   15215 event.go:218] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"namespace1509457137479932506\", Name:\"nginx-5cb7fb9f96\", UID:\"da5f4858-be40-11e7-b109-0242ac110002\", APIVersion:\"extensions\", ResourceVersion:\"782\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: nginx-5cb7fb9f96-vn6l6\r\nW1031 13:39:00.997] I1031 13:39:00.907985   15215 event.go:218] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"namespace1509457137479932506\", Name:\"nginx-5cb7fb9f96\", UID:\"da5f4858-be40-11e7-b109-0242ac110002\", APIVersion:\"extensions\", ResourceVersion:\"782\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: nginx-5cb7fb9f96-wlxhx\r\nW1031 13:39:00.997] I1031 13:39:00.908780   15215 event.go:218] Event(v1.ObjectReference{Kind:\"ReplicaSet\", Namespace:\"namespace1509457137479932506\", Name:\"nginx-5cb7fb9f96\", UID:\"da5f4858-be40-11e7-b109-0242ac110002\", APIVersion:\"extensions\", ResourceVersion:\"782\", FieldPath:\"\"}): type: 'Normal' reason: 'SuccessfulCreate' Created pod: nginx-5cb7fb9f96-6wk2n\r\nI1031 13:39:01.098] test-cmd-util.sh:1924: Successful get deployment {{range.items}}{{.metadata.name}}:{{end}}: nginx:\r\nI1031 13:39:01.231] \u001b(Btest-cmd-util.sh:1925: Successful get deployment {{range.items}}{{(index .spec.template.spec.containers 0).image}}:{{end}}: gcr.io/google-containers/nginx:test-cmd:\r\nI1031 13:39:01.388] \u001b(Bextensions/v1beta1\r\nI1031 13:39:01.568] test-cmd-util.sh:1930: Successful get deployment nginx {{ .apiVersion }}: extensions/v1beta1\r\nI1031 13:39:01.570] \u001b(BFAIL!\r\nI1031 13:39:01.570] message:extensions/v1beta1\r\nI1031 13:39:01.570] has not:apps/v1beta1\r\nI1031 13:39:01.570] 1931 /go/src/k8s.io/kubernetes/hack/make-rules/test-cmd-util.sh\r\nI1031 13:39:01.598] +++ exit code: 1\r\nI1031 13:39:01.603] +++ error: 1\r\nI1031 13:39:01.629] Error when running run_recursive_resources_tests\r\n```\r\n\r\n---\r\ncc: @kubernetes/sig-cli-test-failures @mengqiy @monopole @smarterclayton @sttts @pwittrock",
  "closed_at": "2017-11-01T20:11:13Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54873/comments",
  "created_at": "2017-10-31T18:00:56Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54873/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/54873",
  "id": 270059307,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a consistently or frequently failing test.",
      "id": 496752468,
      "name": "kind/failing-test",
      "node_id": "MDU6TGFiZWw0OTY3NTI0Njg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/failing-test"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG CLI.",
      "id": 450823910,
      "name": "sig/cli",
      "node_id": "MDU6TGFiZWw0NTA4MjM5MTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cli"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54873/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNzAwNTkzMDc=",
  "number": 54873,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Flaky pre-submit: pull-kubernetes-unit - test-cmd.run_recursive_resources_tests",
  "updated_at": "2017-11-03T18:34:47Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/54873",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1431969?v=4",
    "events_url": "https://api.github.com/users/cblecker/events{/privacy}",
    "followers_url": "https://api.github.com/users/cblecker/followers",
    "following_url": "https://api.github.com/users/cblecker/following{/other_user}",
    "gists_url": "https://api.github.com/users/cblecker/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/cblecker",
    "id": 1431969,
    "login": "cblecker",
    "node_id": "MDQ6VXNlcjE0MzE5Njk=",
    "organizations_url": "https://api.github.com/users/cblecker/orgs",
    "received_events_url": "https://api.github.com/users/cblecker/received_events",
    "repos_url": "https://api.github.com/users/cblecker/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/cblecker/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cblecker/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/cblecker"
  }
}