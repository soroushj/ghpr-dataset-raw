{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/12699319?v=4",
    "events_url": "https://api.github.com/users/andrewsykim/events{/privacy}",
    "followers_url": "https://api.github.com/users/andrewsykim/followers",
    "following_url": "https://api.github.com/users/andrewsykim/following{/other_user}",
    "gists_url": "https://api.github.com/users/andrewsykim/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/andrewsykim",
    "id": 12699319,
    "login": "andrewsykim",
    "node_id": "MDQ6VXNlcjEyNjk5MzE5",
    "organizations_url": "https://api.github.com/users/andrewsykim/orgs",
    "received_events_url": "https://api.github.com/users/andrewsykim/received_events",
    "repos_url": "https://api.github.com/users/andrewsykim/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/andrewsykim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/andrewsykim/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/andrewsykim"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/12699319?v=4",
      "events_url": "https://api.github.com/users/andrewsykim/events{/privacy}",
      "followers_url": "https://api.github.com/users/andrewsykim/followers",
      "following_url": "https://api.github.com/users/andrewsykim/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewsykim/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andrewsykim",
      "id": 12699319,
      "login": "andrewsykim",
      "node_id": "MDQ6VXNlcjEyNjk5MzE5",
      "organizations_url": "https://api.github.com/users/andrewsykim/orgs",
      "received_events_url": "https://api.github.com/users/andrewsykim/received_events",
      "repos_url": "https://api.github.com/users/andrewsykim/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andrewsykim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewsykim/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andrewsykim"
    }
  ],
  "author_association": "NONE",
  "body": "<!-- This form is for bug reports and feature requests ONLY!\r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/.\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n**What happened**:\r\n\r\nThis is discussed on [kubernetes-users](https://groups.google.com/forum/#!topic/kubernetes-users/HOaGQD4J8j0)\r\n\r\nWhen externalTrafficPolicy: Local is used, in GKE, external traffic coming in to the Load Balancer works correctly. But traffic that originates within the GKE cluster is broken, a TCP SYN is not responded to.\r\n\r\nMy use case:\r\nI run gitlab, gitlab-runner, docker-registry, wiki inside kubernetes.\r\n\r\nBut I also access the docker-registry outside kubernetes. So my hostname for it is 'cr.COMPANY.com'. In DNS this resolves to the LB IP. Actually, all 3 services have DNS names that resolve to the same LB IP, which then goes to the nginx ingress. so wiki.COMPANY.com, git.COMPANY.com, wiki.COMPANY.com are generally addressed as LB-IP w/ HOSTNAME+SNI. Its 'astonishing' to not be able to access this DNS name when I'm 'inside' but can when I'm 'outside'.\r\n\r\nIf I enable the IP transparency (because in my wiki I want the IP of the user who made the edit), then my gitlab-runner fails(since it cannot pull from the registry).\r\n\r\nTim Hockin has this to say:\r\n\r\n```\r\nOn Friday, June 22, 2018 at 1:32:45 PM UTC-4, Tim Hockin wrote:\r\nI reproduced this.  Here's the explanation of why it is working as intended.  We can discuss whether that intention is misguided or not.\r\n\r\nWhen externalTrafficPolicy is \"Cluster\", each node acts as an LB gateway to the Service, regardless of where the backends might be running.  In order to make this work, we must SNAT (which obscures the client's IP) because the traffic could cross nodes, and you can't have the final node responding directly to the client (bad 5-tuple).  As we agree, this mode works but isn't what you want.\r\n\r\nWhen externalTrafficPolicy is \"Local\", only nodes that actually have a backend for a given Service act as an LB gateway.  This means we do not need to SNAT, thereby keeping the client IP.  But what about nodes which do not have backends?  They drop those packets.  The GCE load-balancer has relatively long programming time, so we don't want to change the TargetPools every time a pod moves.  The healthchecks are set up such that nodes that do not have a backend fail the HC - thus the LB should never route to them!  Very clever.\r\n\r\nHere's the rub - the way GCP sets up LBs is via a VIP which is a local IP to each VM.  By default, access to the LB VIP from a node \"behind\" that VIP (all nodes in k8s) is serviced by that same VM, not by the actual LB.  The assumption is that you are accessing yourself, why go through the network to do that?\r\n\r\nKubernetes makes an explicit provision for pods that access an LB VIP by treating them as if they accessed the internal service VIP (which is not guaranteed to stay node-local).  We did not make a provision for a NODE to access the LB VIP in the same way.  Maybe we could?  I seem to recall an issue there, in how we distinguish traffic originating from \"this VM\" vs traffic we are gatewaying.\r\n\r\nSo there you see - it is doing what is intended, but maybe not what you want.  Now - concvince me that the use-case of accessing an external LB VIP from a node in the cluster (not a pod - a node) is worth the extra complexity?  One case I admit that falls in a crack is `hostNetwork` pods.  They will fail.\r\n```\r\nand then:\r\n\r\n```\r\nOn Friday, June 22, 2018 at 4:14:24 PM UTC-4, Tim Hockin wrote:\r\nWell, the good news is that I think this is easy to fix.\r\n\r\nFor my test case, the service hashes to NWV5X2332I4OT4T3\r\n\r\niptables -t nat -I KUBE-XLB-NWV5X2332I4OT4T3 -m addrtype --src-type LOCAL -j KUBE-SVC-NWV5X2332I4OT4T3\r\niptables -t nat -I KUBE-XLB-NWV5X2332I4OT4T3 -m addrtype --src-type LOCAL -j KUBE-MARK-MASQ\r\n\r\nNote these two are in inverse order because I am lazy and used -I.  This will break the \"only local\" property for in-cluster accesses, but I think that is OK since it's explicitly not true for access from pods.\r\n\r\nThe kube-proxy change here should be easy enough, but the testing is a little involved.\r\n\r\nWould you do me the good favor of opening a github bug and we can see if we can rally an implementor?\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\nMy expectation is that it should not matter where my traffic originates, if it is to a globally-routeable public IP it should work.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nConfigure a Load Balancer, an ingress, and 2 services. Have service 2 talk to service one using a DNS name that maps to the Load Balancer.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"10\", GitVersion:\"v1.10.4\", GitCommit:\"5ca598b4ba5abb89bb773071ce452e33fb66339d\", GitTreeState:\"clean\", BuildDate:\"2018-06-06T08:13:03Z\", GoVersion:\"go1.9.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"10+\", GitVersion:\"v1.10.2-gke.1\", GitCommit:\"75d2af854b1df023c7ce10a8795b85d3dd1f8d37\", GitTreeState:\"clean\", BuildDate:\"2018-05-10T17:23:18Z\", GoVersion:\"go1.9.3b4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n- Cloud provider or hardware configuration:\r\nGoogle GKE\r\n\r\n- OS (e.g. from /etc/os-release):\r\nBUILD_ID=10452.89.0\r\nNAME=\"Container-Optimized OS\"\r\nKERNEL_COMMIT_ID=e2e439017d740b3fbe0f4f1a2bc63af84facf535\r\nGOOGLE_CRASH_ID=Lakitu\r\nVERSION_ID=66\r\nBUG_REPORT_URL=https://crbug.com/new\r\nPRETTY_NAME=\"Container-Optimized OS from Google\"\r\nVERSION=66\r\nGOOGLE_METRICS_PRODUCT_ID=26\r\nHOME_URL=\"https://cloud.google.com/compute/docs/containers/vm-image/\"\r\nID=cos\r\n\r\n- Kernel (e.g. `uname -a`):\r\nLinux gke-k8s-default-pool-d0b73bf2-d3ft 4.14.22+ #1 SMP Thu May 10 17:54:42 PDT 2018 x86_64 Intel(R) Xeon(R) CPU @ 2.00GHz GenuineIntel GNU/Linux\r\n\r\n- Install tools:\r\n- Others:\r\n",
  "closed_at": "2019-05-31T19:22:54Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 38,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65387/comments",
  "created_at": "2018-06-22T20:40:58Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65387/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/65387",
  "id": 335012501,
  "labels": [
    {
      "color": "006b75",
      "default": true,
      "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines.",
      "id": 433686790,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw0MzM2ODY3OTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/help%20wanted"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65387/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMzUwMTI1MDE=",
  "number": 65387,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "externalTrafficPolicy: Local breaks internal reachability",
  "updated_at": "2019-05-31T19:22:54Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/65387",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5131923?v=4",
    "events_url": "https://api.github.com/users/donbowman/events{/privacy}",
    "followers_url": "https://api.github.com/users/donbowman/followers",
    "following_url": "https://api.github.com/users/donbowman/following{/other_user}",
    "gists_url": "https://api.github.com/users/donbowman/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/donbowman",
    "id": 5131923,
    "login": "donbowman",
    "node_id": "MDQ6VXNlcjUxMzE5MjM=",
    "organizations_url": "https://api.github.com/users/donbowman/orgs",
    "received_events_url": "https://api.github.com/users/donbowman/received_events",
    "repos_url": "https://api.github.com/users/donbowman/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/donbowman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/donbowman/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/donbowman"
  }
}