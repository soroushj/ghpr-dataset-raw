{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/8001968?v=4",
    "events_url": "https://api.github.com/users/markturansky/events{/privacy}",
    "followers_url": "https://api.github.com/users/markturansky/followers",
    "following_url": "https://api.github.com/users/markturansky/following{/other_user}",
    "gists_url": "https://api.github.com/users/markturansky/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/markturansky",
    "id": 8001968,
    "login": "markturansky",
    "node_id": "MDQ6VXNlcjgwMDE5Njg=",
    "organizations_url": "https://api.github.com/users/markturansky/orgs",
    "received_events_url": "https://api.github.com/users/markturansky/received_events",
    "repos_url": "https://api.github.com/users/markturansky/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/markturansky/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markturansky/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/markturansky"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/8001968?v=4",
      "events_url": "https://api.github.com/users/markturansky/events{/privacy}",
      "followers_url": "https://api.github.com/users/markturansky/followers",
      "following_url": "https://api.github.com/users/markturansky/following{/other_user}",
      "gists_url": "https://api.github.com/users/markturansky/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markturansky",
      "id": 8001968,
      "login": "markturansky",
      "node_id": "MDQ6VXNlcjgwMDE5Njg=",
      "organizations_url": "https://api.github.com/users/markturansky/orgs",
      "received_events_url": "https://api.github.com/users/markturansky/received_events",
      "repos_url": "https://api.github.com/users/markturansky/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markturansky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markturansky/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markturansky"
    }
  ],
  "author_association": "MEMBER",
  "body": "I noticed that sometimes (<10%) Kubernetes do not delete volumes it created. Digging into logs, I can see this sequence in the persistent volume controller:\n\n``` log\nI0120 12:21:06.951473    2571 persistentvolume_claim_binder_controller.go:331] Synchronizing PersistentVolumeClaim[pvc-8z0kk]\nI0120 12:21:06.951572    2571 persistentvolume_claim_binder_controller.go:342] A volume match does not exist for persistent claim: pvc-8z0kk\nI0120 12:21:07.009176    2571 persistentvolume_provisioner_controller.go:174] PersistentVolumeClaim[pvc-8z0kk] provisioning\nI0120 12:21:07.100719    2571 persistentvolume_provisioner_controller.go:197] Unprovisioned PersistentVolume[pv-cinder-uxgot] created for PVC[pvc-8z0kk], which will be fulfilled in the storage provider\nI0120 12:21:07.128868    2571 persistentvolume_recycler_controller.go:161] Recycler: checking PersistentVolume[pv-cinder-uxgot]\nI0120 12:21:07.128923    2571 persistentvolume_recycler_controller.go:193] PersistentVolume[pv-cinder-uxgot] phase Pending - skipping: The volume is not in a final state\nI0120 12:21:07.129204    2571 persistentvolume_claim_binder_controller.go:193] Synchronizing PersistentVolume[pv-cinder-uxgot], current phase: Pending\nI0120 12:21:07.129240    2571 persistentvolume_claim_binder_controller.go:214] Skipping PersistentVolume[pv-cinder-uxgot], waiting for provisioning to finish\nI0120 12:21:07.186905    2571 persistentvolume_claim_binder_controller.go:331] Synchronizing PersistentVolumeClaim[pvc-8z0kk]\nI0120 12:21:07.187018    2571 persistentvolume_claim_binder_controller.go:347] PersistentVolume[pv-cinder-uxgot] for PersistentVolumeClaim[e2e-tests-volume-provisioning-scooj/pvc-8z0kk] is still being provisioned.\nI0120 12:21:07.190275    2571 persistentvolume_provisioner_controller.go:174] PersistentVolumeClaim[pvc-8z0kk] provisioning\nI0120 12:21:07.250590    2571 persistentvolume_recycler_controller.go:161] Recycler: checking PersistentVolume[pv-cinder-bn5d6]\nI0120 12:21:07.263177    2571 persistentvolume_recycler_controller.go:193] PersistentVolume[pv-cinder-bn5d6] phase Pending - skipping: The volume is not in a final state\nI0120 12:21:07.254780    2571 persistentvolume_claim_binder_controller.go:193] Synchronizing PersistentVolume[pv-cinder-bn5d6], current phase: Pending\nI0120 12:21:07.263275    2571 persistentvolume_claim_binder_controller.go:214] Skipping PersistentVolume[pv-cinder-bn5d6], waiting for provisioning to finish\nI0120 12:21:07.255305    2571 persistentvolume_provisioner_controller.go:197] Unprovisioned PersistentVolume[pv-cinder-bn5d6] created for PVC[pvc-8z0kk], which will be fulfilled in the storage provider\nE0120 12:21:07.270106    2571 persistentvolume_provisioner_controller.go:205] error updating persistent volume claim: %vpersistentvolumeclaims \"pvc-8z0kk\" cannot be updated: the object has been modified; please apply your changes to the latest version and try again\nI0120 12:21:07.270162    2571 persistentvolume_provisioner_controller.go:170] PersistentVolumeClaim[pvc-8z0kk] is already provisioned.\nI0120 12:21:07.396334    2571 persistentvolume_provisioner_controller.go:212] PersistentVolume[pv-cinder-uxgot] reconciling\nI0120 12:21:07.396385    2571 persistentvolume_provisioner_controller.go:246] PersistentVolume[pv-cinder-uxgot] provisioning in progress\nI0120 12:21:07.537061    2571 openstack.go:1055] Created volume 0557d70c-3e7a-461b-88c4-d6f464a53d3d\nI0120 12:21:07.537110    2571 cinder_util.go:166] Successfully created cinder volume 0557d70c-3e7a-461b-88c4-d6f464a53d3d\nI0120 12:21:07.797214    2571 persistentvolume_recycler_controller.go:161] Recycler: checking PersistentVolume[pv-cinder-uxgot]\nI0120 12:21:07.799584    2571 persistentvolume_recycler_controller.go:193] PersistentVolume[pv-cinder-uxgot] phase Pending - skipping: The volume is not in a final state\nI0120 12:21:07.809612    2571 persistentvolume_claim_binder_controller.go:193] Synchronizing PersistentVolume[pv-cinder-uxgot], current phase: Pending\nI0120 12:21:07.992698    2571 persistentvolume_provisioner_controller.go:212] PersistentVolume[pv-cinder-bn5d6] reconciling\nI0120 12:21:07.992961    2571 persistentvolume_provisioner_controller.go:246] PersistentVolume[pv-cinder-bn5d6] provisioning in progress\nI0120 12:21:08.053157    2571 persistentvolume_claim_binder_controller.go:331] Synchronizing PersistentVolumeClaim[pvc-8z0kk]\nI0120 12:21:08.053652    2571 persistentvolume_claim_binder_controller.go:347] PersistentVolume[pv-cinder-bn5d6] for PersistentVolumeClaim[e2e-tests-volume-provisioning-scooj/pvc-8z0kk] is still being provisioned.\nI0120 12:21:08.053689    2571 persistentvolume_claim_binder_controller.go:261] PersistentVolume[pv-cinder-uxgot] is available\nI0120 12:21:08.054043    2571 persistentvolume_claim_binder_controller.go:318] PersistentVolume[pv-cinder-uxgot] changing phase from Pending to Available\nI0120 12:21:08.188433    2571 openstack.go:1055] Created volume b615cae0-1f82-4f94-a1bb-eccf25b710a0\nI0120 12:21:08.190127    2571 cinder_util.go:166] Successfully created cinder volume b615cae0-1f82-4f94-a1bb-eccf25b710a0\n```\n- Two volumes are created for claim `pvc-8z0kk`:\n  - At `12:21:07.100719`, PV `pv-cinder-uxgot` is created. \n  - At `12:21:07.255305`, PV `pv-cinder-bn5d6` is created. **Note in the logs:** `error updating persistent volume claim: persistentvolumeclaims \"pvc-8z0kk\" cannot be updated: the object has been modified; please apply your changes to the latest version and try again`\n- These two volumes are provisioned:\n  - `pv-cinder-uxgot` at `12:21:07.537061`: `Created volume 0557d70c-3e7a-461b-88c4-d6f464a53d3d`\n  - `pv-cinder-bn5d6` at `12:21:08.188433`: `Created volume b615cae0-1f82-4f94-a1bb-eccf25b710a0`\n- Both these volumes are bound (!)\n- When the claim is deleted, only one of the volumes is deleted.\n\nIt's _probably_ caused by `Synchronizing PersistentVolumeClaim[pvc-8z0kk]` being called twice in parallel.\n@markturansky, please confirm my suspicion. Can it be the periodic check + 'claim updated' event running at the same time? Any idea how to fix it? Lock could be appropriate, still I would prefer if there was possibility to atomically 'get current version of the claim, look at it and update it'. Too many things read/modify object annotations (and more are coming!) and it's pretty hard to keep them from colliding.\n\ncc: @kubernetes/rh-storage, @saad-ali \n",
  "closed_at": "2016-02-12T14:21:21Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19860/comments",
  "created_at": "2016-01-20T13:45:14Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19860/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/19860",
  "id": 127685611,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19860/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMjc2ODU2MTE=",
  "number": 19860,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Dynamic provisioner sometimes creates two volumes for one claim",
  "updated_at": "2016-02-12T14:21:21Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19860",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1745006?v=4",
    "events_url": "https://api.github.com/users/jsafrane/events{/privacy}",
    "followers_url": "https://api.github.com/users/jsafrane/followers",
    "following_url": "https://api.github.com/users/jsafrane/following{/other_user}",
    "gists_url": "https://api.github.com/users/jsafrane/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jsafrane",
    "id": 1745006,
    "login": "jsafrane",
    "node_id": "MDQ6VXNlcjE3NDUwMDY=",
    "organizations_url": "https://api.github.com/users/jsafrane/orgs",
    "received_events_url": "https://api.github.com/users/jsafrane/received_events",
    "repos_url": "https://api.github.com/users/jsafrane/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jsafrane/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jsafrane/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jsafrane"
  }
}