{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Thanks for filing an issue! Before hitting the button, please answer these questions.-->\r\n\r\n**Is this a request for help?** (If yes, you should use our troubleshooting guide and community support channels, see http://kubernetes.io/docs/troubleshooting/.): No\r\n\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** (If you have found any duplicates, you should instead reply there.): coredns\r\n\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): bug report\r\n\r\n<!--\r\nIf this is a BUG REPORT, please:\r\n  - Fill in as much of the template below as you can.  If you leave out\r\n    information, we can't help you as well.\r\n\r\nIf this is a FEATURE REQUEST, please:\r\n  - Describe *in detail* the feature/behavior/change you'd like to see.\r\n\r\nIn both cases, be ready for followup questions, and please respond in a timely\r\nmanner.  If we can't reproduce a bug or think a feature already exists, we\r\nmight close your issue.  If we're wrong, PLEASE feel free to reopen it and\r\nexplain why.\r\n-->\r\n\r\n**Kubernetes version** (use `kubectl version`): \r\nlatests on master\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**:\r\nThree node bare metal setup, using KubeAdm.\r\n\r\n- **OS** (e.g. from /etc/os-release):\r\nCentOS 7\r\n\r\n- **Kernel** (e.g. `uname -a`):\r\nLinux devstack-77 3.10.0-514.10.2.el7.x86_64 #1 SMP Fri Mar 3 00:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n- **Install tools**:\r\nKubeAdm\r\n\r\n- **Others**:\r\n\r\n\r\n**What happened**:\r\nIn investigating usage of To4() in the code-base to see what changes may be needed to support IPv6, I found usage of the method in federation/pkg/dnsprovider/providers/coredns/rrsets.go.\r\n\r\nThe code that gets the resource record set, handles the case where the IP is v4, but not v6. Also noticed that the common test case that creates two resource result sets, one IPv4 and one IPv6, is not used for coredns (but is used for AWS and Google variants). IOW, there is no test coverage for this case.\r\n\r\n**What you expected to happen**:\r\nBe able to set and get a resource record set that has an IPv6 address and record type AAAA.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\nNot sure how to reproduce on a system under operation (as I'm not familiar with the federation code and how to use). However, a UT can be created to test this use case.\r\n\r\n\r\n**Anything else we need to know**:\r\nI've created a commit to provide the needed changes, add a unit test case to demonstrate, and fix typos I found in this code area. I'll push it up for consideration, as soon as unit tests pass.\r\n\r\nNote: I didn't add a unit test to coredns that makes use of the common test CommonTestResourceRecordSetsDifferentTypes (like Google and AWS code uses), because this test will not work for coredns. The test adds a record set with IPv4 address and then a second one, with the **same name**, but with an IPv6 address. It then calls List() and checks that each of the two record sets are in the list.\r\n\r\nWith coredns, the List() operation is not implemented, and the test falls back to calling the Get() method, for each expected record. The Get() method, however, will aggregate IPs of records that have the same name. The test will then fail, as the result of the Get() will have two IPs, instead of one (and wrong TTL and type, as it uses the first record's values). \r\n\r\nI didn't want to change the behavior of the Get() operation or implementing the List(), for fear of breaking something. If the community can advise on this, I can modify the code differently. \r\n\r\nIn the meantime, I just have the Get() return the correct record type for IPv6 addresses, and have created a separate test case that creates a single record with IPv6 and verifies that it can be set and get (with the right AAAA type).\r\n",
  "closed_at": "2017-05-16T23:14:58Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44351/comments",
  "created_at": "2017-04-11T18:03:24Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44351/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/44351",
  "id": 221033455,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44351/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjEwMzM0NTU=",
  "number": 44351,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Provide IPv6 support for coredns ResourceRecordSet",
  "updated_at": "2017-05-16T23:14:58Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44351",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/2787783?v=4",
    "events_url": "https://api.github.com/users/pmichali/events{/privacy}",
    "followers_url": "https://api.github.com/users/pmichali/followers",
    "following_url": "https://api.github.com/users/pmichali/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmichali/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/pmichali",
    "id": 2787783,
    "login": "pmichali",
    "node_id": "MDQ6VXNlcjI3ODc3ODM=",
    "organizations_url": "https://api.github.com/users/pmichali/orgs",
    "received_events_url": "https://api.github.com/users/pmichali/received_events",
    "repos_url": "https://api.github.com/users/pmichali/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/pmichali/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmichali/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/pmichali"
  }
}