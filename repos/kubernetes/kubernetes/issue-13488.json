{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "`kubectl rolling-update` is useful for incrementally deploying a new replication controller. But if you have an existing replication controller and want to do a rolling restart of all the pods that it manages, you are forced to do a no-op update to an RC with a new name and the same spec. It would be useful to be able to do a rolling restart without needing to change the RC or to give the RC spec, so anyone with access to kubectl could easily initiate a restart without worrying about having the spec locally, making sure it's the same/up to date, etc. This could work in a few different ways:\n1. A new command, `kubectl rolling-restart` that takes an RC name and incrementally deletes all the pods controlled by the RC and allows the RC to recreate them.\n2. Same as 1, but instead of deleting each pod, the command iterates through the pods and issues some kind of \"restart\" command to each pod incrementally (does this exist? is this a pattern we prefer?). The advantage of this one is that the pods wouldn't get unnecessarily rebalanced to other machines.\n3. `kubectl rolling-update` with a flag that lets you specify an old RC only, and it follows the logic of either 1 or 2.\n4. `kubectl rolling-update` with a flag that lets you specify an old RC only, and it auto-generates a new RC based on the old one and proceeds with normal rolling update logic.\n\nAll of the above options would need the MaxSurge and MaxUnavailable options recently introduced (see #11942) along with readiness checks along the way to make sure that the restarting is done without taking down all the pods.\n\n@nikhiljindal @kubernetes/kubectl \n",
  "closed_at": "2019-05-16T23:27:07Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 106,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/13488/comments",
  "created_at": "2015-09-02T01:48:33Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/13488/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/13488",
  "id": 104387588,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 126701924,
      "name": "area/app-lifecycle",
      "node_id": "MDU6TGFiZWwxMjY3MDE5MjQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/app-lifecycle"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d3e2f0",
      "default": false,
      "description": "Indicates that an issue or PR should not be auto-closed due to staleness.",
      "id": 778118403,
      "name": "lifecycle/frozen",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/frozen"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Apps.",
      "id": 404091735,
      "name": "sig/apps",
      "node_id": "MDU6TGFiZWw0MDQwOTE3MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/apps"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/13488/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMDQzODc1ODg=",
  "number": 13488,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Rolling restart of pods",
  "updated_at": "2020-09-14T08:50:45Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/13488",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/5209643?v=4",
    "events_url": "https://api.github.com/users/ghodss/events{/privacy}",
    "followers_url": "https://api.github.com/users/ghodss/followers",
    "following_url": "https://api.github.com/users/ghodss/following{/other_user}",
    "gists_url": "https://api.github.com/users/ghodss/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ghodss",
    "id": 5209643,
    "login": "ghodss",
    "node_id": "MDQ6VXNlcjUyMDk2NDM=",
    "organizations_url": "https://api.github.com/users/ghodss/orgs",
    "received_events_url": "https://api.github.com/users/ghodss/received_events",
    "repos_url": "https://api.github.com/users/ghodss/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ghodss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ghodss/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ghodss"
  }
}