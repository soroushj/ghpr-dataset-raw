{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/3900799?v=4",
    "events_url": "https://api.github.com/users/kargakis/events{/privacy}",
    "followers_url": "https://api.github.com/users/kargakis/followers",
    "following_url": "https://api.github.com/users/kargakis/following{/other_user}",
    "gists_url": "https://api.github.com/users/kargakis/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/kargakis",
    "id": 3900799,
    "login": "kargakis",
    "node_id": "MDQ6VXNlcjM5MDA3OTk=",
    "organizations_url": "https://api.github.com/users/kargakis/orgs",
    "received_events_url": "https://api.github.com/users/kargakis/received_events",
    "repos_url": "https://api.github.com/users/kargakis/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/kargakis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kargakis/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/kargakis"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/3900799?v=4",
      "events_url": "https://api.github.com/users/kargakis/events{/privacy}",
      "followers_url": "https://api.github.com/users/kargakis/followers",
      "following_url": "https://api.github.com/users/kargakis/following{/other_user}",
      "gists_url": "https://api.github.com/users/kargakis/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kargakis",
      "id": 3900799,
      "login": "kargakis",
      "node_id": "MDQ6VXNlcjM5MDA3OTk=",
      "organizations_url": "https://api.github.com/users/kargakis/orgs",
      "received_events_url": "https://api.github.com/users/kargakis/received_events",
      "repos_url": "https://api.github.com/users/kargakis/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kargakis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kargakis/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kargakis"
    }
  ],
  "author_association": "MEMBER",
  "body": "In 1.4 we are changing the scaling behavior for Deployments during a rollout from\nScale the newest ReplicaSet\nto\nScale all active ReplicaSets proportionally by their current number of replicas.\n\nThis issue is to discuss the desired behavior when the deployment controller-manager observes both rolling-out and scaling are required in the same controller sync loop.\n# Example of proportional scaling:\n## In 1.3:\n\nDeployment: 5 replicas + 1 maxsurge **RS B is newest**\n- RS B: 1 replica\n- RS A: 5 replicas\n\n**_Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 7 replicas\n- RS A: 5 replicas\n## In 1.4:\n\nDeployment: 5 replicas + 1 maxsurge **RS B is newest**\n- RS B: 1 replica\n- RS A: 5 replicas\n\n**_Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 2 replicas\n- RS A: 10 replicas\n# Description of choices for proportional scaling with rollout\n\nWhen the control loop sees that changes need to be made to the total number of RS replicas (scaling) AND a new RS needs to be created (rollout) in the same iteration, it can proceed in 1 of 2 ways:\n\n1: Create a new RS + (if scaling up add all new replicas to the new RS, if scaling down let the rollout process scale down old RSs)\n- Good: This more accurately matches the system to the state desired by the user.  The user may want to only ever have X replicas of the new release, but never have more than X of a previous release.\n- Bad: This behaves differently from what happens when the changes are seen in separate loops iterations.  Since the control loops are level-based and not edge-based, it is non-deterministic whether the user will see proportional scaling or not EVEN when doing separate events (the control loop may observe changes from 2 separate updates in a single iteration).\n\n2: Proportionally scale the replicas and then create a new RS + perform rollout\n- Good: This results in behavior that closely matches what happens both when the control loop sees scale then rollout and when the control loop sees rollout then scale in separate syncs (separate events)\n- Bad: This creates a desired state that the user never actually asked for since the user never asked for the old RSs to be scaled up.\n\n_It is worth noting that with ANY proportional scaling it is possible for the system to create a state that the user never actually wanted if the user creates an update, k8s creates a new RS for the update, and then the user scales by increasing the number of replicas._\n# Examples of proportional scaling with rollout\n## A) Update image, then Scale\n\nDeployment: 5 replicas + 1 maxsurge\n- RS A: 5 replicas\n\n**_Update image**_\n\nDeployment: 5 replicas + 1 maxsurge\n- RS B: 1 replicas\n- RS A: 5 replicas\n\n**_Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 2 replicas\n- RS A: 10 replicas\n## Scale, then update image\n\nDeployment: 5 replicas + 1 maxsurge\n- RS A: 5 replicas\n\n**_Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS A: 10 replicas\n\n**_Update image**_\n...\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 2 replicas\n- RS A: 10 replicas\n## Scale + Update Option 1 (new RS first)\n\nDeployment: 5 replicas + 1 maxsurge\n- RS A: 5 replicas\n\n**_Update Image + Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 7 replicas\n- RS A: 5 replicas\n## Scale + Update Option 2 (scale first)\n\nDeployment: 5 replicas + 1 maxsurge\n- RS A: 5 replicas\n\n**_Update Image + Scale 6 -> 12 results**_\n\nDeployment: 10 replicas + 2 maxsurge\n- RS B: 2 replicas\n- RS A: 10 replicas\n# Questions\n1. For proportional scaling, is option 1 or option 2 the better choice?\n2. Should the scaling strategy be a configurable field in Deployment so users can force non-proportional scaling?\n",
  "closed_at": "2016-10-06T17:03:52Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 22,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/29357/comments",
  "created_at": "2016-07-21T02:50:54Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/29357/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/29357",
  "id": 166726238,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 382474515,
      "name": "area/workload-api/deployment",
      "node_id": "MDU6TGFiZWwzODI0NzQ1MTU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/workload-api/deployment"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/29357/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNjY3MjYyMzg=",
  "number": 29357,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Determine correct Deployment scaling behavior during rollout",
  "updated_at": "2016-10-06T17:03:52Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/29357",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/7882754?v=4",
    "events_url": "https://api.github.com/users/pwittrock/events{/privacy}",
    "followers_url": "https://api.github.com/users/pwittrock/followers",
    "following_url": "https://api.github.com/users/pwittrock/following{/other_user}",
    "gists_url": "https://api.github.com/users/pwittrock/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/pwittrock",
    "id": 7882754,
    "login": "pwittrock",
    "node_id": "MDQ6VXNlcjc4ODI3NTQ=",
    "organizations_url": "https://api.github.com/users/pwittrock/orgs",
    "received_events_url": "https://api.github.com/users/pwittrock/received_events",
    "repos_url": "https://api.github.com/users/pwittrock/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/pwittrock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pwittrock/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/pwittrock"
  }
}