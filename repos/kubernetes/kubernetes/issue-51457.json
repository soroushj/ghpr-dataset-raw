{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/126021?v=4",
    "events_url": "https://api.github.com/users/ash2k/events{/privacy}",
    "followers_url": "https://api.github.com/users/ash2k/followers",
    "following_url": "https://api.github.com/users/ash2k/following{/other_user}",
    "gists_url": "https://api.github.com/users/ash2k/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ash2k",
    "id": 126021,
    "login": "ash2k",
    "node_id": "MDQ6VXNlcjEyNjAyMQ==",
    "organizations_url": "https://api.github.com/users/ash2k/orgs",
    "received_events_url": "https://api.github.com/users/ash2k/received_events",
    "repos_url": "https://api.github.com/users/ash2k/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ash2k/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ash2k/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ash2k"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/126021?v=4",
      "events_url": "https://api.github.com/users/ash2k/events{/privacy}",
      "followers_url": "https://api.github.com/users/ash2k/followers",
      "following_url": "https://api.github.com/users/ash2k/following{/other_user}",
      "gists_url": "https://api.github.com/users/ash2k/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ash2k",
      "id": 126021,
      "login": "ash2k",
      "node_id": "MDQ6VXNlcjEyNjAyMQ==",
      "organizations_url": "https://api.github.com/users/ash2k/orgs",
      "received_events_url": "https://api.github.com/users/ash2k/received_events",
      "repos_url": "https://api.github.com/users/ash2k/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ash2k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ash2k/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ash2k"
    }
  ],
  "author_association": "MEMBER",
  "body": "**What happened**:\r\nAs an example `k8s.io/apimachinery/pkg/apis/meta/v1/register.go` - `AddToGroupVersion()`:\r\n```go\r\n// AddToGroupVersion registers common meta types into schemas.\r\nfunc AddToGroupVersion(scheme *runtime.Scheme, groupVersion schema.GroupVersion) {\r\n\tscheme.AddKnownTypeWithName(groupVersion.WithKind(WatchEventKind), &WatchEvent{})\r\n\tscheme.AddKnownTypeWithName(\r\n\t\tschema.GroupVersion{Group: groupVersion.Group, Version: runtime.APIVersionInternal}.WithKind(WatchEventKind),\r\n\t\t&InternalEvent{},\r\n\t)\r\n\t// Supports legacy code paths, most callers should use metav1.ParameterCodec for now\r\n\tscheme.AddKnownTypes(groupVersion,\r\n\t\t&ListOptions{},\r\n\t\t&ExportOptions{},\r\n\t\t&GetOptions{},\r\n\t\t&DeleteOptions{},\r\n\t)\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tscheme.AddConversionFuncs(\r\n\t\tConvert_versioned_Event_to_watch_Event,\r\n\t\tConvert_versioned_InternalEvent_to_versioned_Event,\r\n\t\tConvert_watch_Event_to_versioned_Event,\r\n\t\tConvert_versioned_Event_to_versioned_InternalEvent,\r\n\t)\r\n\r\n\t// Register Unversioned types under their own special group\r\n\tscheme.AddUnversionedTypes(Unversioned,\r\n\t\t&Status{},\r\n\t\t&APIVersions{},\r\n\t\t&APIGroupList{},\r\n\t\t&APIGroup{},\r\n\t\t&APIResourceList{},\r\n\t)\r\n\r\n\t// register manually. This usually goes through the SchemeBuilder, which we cannot use here.\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tscheme.AddGeneratedDeepCopyFuncs(GetGeneratedDeepCopyFuncs()...)\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tAddConversionFuncs(scheme)\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tRegisterDefaults(scheme)\r\n}\r\n```\r\nThe function should probably propagate that error as a return value.\r\n\r\nAnother example is `init()` in the same file:\r\n```go\r\nfunc init() {\r\n\tscheme.AddUnversionedTypes(SchemeGroupVersion,\r\n\t\t&ListOptions{},\r\n\t\t&ExportOptions{},\r\n\t\t&GetOptions{},\r\n\t\t&DeleteOptions{},\r\n\t)\r\n\r\n\t// register manually. This usually goes through the SchemeBuilder, which we cannot use here.\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tscheme.AddGeneratedDeepCopyFuncs(GetGeneratedDeepCopyFuncs()...)\r\n// ERROR RESULT IS IGNORED BELOW\r\n\tRegisterDefaults(scheme)\r\n}\r\n```\r\n`init()` should probably panic on error.\r\n\r\nClient-gen produces scheme construction code that also misses error handling. For example:\r\n`staging/src/k8s.io/client-go/kubernetes/scheme/register.go`:\r\n```go\r\n// After this, RawExtensions in Kubernetes types will serialize kube-aggregator types\r\n// correctly.\r\nfunc AddToScheme(scheme *runtime.Scheme) {\r\n// EACH FUNCTION CALL BELOW RETUNS AN ERROR THAT IS IGNORED\r\n\tadmissionregistrationv1alpha1.AddToScheme(scheme)\r\n\tappsv1beta1.AddToScheme(scheme)\r\n\tappsv1beta2.AddToScheme(scheme)\r\n\tauthenticationv1.AddToScheme(scheme)\r\n\tauthenticationv1beta1.AddToScheme(scheme)\r\n\tauthorizationv1.AddToScheme(scheme)\r\n\tauthorizationv1beta1.AddToScheme(scheme)\r\n\tautoscalingv1.AddToScheme(scheme)\r\n\tautoscalingv2alpha1.AddToScheme(scheme)\r\n\tbatchv1.AddToScheme(scheme)\r\n\tbatchv1beta1.AddToScheme(scheme)\r\n\tbatchv2alpha1.AddToScheme(scheme)\r\n\tcertificatesv1beta1.AddToScheme(scheme)\r\n\tcorev1.AddToScheme(scheme)\r\n\textensionsv1beta1.AddToScheme(scheme)\r\n\tnetworkingv1.AddToScheme(scheme)\r\n\tpolicyv1beta1.AddToScheme(scheme)\r\n\trbacv1.AddToScheme(scheme)\r\n\trbacv1beta1.AddToScheme(scheme)\r\n\trbacv1alpha1.AddToScheme(scheme)\r\n\tschedulingv1alpha1.AddToScheme(scheme)\r\n\tsettingsv1alpha1.AddToScheme(scheme)\r\n\tstoragev1beta1.AddToScheme(scheme)\r\n\tstoragev1.AddToScheme(scheme)\r\n}\r\n```\r\n\r\n**What you expected to happen**:\r\nProper error handling.\r\nAlso, maybe some of the functions can be changed to not return `error` because they always return nil?\r\n\r\n/kind bug\r\n/sig api-machinery\r\n",
  "closed_at": "2018-07-09T14:40:06Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/51457/comments",
  "created_at": "2017-08-28T09:19:30Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/51457/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/51457",
  "id": 253272918,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Important over the long term, but may not be staffed and/or may need multiple releases to complete.",
      "id": 496752236,
      "name": "priority/important-longterm",
      "node_id": "MDU6TGFiZWw0OTY3NTIyMzY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-longterm"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/51457/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNTMyNzI5MTg=",
  "number": 51457,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Poor error handling in scheme construction code",
  "updated_at": "2018-07-09T14:40:06Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/51457",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/126021?v=4",
    "events_url": "https://api.github.com/users/ash2k/events{/privacy}",
    "followers_url": "https://api.github.com/users/ash2k/followers",
    "following_url": "https://api.github.com/users/ash2k/following{/other_user}",
    "gists_url": "https://api.github.com/users/ash2k/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ash2k",
    "id": 126021,
    "login": "ash2k",
    "node_id": "MDQ6VXNlcjEyNjAyMQ==",
    "organizations_url": "https://api.github.com/users/ash2k/orgs",
    "received_events_url": "https://api.github.com/users/ash2k/received_events",
    "repos_url": "https://api.github.com/users/ash2k/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ash2k/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ash2k/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ash2k"
  }
}