{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "## Summary\n\nEncrypted volumes is a commonly requested feature for Kubernetes storage and requirements exist downstream to use encrypted volumes.\n\nThe following is a summary of the three cloud providers that allow dynamic provisioning and the current state of volume encryption for each.\n\n**_TL;DR:_** \u00a0Add encryption support for EBS PersistentVolumes. AWS has optional encryption and allows key via the API. GCE encrypts volumes by default but does not allow user-defined keys in the API. GCE allows custom keys via manual volume creation in the UI. \u00a0Cinder volumes can be manually created w/ encryption.\n\n@kubernetes/sig-storage @abhgupta\n\n@thockin @saad-ali I'm going to follow up with a PR today/tomorrow to meet the 1.4 cutoff on Friday.\n## Encryption by Cloud Provider\n### AWS\n-   AWS does _not_ encrypt volumes by default\n-   AWS API allows an optional boolean flag for encryption\n-   AWS API allows a user to specify which key to use for encryption with a default key provided by AWS if not specified.\n\nSee:\n-   [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html)\n-   [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)\n-   [http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)\n### GCE\n-   GCE encrypts all volumes by default\n-   Users can provide their own keys, but this is a manual step in the UI only.\n-   GCE API does _not_\u00a0provide a way to specify which key should encrypt which disk\n-   Volume attachment to the node requires the same key it is encrypted with. This is a manual step in the UI only.\n\nSee:\n-   [https://cloud.google.com/compute/docs/disks/customer-supplied-encryption](https://cloud.google.com/compute/docs/disks/customer-supplied-encryption)\n-   [https://cloud.google.com/compute/docs/reference/latest/disks/insert](https://cloud.google.com/compute/docs/reference/latest/disks/insert)\n### Cinder\n-   No encryption by default\n-   No opt-in encryption via API\n-   Block storage can be optionally encrypted\n-   Manual creation of the volumes is required\n\nSee:\n-   [https://wiki.openstack.org/wiki/VolumeEncryption](https://wiki.openstack.org/wiki/VolumeEncryption)\n-   [http://docs.openstack.org/mitaka/config-reference/block-storage/volume-encryption.html](http://docs.openstack.org/mitaka/config-reference/block-storage/volume-encryption.html)\n-   [http://docs.openstack.org/juno/config-reference/content/section_create-encrypted-volume-type.html](http://docs.openstack.org/juno/config-reference/content/section_create-encrypted-volume-type.html)\n## Proposed\n\nWorkflow:\n1.  Admins create however many keys in AWS as they wish. This is a manual step.\n2.  Admins create StorageClasses with the fully-qualified AWS resource name for the key.\n\nImplementation details:\n-   Add encryption support to AWS cloud provider\n-   Add encryption support to Kubernetes EBS volume plugin\n-   Use StorageClass for both the Encrypted boolean and EncryptionKeyName in PV controller\n",
  "closed_at": "2016-08-22T04:29:55Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/30792/comments",
  "created_at": "2016-08-17T18:28:26Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/30792/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/30792",
  "id": 171727610,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 138247961,
      "name": "area/kubectl",
      "node_id": "MDU6TGFiZWwxMzgyNDc5NjE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubectl"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/30792/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNzE3Mjc2MTA=",
  "number": 30792,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Add Encryption to dynamic provisioner",
  "updated_at": "2018-05-04T20:51:38Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/30792",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/8001968?v=4",
    "events_url": "https://api.github.com/users/markturansky/events{/privacy}",
    "followers_url": "https://api.github.com/users/markturansky/followers",
    "following_url": "https://api.github.com/users/markturansky/following{/other_user}",
    "gists_url": "https://api.github.com/users/markturansky/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/markturansky",
    "id": 8001968,
    "login": "markturansky",
    "node_id": "MDQ6VXNlcjgwMDE5Njg=",
    "organizations_url": "https://api.github.com/users/markturansky/orgs",
    "received_events_url": "https://api.github.com/users/markturansky/received_events",
    "repos_url": "https://api.github.com/users/markturansky/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/markturansky/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markturansky/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/markturansky"
  }
}