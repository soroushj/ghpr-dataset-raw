{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "Today there is only one node condition to represent whether kubelet is healthy (updating node status). Node controller will mark node as \"NotReady\" after kubelet stops updating for a while. The reason for kubelet not responding could be \r\n1. Network disconnect\r\n2. Node is shun down (stopped) or paused\r\n3. Kubelet is killed (could not response)\r\n\r\n## Problem\r\nIn many cases, when a node becomes \"NotReady\", pods will be evicted, and new pods will be started on other nodes (failover for high availability). However, if node is shut down, the volumes attached to the nodes are still attached. Volume controller should try to detach volumes when pods are killed from the old node. But there is a safety check before detaching to see whether volume is still mounted. This check is done by a VolumeInUse field in node status which is updated by kubelet. In case of node shut down, this field will not be updated by kubelet so that the safety check will fail and assume the volume cannot be detached because of existing mounts. The new pods will be pending for a while because volume cannot be attached to the other node. Although the reality is that volume can be detached in this situation. (Note: some cloud provider will treat stopped node as not exist in cloud provider so that node controller will delete the node API object. But still detach will not happen because of the mount safety check. Ref https://github.com/kubernetes/kubernetes/issues/46442)\r\n\r\n## Proposal\r\nWe propose to taint the node with \"Stopped\" condition. When kubelet stops updating, node controller checks cloud provider and see whether the node is in \"stopped\" state (Note: different cloud provider might use different term to represent this state, e.g., terminated). When volume controller gets a node update/delete event, it can check the node taint spec and mark the volumes attached to that node are safe to detach (volumes can be be removed from the list of VolumeInUse (meaning the volumes are mounted). When detach is issued, the operation can be proceeded without delay.\r\n\r\nTo determine the \"stopped\" condition, I lists a few cloud provider's explanation of stopping an instance.\r\n\r\n### GCE\r\n\r\n- Stopping an instance causes Compute Engine to send the ACPI Power Off signal to the instance. Modern guest operating systems are configured to perform a clean shutdown before powering off in response to the power off signal. Compute Engine waits a short time for the guest to finish shutting down and then transitions the instance to the TERMINATED state.\r\n\r\n- You can stop an instance temporarily so you can come back to it at a later time. A stopped instance does not incur charges, but all of the resources that are attached to the instance will still be charged. Alternatively, if you are done using an instance, delete the instance and its resources to stop incurring charges.\r\n\r\n- You can permanently delete an instance to remove the instance and the associated resources from your project. If the instance is part of an instance group, the group might try to recreate the instance to maintain a certain group size.\r\n\r\n\r\n### AWS\r\n\r\n- You can only stop an Amazon EBS-backed instance. The instance performs a normal shutdown and stops running; its status changes to stopping and then stopped. Any Amazon EBS volumes remain attached to the instance, and their data persists. In most cases, the instance is migrated to a new underlying host computer when it's started. \r\n\r\n- You can delete your instance when you no longer need it. This is referred to as terminating your instance. When an instance terminates, the data on any instance store volumes associated with that instance is deleted. If your instance is in an Auto Scaling group, the Auto Scaling service marks the stopped instance as unhealthy, and may terminate it and launch a replacement instance.\r\n\r\n\r\n### OpenStack\r\n\r\n- Admins can pause and unpause a Nova compute instance. When an instance is paused, the entire state of the instance is kept in RAM. Pausing an instance will disable access to that instance, but won't free up any of its resources. Another option is to suspend, and then resume, an instance. Like paused OpenStack instances, a suspended instance keeps its current state, but it is written to storage. \r\n\r\n- A third option is to shelve OpenStack instances.A shelved instance is actually shut down, which is not the case for suspended or paused instances. If admins decide they no longer need a shelved instance, they can remove it, which ensures that it doesn't maintain any hypervisor-level resources in use.\r\n\r\n- The last option is to stop an instance in Nova, which will disconnect all of its associated resources. This means admins can't restore a stopped instance to its previous state. This option is only useful for OpenStack instances that an organization no longer needs. In all other cases, admins should shelve, suspend or pause the instance.\r\n\r\n\r\nSo basically a \"stopped\" node means that it is shut down like an operating system shut down situation. All mounts are gone when machine is shut down.\r\n\r\ncc @yujuhong @dchen1107 @Random-Liu ",
  "closed_at": "2020-03-22T21:13:17Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 58,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/58635/comments",
  "created_at": "2018-01-22T21:39:53Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/58635/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/58635",
  "id": 290625285,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 154660912,
      "name": "area/cloudprovider",
      "node_id": "MDU6TGFiZWwxNTQ2NjA5MTI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/cloudprovider"
    },
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 567844235,
      "name": "area/node-lifecycle",
      "node_id": "MDU6TGFiZWw1Njc4NDQyMzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/node-lifecycle"
    },
    {
      "color": "604460",
      "default": false,
      "description": "Denotes an issue or PR that has aged beyond stale and will be auto-closed.",
      "id": 778118402,
      "name": "lifecycle/rotten",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/rotten"
    },
    {
      "color": "ededed",
      "default": false,
      "description": null,
      "id": 711852570,
      "name": "milestone/incomplete-labels",
      "node_id": "MDU6TGFiZWw3MTE4NTI1NzA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/milestone/incomplete-labels"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.",
      "id": 173494222,
      "name": "sig/cluster-lifecycle",
      "node_id": "MDU6TGFiZWwxNzM0OTQyMjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cluster-lifecycle"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/58635/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyOTA2MjUyODU=",
  "number": 58635,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Propose to taint node \"shutdown\" condition ",
  "updated_at": "2020-03-22T21:13:18Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/58635",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/19172805?v=4",
    "events_url": "https://api.github.com/users/jingxu97/events{/privacy}",
    "followers_url": "https://api.github.com/users/jingxu97/followers",
    "following_url": "https://api.github.com/users/jingxu97/following{/other_user}",
    "gists_url": "https://api.github.com/users/jingxu97/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jingxu97",
    "id": 19172805,
    "login": "jingxu97",
    "node_id": "MDQ6VXNlcjE5MTcyODA1",
    "organizations_url": "https://api.github.com/users/jingxu97/orgs",
    "received_events_url": "https://api.github.com/users/jingxu97/received_events",
    "repos_url": "https://api.github.com/users/jingxu97/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jingxu97/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jingxu97/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jingxu97"
  }
}