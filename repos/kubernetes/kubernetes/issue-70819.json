{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/523590?v=4",
    "events_url": "https://api.github.com/users/jpbetz/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpbetz/followers",
    "following_url": "https://api.github.com/users/jpbetz/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpbetz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpbetz",
    "id": 523590,
    "login": "jpbetz",
    "node_id": "MDQ6VXNlcjUyMzU5MA==",
    "organizations_url": "https://api.github.com/users/jpbetz/orgs",
    "received_events_url": "https://api.github.com/users/jpbetz/received_events",
    "repos_url": "https://api.github.com/users/jpbetz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpbetz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpbetz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpbetz"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/523590?v=4",
      "events_url": "https://api.github.com/users/jpbetz/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpbetz/followers",
      "following_url": "https://api.github.com/users/jpbetz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpbetz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpbetz",
      "id": 523590,
      "login": "jpbetz",
      "node_id": "MDQ6VXNlcjUyMzU5MA==",
      "organizations_url": "https://api.github.com/users/jpbetz/orgs",
      "received_events_url": "https://api.github.com/users/jpbetz/received_events",
      "repos_url": "https://api.github.com/users/jpbetz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpbetz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpbetz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpbetz"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\n\r\nAll three controller managers \"wedged\" in a high availability cluster--zero network traffic between any of the controller managers and the api server--due to a deadlock.  All three controller manager processes running and passing healthcheck, but none performing any controller manager duties.\r\n\r\npprof stackdump surfaced a deadlock in the golang.org/x/net/http2 library on all masters preventing any http2 client requests from being made from the controller managers:\r\n\r\nOne goroutine already holds the `clientConnPool.mu` lock and is deadlocked attempting to acquire the `ClientConn.mu` lock:\r\n\r\n```\r\ngoroutine 1776 [semacquire, 3556 minutes]:\r\nsync.runtime_SemacquireMutex(0xc420970a14, 0x522100)\r\n        /usr/local/go/src/runtime/sema.go:71 +0x3d\r\nsync.(*Mutex).Lock(0xc420970a10)\r\n        /usr/local/go/src/sync/mutex.go:134 +0xee\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*ClientConn).CanTakeNewRequest(0xc4209709c0, 0xc420929500)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/transport.go:611 +0x3f\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*clientConnPool).getClientConn(0xc420985560, 0xc4295eeb00, 0xc429692cc0, 0xd, 0xc4207d9800, 0xc426376f68, 0x94bb20, 0xc4207d9810)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/client_conn_pool.go:67 +0xe8\r\n```\r\n\r\nAnother already holds the `ClientConn.mu` lock and is deadlocked attempting to acquire the `clientConnPool.mu` lock:\r\n\r\n```\r\ngoroutine 85 [semacquire, 3556 minutes]:\r\nsync.runtime_SemacquireMutex(0xc42098556c, 0x528300)\r\n        /usr/local/go/src/runtime/sema.go:71 +0x3d\r\nsync.(*Mutex).Lock(0xc420985568)\r\n        /usr/local/go/src/sync/mutex.go:134 +0xee\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*clientConnPool).MarkDead(0xc420985560, 0xc4209709c0)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/client_conn_pool.go:201 +0x4b\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.noDialClientConnPool.MarkDead(0xc420985560, 0xc4209709c0)\r\n        <autogenerated>:1 +0x3e\r\npanic(0x3058280, 0x3d35e60)\r\n        /usr/local/go/src/runtime/panic.go:491 +0x283\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*pipe).closeWithError(0xc42451ea28, 0xc42451ea78, 0x0, 0x0, 0x0)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/pipe.go:106 +0x214\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*pipe).CloseWithError(0xc42451ea28, 0x0, 0x0)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/pipe.go:93 +0x53\r\nk8s.io/kubernetes/vendor/golang.org/x/net/http2.(*clientConnReadLoop).cleanup(0xc420a51fb0)\r\n        /workspace/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/golang.org/x/net/http2/transport.go:1408 +0x219\r\n```\r\n**What you expected to happen**:\r\n\r\nkube-controller-manager does not become deadlocked\r\n\r\nkube-controller-manager should fail healthcheck when in a broken state like this. In this case, if the kube-controller-manager were to fail healthcheck when not able to reach the kube-apiserver for it's regular leader lock acquire attempts for some time threshold, the issue would have been mitigated by restarts.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nExact steps to reproduce state not yet known. We found the cluster in the state and examined it in situ and were able to capture a pprof stackdump which proves the existence of the deadlock. We believe it may be possible to recreate the http2 error state that triggers deadlock with some careful analysis of the deadlock, but have not gotten that far yet.\r\n\r\n**Anything else we need to know?**:\r\n\r\nThe call from `http2.(*clientConnPool).getClientConn() `to `http2.(*CLientConn).CanTakeNewRequest()` [was removed](https://go-review.googlesource.com/c/net/+/122590/) from the call path by https://github.com/golang/net/commit/6a8eb5e2b1816b30aa88d7e3ecf9eb7c4559d9e6 and is available in the `release-branch.go1.11` branch of `x/net/http2`. Bumping the vendored version of `x/net/http2` to `6a8eb5e2b1816b30aa88d7e3ecf9eb7c4559d9e6` or higher should resolve the deadlock issue.\r\n\r\n\r\n**Environment**:\r\n- Kubernetes version: 1.10.6\r\n\r\n/sig api-machinery\r\ncc @cheftako @mml @wenjiaswe @lavalamp \r\n\r\n<!-- DO NOT EDIT BELOW THIS LINE -->\r\n/kind bug",
  "closed_at": "2019-03-13T21:02:49Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/70819/comments",
  "created_at": "2018-11-08T19:46:08Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/70819/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/70819",
  "id": 378888621,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/70819/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzNzg4ODg2MjE=",
  "number": 70819,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "kube-controller-manager becomes deadlocked but still passes healthcheck",
  "updated_at": "2019-03-13T21:02:49Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/70819",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/523590?v=4",
    "events_url": "https://api.github.com/users/jpbetz/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpbetz/followers",
    "following_url": "https://api.github.com/users/jpbetz/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpbetz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpbetz",
    "id": 523590,
    "login": "jpbetz",
    "node_id": "MDQ6VXNlcjUyMzU5MA==",
    "organizations_url": "https://api.github.com/users/jpbetz/orgs",
    "received_events_url": "https://api.github.com/users/jpbetz/received_events",
    "repos_url": "https://api.github.com/users/jpbetz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpbetz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpbetz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpbetz"
  }
}