{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/278?v=4",
    "events_url": "https://api.github.com/users/gnufied/events{/privacy}",
    "followers_url": "https://api.github.com/users/gnufied/followers",
    "following_url": "https://api.github.com/users/gnufied/following{/other_user}",
    "gists_url": "https://api.github.com/users/gnufied/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/gnufied",
    "id": 278,
    "login": "gnufied",
    "node_id": "MDQ6VXNlcjI3OA==",
    "organizations_url": "https://api.github.com/users/gnufied/orgs",
    "received_events_url": "https://api.github.com/users/gnufied/received_events",
    "repos_url": "https://api.github.com/users/gnufied/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/gnufied/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gnufied/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/gnufied"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/278?v=4",
      "events_url": "https://api.github.com/users/gnufied/events{/privacy}",
      "followers_url": "https://api.github.com/users/gnufied/followers",
      "following_url": "https://api.github.com/users/gnufied/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnufied/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gnufied",
      "id": 278,
      "login": "gnufied",
      "node_id": "MDQ6VXNlcjI3OA==",
      "organizations_url": "https://api.github.com/users/gnufied/orgs",
      "received_events_url": "https://api.github.com/users/gnufied/received_events",
      "repos_url": "https://api.github.com/users/gnufied/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gnufied/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnufied/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gnufied"
    },
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/100893?v=4",
      "events_url": "https://api.github.com/users/justinsb/events{/privacy}",
      "followers_url": "https://api.github.com/users/justinsb/followers",
      "following_url": "https://api.github.com/users/justinsb/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinsb/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/justinsb",
      "id": 100893,
      "login": "justinsb",
      "node_id": "MDQ6VXNlcjEwMDg5Mw==",
      "organizations_url": "https://api.github.com/users/justinsb/orgs",
      "received_events_url": "https://api.github.com/users/justinsb/received_events",
      "repos_url": "https://api.github.com/users/justinsb/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/justinsb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinsb/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/justinsb"
    }
  ],
  "author_association": "NONE",
  "body": "<!-- Thanks for filing an issue! Before hitting the button, please answer these questions.-->\r\n\r\n**Is this a request for help?** (If yes, you should use our troubleshooting guide and community support channels, see http://kubernetes.io/docs/troubleshooting/.):\r\n\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** (If you have found any duplicates, you should instead reply there.):\r\n\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one):\r\nBug\r\n<!--\r\nIf this is a BUG REPORT, please:\r\n  - Fill in as much of the template below as you can.  If you leave out\r\n    information, we can't help you as well.\r\n\r\nIf this is a FEATURE REQUEST, please:\r\n  - Describe *in detail* the feature/behavior/change you'd like to see.\r\n\r\nIn both cases, be ready for followup questions, and please respond in a timely\r\nmanner.  If we can't reproduce a bug or think a feature already exists, we\r\nmight close your issue.  If we're wrong, PLEASE feel free to reopen it and\r\nexplain why.\r\n-->\r\n\r\n**Kubernetes version** (use `kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"7+\", GitVersion:\"v1.7.0-alpha.0.1163+5e29e1ee055568-dirty\", GitCommit:\"5e29e1ee05556800cd2fe0dc5341d5de54b4ab47\", GitTreeState:\"dirty\", BuildDate:\"2017-03-14T02:36:44Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"7+\", GitVersion:\"v1.7.0-alpha.0.1163+5e29e1ee055568-dirty\", GitCommit:\"5e29e1ee05556800cd2fe0dc5341d5de54b4ab47\", GitTreeState:\"dirty\", BuildDate:\"2017-03-14T02:36:44Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**:\r\naws\r\n- **OS** (e.g. from /etc/os-release):\r\n- **Kernel** (e.g. `uname -a`):\r\n- **Install tools**:\r\nhack/local-up-cluster.sh\r\n- **Others**:\r\n\r\n\r\n**What happened**:\r\nI create a pod using ebs volume, but always get instance not found error message\r\n\r\n**What you expected to happen**:\r\nPod should be running \r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\n1.Create pv\r\n[root@ip-172-18-9-70 tmp]# kubectl get pv -o yaml\r\napiVersion: v1\r\nitems:\r\n- apiVersion: v1\r\n  kind: PersistentVolume\r\n  metadata:\r\n    annotations:\r\n      pv.kubernetes.io/bound-by-controller: \"yes\"\r\n    creationTimestamp: 2017-03-14T05:55:45Z\r\n    labels:\r\n      type: local\r\n    name: ebs1\r\n    namespace: \"\"\r\n    resourceVersion: \"237\"\r\n    selfLink: /api/v1/persistentvolumesebs1\r\n    uid: ddc9381a-087a-11e7-982f-0ecb7d4ecce4\r\n  spec:\r\n    accessModes:\r\n    - ReadWriteOnce\r\n    awsElasticBlockStore:\r\n      fsType: ext4\r\n      volumeID: aws://us-east-1d/vol-03b77fc85993fbafe\r\n    capacity:\r\n      storage: 1Gi\r\n    claimRef:\r\n      apiVersion: v1\r\n      kind: PersistentVolumeClaim\r\n      name: ebs1\r\n      namespace: default\r\n      resourceVersion: \"235\"\r\n      uid: e5984444-087a-11e7-982f-0ecb7d4ecce4\r\n    persistentVolumeReclaimPolicy: Retain\r\n  status:\r\n    phase: Bound\r\nkind: List\r\nmetadata: {}\r\nresourceVersion: \"\"\r\nselfLink: \"\"\r\n\r\n2.Create a pvc\r\n[root@ip-172-18-9-70 tmp]# kubectl get pvc ebs1 -o yaml\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  annotations:\r\n    pv.kubernetes.io/bind-completed: \"yes\"\r\n    pv.kubernetes.io/bound-by-controller: \"yes\"\r\n  creationTimestamp: 2017-03-14T05:55:58Z\r\n  name: ebs1\r\n  namespace: default\r\n  resourceVersion: \"239\"\r\n  selfLink: /api/v1/namespaces/default/persistentvolumeclaims/ebs1\r\n  uid: e5984444-087a-11e7-982f-0ecb7d4ecce4\r\nspec:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 1Gi\r\n  volumeName: ebs1\r\nstatus:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  capacity:\r\n    storage: 1Gi\r\n  phase: Bound\r\n\r\n3.Create a pod\r\n[root@ip-172-18-9-70 tmp]# kubectl get pvc ebs1 -o yaml\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  annotations:\r\n    pv.kubernetes.io/bind-completed: \"yes\"\r\n    pv.kubernetes.io/bound-by-controller: \"yes\"\r\n  creationTimestamp: 2017-03-14T05:55:58Z\r\n  name: ebs1\r\n  namespace: default\r\n  resourceVersion: \"239\"\r\n  selfLink: /api/v1/namespaces/default/persistentvolumeclaims/ebs1\r\n  uid: e5984444-087a-11e7-982f-0ecb7d4ecce4\r\nspec:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 1Gi\r\n  volumeName: ebs1\r\nstatus:\r\n  accessModes:\r\n  - ReadWriteOnce\r\n  capacity:\r\n    storage: 1Gi\r\n  phase: Bound\r\n[root@ip-172-18-9-70 tmp]# kubectl get pods -o yaml\r\napiVersion: v1\r\nitems:\r\n- apiVersion: v1\r\n  kind: Pod\r\n  metadata:\r\n    creationTimestamp: 2017-03-14T05:56:09Z\r\n    labels:\r\n      name: frontendhttp\r\n    name: mypod1\r\n    namespace: default\r\n    resourceVersion: \"253\"\r\n    selfLink: /api/v1/namespaces/default/pods/mypod1\r\n    uid: ebfd0a60-087a-11e7-982f-0ecb7d4ecce4\r\n  spec:\r\n    containers:\r\n    - image: aosqe/hello-openshift\r\n      imagePullPolicy: Always\r\n      name: myfrontend\r\n      ports:\r\n      - containerPort: 80\r\n        name: http-server\r\n        protocol: TCP\r\n      resources: {}\r\n      terminationMessagePath: /dev/termination-log\r\n      terminationMessagePolicy: File\r\n      volumeMounts:\r\n      - mountPath: /tmp\r\n        name: aws\r\n      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\r\n        name: default-token-lnswv\r\n        readOnly: true\r\n    dnsPolicy: ClusterFirst\r\n    nodeName: ip-172-18-9-70.ec2.internal\r\n    restartPolicy: Always\r\n    schedulerName: default-scheduler\r\n    securityContext: {}\r\n    serviceAccount: default\r\n    serviceAccountName: default\r\n    terminationGracePeriodSeconds: 30\r\n    tolerations:\r\n    - effect: NoExecute\r\n      key: node.alpha.kubernetes.io/notReady\r\n      operator: Exists\r\n      tolerationSeconds: 300\r\n    - effect: NoExecute\r\n      key: node.alpha.kubernetes.io/unreachable\r\n      operator: Exists\r\n      tolerationSeconds: 300\r\n    volumes:\r\n    - name: aws\r\n      persistentVolumeClaim:\r\n        claimName: ebs1\r\n    - name: default-token-lnswv\r\n      secret:\r\n        defaultMode: 420\r\n        secretName: default-token-lnswv\r\n  status:\r\n    conditions:\r\n    - lastProbeTime: null\r\n      lastTransitionTime: 2017-03-14T05:56:09Z\r\n      status: \"True\"\r\n      type: Initialized\r\n    - lastProbeTime: null\r\n      lastTransitionTime: 2017-03-14T05:56:09Z\r\n      message: 'containers with unready status: [myfrontend]'\r\n      reason: ContainersNotReady\r\n      status: \"False\"\r\n      type: Ready\r\n    - lastProbeTime: null\r\n      lastTransitionTime: 2017-03-14T05:56:09Z\r\n      status: \"True\"\r\n      type: PodScheduled\r\n    containerStatuses:\r\n    - image: aosqe/hello-openshift\r\n      imageID: \"\"\r\n      lastState: {}\r\n      name: myfrontend\r\n      ready: false\r\n      restartCount: 0\r\n      state:\r\n        waiting:\r\n          reason: ContainerCreating\r\n    hostIP: 172.18.9.70\r\n    phase: Pending\r\n    qosClass: BestEffort\r\n    startTime: 2017-03-14T05:56:09Z\r\nkind: List\r\nmetadata: {}\r\nresourceVersion: \"\"\r\nselfLink: \"\"\r\n4.[root@ip-172-18-9-70 tmp]# kubectl describe pods mypod1\r\nName:\t\tmypod1\r\nNamespace:\tdefault\r\nNode:\t\tip-172-18-9-70.ec2.internal/172.18.9.70\r\nStart Time:\tTue, 14 Mar 2017 01:56:09 -0400\r\nLabels:\t\tname=frontendhttp\r\nAnnotations:\t<none>\r\nStatus:\t\tPending\r\nIP:\t\t\r\nControllers:\t<none>\r\nContainers:\r\n  myfrontend:\r\n    Container ID:\t\r\n    Image:\t\taosqe/hello-openshift\r\n    Image ID:\t\t\r\n    Port:\t\t80/TCP\r\n    State:\t\tWaiting\r\n      Reason:\t\tContainerCreating\r\n    Ready:\t\tFalse\r\n    Restart Count:\t0\r\n    Environment:\t<none>\r\n    Mounts:\r\n      /tmp from aws (rw)\r\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-lnswv (ro)\r\nConditions:\r\n  Type\t\tStatus\r\n  Initialized \tTrue \r\n  Ready \tFalse \r\n  PodScheduled \tTrue \r\nVolumes:\r\n  aws:\r\n    Type:\tPersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\r\n    ClaimName:\tebs1\r\n    ReadOnly:\tfalse\r\n  default-token-lnswv:\r\n    Type:\tSecret (a volume populated by a Secret)\r\n    SecretName:\tdefault-token-lnswv\r\n    Optional:\tfalse\r\nQoS Class:\tBestEffort\r\nNode-Selectors:\t<none>\r\nTolerations:\tnode.alpha.kubernetes.io/notReady=:Exists:NoExecute for 300s\r\n\t\tnode.alpha.kubernetes.io/unreachable=:Exists:NoExecute for 300s\r\nEvents:\r\n  FirstSeen\tLastSeen\tCount\tFrom\t\t\t\t\tSubObjectPath\tType\t\tReason\t\tMessage\r\n  ---------\t--------\t-----\t----\t\t\t\t\t-------------\t--------\t------\t\t-------\r\n  17m\t\t17m\t\t1\tdefault-scheduler\t\t\t\t\tNormal\t\tScheduled\tSuccessfully assigned mypod1 to ip-172-18-9-70.ec2.internal\r\n  17m\t\t1m\t\t16\tattachdetach\t\t\t\t\t\tWarning\t\tFailedMount\tFailed to attach volume \"ebs1\" on node \"ip-172-18-9-70.ec2.internal\" with: error finding instance ip-172-18-9-70.ec2.internal: instance not found\r\n  15m\t\t10s\t\t8\tkubelet, ip-172-18-9-70.ec2.internal\t\t\tWarning\t\tFailedMount\tUnable to mount volumes for pod \"mypod1_default(ebfd0a60-087a-11e7-982f-0ecb7d4ecce4)\": timeout expired waiting for volumes to attach/mount for pod \"default\"/\"mypod1\". list of unattached/unmounted volumes=[aws]\r\n  15m\t\t10s\t\t8\tkubelet, ip-172-18-9-70.ec2.internal\t\t\tWarning\t\tFailedSync\tError syncing pod, skipping: timeout expired waiting for volumes to attach/mount for pod \"default\"/\"mypod1\". list of unattached/unmounted volumes=[aws]\r\n\r\n**Anything else we need to know**:\r\n[root@ip-172-18-9-70 tmp]# ps -ef | grep kubelet\r\nroot      6084  4443  2 01:55 pts/2    00:02:05 /root/kubernetes/_output/local/bin/linux/amd64/hyperkube apiserver --v=7 --cert-dir=/var/run/kubernetes --client-ca-file=/var/run/kubernetes/client-ca.crt --service-account-key-file=/tmp/kube-serviceaccount.key --service-account-lookup=false --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,SecurityContextDeny,ResourceQuota,DefaultStorageClass,DefaultTolerationSeconds --admission-control-config-file= --bind-address=0.0.0.0 --secure-port=6443 --tls-cert-file=/var/run/kubernetes/serving-kube-apiserver.crt --tls-private-key-file=/var/run/kubernetes/serving-kube-apiserver.key --tls-ca-file=/var/run/kubernetes/server-ca.crt --insecure-bind-address=127.0.0.1 --insecure-port=8080 --kubelet-preferred-address-types=ip-172-18-9-70.ec2.internal --etcd-servers=http://127.0.0.1:2379 --service-cluster-ip-range=10.0.0.0/24 --feature-gates=AllAlpha=true --cloud-provider=aws --cloud-config=/etc/aws.conf --requestheader-username-headers=X-Remote-User --requestheader-group-headers=X-Remote-Group --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-client-ca-file=/var/run/kubernetes/request-header-ca.crt --requestheader-allowed-names=system:auth-proxy --cors-allowed-origins=/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$\r\nroot      6303  4443  0 01:55 pts/2    00:00:00 sudo -E /root/kubernetes/_output/local/bin/linux/amd64/hyperkube kubelet --enable-cri=true --v=7 --chaos-chance=0.0 --container-runtime=docker --rkt-path= --rkt-stage1-image= --hostname-override=ip-172-18-9-70.ec2.internal --cloud-provider=aws --cloud-config=/etc/aws.conf --address=127.0.0.1 --require-kubeconfig --kubeconfig /var/run/kubernetes/kubelet.kubeconfig --feature-gates=AllAlpha=true --cpu-cfs-quota=true --enable-controller-attach-detach=true --cgroups-per-qos=true --cgroup-driver=systemd --keep-terminated-pod-volumes=true --eviction-hard=memory.available<100Mi --eviction-soft= --eviction-pressure-transition-period=1m --pod-manifest-path=/var/run/kubernetes/static-pods --cluster-dns=8.8.8.8 --port=10250\r\nroot      6313  6303  1 01:55 pts/2    00:01:18 /root/kubernetes/_output/local/bin/linux/amd64/hyperkube kubelet --enable-cri=true --v=7 --chaos-chance=0.0 --container-runtime=docker --rkt-path= --rkt-stage1-image= --hostname-override=ip-172-18-9-70.ec2.internal --cloud-provider=aws --cloud-config=/etc/aws.conf --address=127.0.0.1 --require-kubeconfig --kubeconfig /var/run/kubernetes/kubelet.kubeconfig --feature-gates=AllAlpha=true --cpu-cfs-quota=true --enable-controller-attach-detach=true --cgroups-per-qos=true --cgroup-driver=systemd --keep-terminated-pod-volumes=true --eviction-hard=memory.available<100Mi --eviction-soft= --eviction-pressure-transition-period=1m --pod-manifest-path=/var/run/kubernetes/static-pods --cluster-dns=8.8.8.8 --port=10250\r\nroot     18739 20526  0 03:38 pts/0    00:00:00 grep --color=auto kubelet\r\n\r\n",
  "closed_at": "2017-03-17T22:12:35Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43063/comments",
  "created_at": "2017-03-14T07:47:59Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43063/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/43063",
  "id": 213991671,
  "labels": [
    {
      "color": "d93f0b",
      "default": false,
      "description": null,
      "id": 435667038,
      "name": "release-blocker",
      "node_id": "MDU6TGFiZWw0MzU2NjcwMzg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/release-blocker"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43063/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2019-08-26T17:23:42Z",
    "closed_issues": 1693,
    "created_at": "2016-11-12T00:35:38Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/10052848?v=4",
      "events_url": "https://api.github.com/users/saad-ali/events{/privacy}",
      "followers_url": "https://api.github.com/users/saad-ali/followers",
      "following_url": "https://api.github.com/users/saad-ali/following{/other_user}",
      "gists_url": "https://api.github.com/users/saad-ali/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/saad-ali",
      "id": 10052848,
      "login": "saad-ali",
      "node_id": "MDQ6VXNlcjEwMDUyODQ4",
      "organizations_url": "https://api.github.com/users/saad-ali/orgs",
      "received_events_url": "https://api.github.com/users/saad-ali/received_events",
      "repos_url": "https://api.github.com/users/saad-ali/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/saad-ali/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saad-ali/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/saad-ali"
    },
    "description": "",
    "due_on": "2017-03-22T07:00:00Z",
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/31",
    "id": 2130587,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/31/labels",
    "node_id": "MDk6TWlsZXN0b25lMjEzMDU4Nw==",
    "number": 31,
    "open_issues": 0,
    "state": "closed",
    "title": "v1.6",
    "updated_at": "2019-08-26T17:23:42Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/31"
  },
  "node_id": "MDU6SXNzdWUyMTM5OTE2NzE=",
  "number": 43063,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "instance not found when using aws cloud-provider ",
  "updated_at": "2019-05-09T06:32:43Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43063",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/12795394?v=4",
    "events_url": "https://api.github.com/users/chao007/events{/privacy}",
    "followers_url": "https://api.github.com/users/chao007/followers",
    "following_url": "https://api.github.com/users/chao007/following{/other_user}",
    "gists_url": "https://api.github.com/users/chao007/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/chao007",
    "id": 12795394,
    "login": "chao007",
    "node_id": "MDQ6VXNlcjEyNzk1Mzk0",
    "organizations_url": "https://api.github.com/users/chao007/orgs",
    "received_events_url": "https://api.github.com/users/chao007/received_events",
    "repos_url": "https://api.github.com/users/chao007/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/chao007/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chao007/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/chao007"
  }
}