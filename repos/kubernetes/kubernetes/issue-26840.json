{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "FYI. I am playing with init containers, and just did a simple test:\n\nFirst create two pods with `apply -f`:\n\n```\n[tony@localhost kubernetes]$ cat ~/Desktop/yaml/test_k8s/pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\n  annotations:\n    pod.alpha.kubernetes.io/init-containers: \"[{\\\"name\\\":\\\"wait\\\",\\\"image\\\":\\\"ubuntu:16.04\\\",\\\"command\\\":[\\\"/bin/sh\\\",\\\"-c\\\",\\\"sleep 120\\\"]}]\"\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.9.1\n    imagePullPolicy: IfNotPresent\n    ports:\n    - containerPort: 80\n  restartPolicy: Never\n[tony@localhost kubernetes]$ kubectl apply -f ~/Desktop/yaml/test_k8s/pod.yaml\npod \"nginx\" created\n[tony@localhost kubernetes]$ cat ~/Desktop/yaml/test_k8s/pod_new.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginxtwo\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.9.1\n    imagePullPolicy: IfNotPresent\n    ports:\n    - containerPort: 80\n  restartPolicy: Never\n[tony@localhost kubernetes]$ kubectl apply -f ~/Desktop/yaml/test_k8s/pod_new.yaml\npod \"nginxtwo\" created\n```\n\nThen wait for while before the two pods running, update yaml files and run `apply -f` again:\n\n```\n[tony@localhost kubernetes]$ cat ~/Desktop/yaml/test_k8s/pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\n  annotations:\n    pod.alpha.kubernetes.io/init-containers: \"[{\\\"name\\\":\\\"wait\\\",\\\"image\\\":\\\"ubuntu:16.04\\\",\\\"command\\\":[\\\"/bin/sh\\\",\\\"-c\\\",\\\"sleep 120\\\"]}]\"\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    imagePullPolicy: IfNotPresent\n    ports:\n    - containerPort: 80\n  restartPolicy: Never\n[tony@localhost kubernetes]$ kubectl apply -f ~/Desktop/yaml/test_k8s/pod.yaml\nproto: no encoder for TypeMeta unversioned.TypeMeta [GetProperties]\nproto: tag has too few fields: \"-\"\nproto: no coders for struct *reflect.rtype\nproto: no encoder for sec int64 [GetProperties]\nproto: no encoder for nsec int32 [GetProperties]\nproto: no encoder for loc *time.Location [GetProperties]\nproto: no encoder for Time time.Time [GetProperties]\nproto: no encoder for i resource.int64Amount [GetProperties]\nproto: no encoder for d resource.infDecAmount [GetProperties]\nproto: no encoder for s string [GetProperties]\nproto: no encoder for Format resource.Format [GetProperties]\nproto: no encoder for InitContainers []v1.Container [GetProperties]\nproto: no coders for intstr.Type\nproto: no encoder for Type intstr.Type [GetProperties]\nproto: no encoder for InitContainerStatuses []v1.ContainerStatus [GetProperties]\nThe Pod \"nginx\" is invalid.\nspec: Forbidden: pod updates may not change fields other than `containers[*].image` or `spec.activeDeadlineSeconds`\n[tony@localhost kubernetes]$ cat ~/Desktop/yaml/test_k8s/pod_new.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginxtwo\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    imagePullPolicy: IfNotPresent\n    ports:\n    - containerPort: 80\n  restartPolicy: Never\n[tony@localhost kubernetes]$ kubectl apply -f ~/Desktop/yaml/test_k8s/pod_new.yaml\npod \"nginxtwo\" configured\n```\n\nSeems pod validation failed when update, and I noticed the `VolumeMounts` is not equal. @smarterclayton ptal.\n",
  "closed_at": "2016-07-21T05:56:00Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 12,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/26840/comments",
  "created_at": "2016-06-04T07:27:57Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/26840/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/26840",
  "id": 158492542,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/26840/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNTg0OTI1NDI=",
  "number": 26840,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "apply failed when use init containers",
  "updated_at": "2016-07-21T17:29:13Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/26840",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1555564?v=4",
    "events_url": "https://api.github.com/users/adohe-zz/events{/privacy}",
    "followers_url": "https://api.github.com/users/adohe-zz/followers",
    "following_url": "https://api.github.com/users/adohe-zz/following{/other_user}",
    "gists_url": "https://api.github.com/users/adohe-zz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/adohe-zz",
    "id": 1555564,
    "login": "adohe-zz",
    "node_id": "MDQ6VXNlcjE1NTU1NjQ=",
    "organizations_url": "https://api.github.com/users/adohe-zz/orgs",
    "received_events_url": "https://api.github.com/users/adohe-zz/received_events",
    "repos_url": "https://api.github.com/users/adohe-zz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/adohe-zz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/adohe-zz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/adohe-zz"
  }
}