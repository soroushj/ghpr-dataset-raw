{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\nWhen parsing an audit webhook config file that errors (ca file does not exist), the apiserver will panic.\r\n\r\n**What you expected to happen**:\r\nError gracefully with explanation to the error (ca authority does not exist).\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n```\r\n$ etcd &\r\n$ cat <<EOF > audit.yaml\r\napiVersion: audit.k8s.io/v1\r\nkind: Policy\r\nrules:\r\n- level: RequestResponse\r\nEOF\r\n$ cat <<EOF > webhook-config.yaml\r\nkind: Config\r\nclusters:\r\n- cluster:\r\n    server: https://1.2.3.4:6443\r\n    certificate-authority: ca.pem\r\n  name: logstash\r\ncontexts:\r\n- context:\r\n    cluster: logstash\r\n    user: \"\"\r\n  name: default-context\r\ncurrent-context: default-context\r\npreferences: {}\r\nusers: []\r\nEOF\r\n$ rm -f ca.pem\r\n$ kube-apiserver --audit-webhook-config-file webhook-config.yaml --etcd-servers http://127.0.0.1:2379 --audit-policy-file audit.yaml \r\nW0305 22:18:40.033459    9933 services.go:37] No CIDR for service cluster IPs specified. Default value which was 10.0.0.0/24 is deprecated and will be removed in future releases. Please specify it using --service-cluster-ip-range on kube-apiserver.\r\nI0305 22:18:40.033557    9933 server.go:656] external host was not specified, using 10.132.0.3\r\nW0305 22:18:40.033569    9933 authentication.go:469] AnonymousAuth is not allowed with the AlwaysAllow authorizer. Resetting AnonymousAuth to false. You should use a different authorizer\r\nI0305 22:18:40.034061    9933 server.go:153] Version: v1.19.0-alpha.0.597+8508875e4d400c\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x18425c5]\r\n\r\ngoroutine 1 [running]:\r\nk8s.io/kubernetes/vendor/k8s.io/apiserver/plugin/pkg/audit/webhook.loadWebhook(0x7fff804bcd91, 0xa, 0x4544946, 0xc, 0x4544953, 0x2, 0x2540be400, 0x0, 0x0, 0x0, ...)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apiserver/plugin/pkg/audit/webhook/webhook.go:67 +0x195\r\nk8s.io/kubernetes/vendor/k8s.io/apiserver/plugin/pkg/audit/webhook.NewBackend(0x7fff804bcd91, 0xa, 0x4544946, 0xc, 0x4544953, 0x2, 0x2540be400, 0x0, 0x0, 0x0, ...)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apiserver/plugin/pkg/audit/webhook/webhook.go:91 +0x87\r\nk8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/server/options.(*AuditWebhookOptions).newUntruncatedBackend(0xc000229c30, 0x0, 0xc0003426e0, 0x0, 0x0, 0xc000325440)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/server/options/audit.go:605 +0x72\r\nk8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/server/options.(*AuditOptions).ApplyTo(0xc000229b80, 0xc0005526c0, 0xc00061ee00, 0x51c25a0, 0xc000988c80, 0xc000325440, 0xc000d0cf70, 0xc000325360, 0x0)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/k8s.io/apiserver/pkg/server/options/audit.go:335 +0xa6a\r\nk8s.io/kubernetes/cmd/kube-apiserver/app.buildGenericConfig(0xc00094adc0, 0xc0000e8000, 0x407ac40, 0x30, 0x30, 0xc00043dc00, 0xd0, 0xc000514410, 0x30, 0x30, ...)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/app/server.go:525 +0xf2a\r\nk8s.io/kubernetes/cmd/kube-apiserver/app.CreateKubeAPIServerConfig(0xc00094adc0, 0x0, 0x0, 0xc0000e8000, 0x0, 0x0, 0xc000a534f8, 0x42ef01, 0x46d14e8, 0xc000a53508, ...)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/app/server.go:284 +0x50\r\nk8s.io/kubernetes/cmd/kube-apiserver/app.CreateServerChain(0xc00094adc0, 0xc00029ccc0, 0x453b867, 0xc, 0xc000a53c48)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/app/server.go:175 +0x74\r\nk8s.io/kubernetes/cmd/kube-apiserver/app.Run(0xc00094adc0, 0xc00029ccc0, 0x0, 0x0)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/app/server.go:155 +0x101\r\nk8s.io/kubernetes/cmd/kube-apiserver/app.NewAPIServerCommand.func1(0xc00032f900, 0xc00008c720, 0x0, 0x6, 0x0, 0x0)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/app/server.go:122 +0x104\r\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).execute(0xc00032f900, 0xc0000bc010, 0x6, 0x6, 0xc00032f900, 0xc0000bc010)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:826 +0x460\r\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0xc00032f900, 0x15f9886704418f88, 0x76c41e0, 0xc00006c750)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:914 +0x2fb\r\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute(...)\r\n\t/go/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:864\r\nmain.main()\r\n\t_output/dockerized/go/src/k8s.io/kubernetes/cmd/kube-apiserver/apiserver.go:43 +0xcd\r\n```\r\n\r\n**Anything else we need to know?**:\r\n[Here](https://github.com/kubernetes/kubernetes/blob/8508875e4d400c1454561aa6d879860984bcdf59/staging/src/k8s.io/apiserver/plugin/pkg/audit/webhook/webhook.go#L67) we are assigning a null pointer when `err != nil`. We just need to add a standard `if err != nil { return nil, err }` before. Will follow up with a PR shortly.\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):`kube-apiserver --version\r\nKubernetes v1.19.0-alpha.0.597+8508875e4d400c`\r\n\r\n/kind bug\r\n/area apiserver\r\n",
  "closed_at": "2020-03-09T13:05:42Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88878/comments",
  "created_at": "2020-03-05T23:29:29Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88878/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/88878",
  "id": 576593158,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 136601536,
      "name": "area/apiserver",
      "node_id": "MDU6TGFiZWwxMzY2MDE1MzY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/apiserver"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88878/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NzY1OTMxNTg=",
  "number": 88878,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "API Server: Panic when fail to load webhook config file",
  "updated_at": "2020-03-09T13:05:42Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88878",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/15893072?v=4",
    "events_url": "https://api.github.com/users/JoshVanL/events{/privacy}",
    "followers_url": "https://api.github.com/users/JoshVanL/followers",
    "following_url": "https://api.github.com/users/JoshVanL/following{/other_user}",
    "gists_url": "https://api.github.com/users/JoshVanL/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/JoshVanL",
    "id": 15893072,
    "login": "JoshVanL",
    "node_id": "MDQ6VXNlcjE1ODkzMDcy",
    "organizations_url": "https://api.github.com/users/JoshVanL/orgs",
    "received_events_url": "https://api.github.com/users/JoshVanL/received_events",
    "repos_url": "https://api.github.com/users/JoshVanL/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/JoshVanL/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JoshVanL/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/JoshVanL"
  }
}