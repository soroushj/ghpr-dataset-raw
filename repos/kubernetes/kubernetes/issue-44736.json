{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "<!-- Thanks for filing an issue! Before hitting the button, please answer these questions.-->\r\n\r\n**Is this a request for help?** (If yes, you should use our troubleshooting guide and community support channels, see http://kubernetes.io/docs/troubleshooting/.): No\r\n\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** (If you have found any duplicates, you should instead reply there.): podpresets, kubectl\r\n\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): BUG REPORT\r\n\r\n<!--\r\nIf this is a BUG REPORT, please:\r\n  - Fill in as much of the template below as you can.  If you leave out\r\n    information, we can't help you as well.\r\n\r\nIf this is a FEATURE REQUEST, please:\r\n  - Describe *in detail* the feature/behavior/change you'd like to see.\r\n\r\nIn both cases, be ready for followup questions, and please respond in a timely\r\nmanner.  If we can't reproduce a bug or think a feature already exists, we\r\nmight close your issue.  If we're wrong, PLEASE feel free to reopen it and\r\nexplain why.\r\n-->\r\n\r\n**Kubernetes version** (use `kubectl version`):\r\nClient Version: version.Info{Major:\"1\", Minor:\"6\", GitVersion:\"v1.6.2\", GitCommit:\"477efc3cbe6a7effca06bd1452fa356e2201e1ee\", GitTreeState:\"clean\", BuildDate:\"2017-04-19T20:33:11Z\", GoVersion:\"go1.7.5\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"6\", GitVersion:\"v1.6.2\", GitCommit:\"477efc3cbe6a7effca06bd1452fa356e2201e1ee\", GitTreeState:\"clean\", BuildDate:\"2017-04-19T20:22:08Z\", GoVersion:\"go1.7.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**: Ubuntu 16.10 (Yakkety Yak) 7-node single master Kubernetes cluster\r\n- **OS** (e.g. from /etc/os-release): Client: MacOS Darwin 10.12.4, Server: Ubuntu 16.10 \r\n- **Kernel** (e.g. `uname -a`): 4.8.0.46-generic\r\n- **Install tools**: kubeadm\r\n- **Others**: Using `--feature-gates=AllAlpha=true` on all k8s manifests and kubelet.\r\n\r\n**What happened**:\r\nCreated a `PodPreset` using the following manifest:\r\n```\r\nkind: PodPreset\r\napiVersion: settings.k8s.io/v1alpha1\r\nmetadata:\r\n  name: busybox-settings\r\n  namespace: default\r\nspec:\r\n  selector:\r\n    matchLabels:\r\n      role: busybox\r\n  env:\r\n    - name: NATE\r\n      value: \"isgood\"\r\n```\r\n`kubectl create -f busybox-podpreset.yaml` returns `podpreset \"busybox-settings\" created`, but `kubectl get podpreset` gives me the following error:\r\n\r\n```\r\nNAME      KIND\r\nerror: unknown type &settings.PodPreset{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"busybox-settings\", GenerateName:\"\", Namespace:\"default\", SelfLink:\"/apis/settings.k8s.io/v1alpha1/namespaces/default/podpresets/busybox-settings\", UID:\"48fd7c1c-25f7-11e7-87ae-0025905ca872\", ResourceVersion:\"1574921\", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{sec:63628309766, nsec:0, loc:(*time.Location)(0x26c11e0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\"}, Spec:settings.PodPresetSpec{Selector:v1.LabelSelector{MatchLabels:map[string]string{\"role\":\"busybox\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}, Env:[]api.EnvVar{api.EnvVar{Name:\"NATE\", Value:\"isgood\", ValueFrom:(*api.EnvVarSource)(nil)}}, EnvFrom:[]api.EnvFromSource(nil), Volumes:[]api.Volume(nil), VolumeMounts:[]api.VolumeMount(nil)}}\r\n``` \r\n\r\nHowever, `kubectl get podpreset -o yaml busybox-settings` returns the expected manifest:\r\n```\r\napiVersion: settings.k8s.io/v1alpha1\r\nkind: PodPreset\r\nmetadata:\r\n  creationTimestamp: 2017-04-20T18:29:26Z\r\n  generation: 1\r\n  name: busybox-settings\r\n  namespace: default\r\n  resourceVersion: \"1574921\"\r\n  selfLink: /apis/settings.k8s.io/v1alpha1/namespaces/default/podpresets/busybox-settings\r\n  uid: 48fd7c1c-25f7-11e7-87ae-0025905ca872\r\nspec:\r\n  env:\r\n  - name: NATE\r\n    value: isgood\r\n  selector:\r\n    matchLabels:\r\n      role: busybox\r\n```\r\nAlso, the PodPreset works as expected; pods with the label `role: busybox` are receiving the environment variable as indicated in the PodPreset, as well as the following line in the manifest for the pod:\r\n```\r\nmetadata:\r\n  annotations:\r\n    podpreset.admission.kubernetes.io/busybox-settings: \"1574921\"\r\n```\r\n\r\n**What you expected to happen**:\r\nI expected `kubectl get podpreset` to return a table of existing PodPresets along with their selectors.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\nAs indicated above:\r\n1. Enable a Kubernetes 1.6.2 cluster to use PodPresets\r\n2. Create a PodPreset using the manifest above\r\n3. Run `kubectl get podpreset`\r\n\r\n**Anything else we need to know**:\r\nAlso of note: `kubectl delete` works fine on PodPresets, either by using the manifest file creating it or the name of the manifest. Also, tab completion works on PodPresets on the command line, as well as `-o json` and `-o jsonpath`. Only `kubectl get podpreset` and `kubectl get podpreset -o wide` seem to be broken.\r\n",
  "closed_at": "2017-05-10T04:16:17Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44736/comments",
  "created_at": "2017-04-20T18:57:52Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44736/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/44736",
  "id": 223165752,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG CLI.",
      "id": 450823910,
      "name": "sig/cli",
      "node_id": "MDU6TGFiZWw0NTA4MjM5MTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cli"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44736/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMjMxNjU3NTI=",
  "number": 44736,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "PodPresets can't be enumerated by `kubectl get podpreset`",
  "updated_at": "2017-05-10T04:16:17Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/44736",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/945716?v=4",
    "events_url": "https://api.github.com/users/IronhandedLayman/events{/privacy}",
    "followers_url": "https://api.github.com/users/IronhandedLayman/followers",
    "following_url": "https://api.github.com/users/IronhandedLayman/following{/other_user}",
    "gists_url": "https://api.github.com/users/IronhandedLayman/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/IronhandedLayman",
    "id": 945716,
    "login": "IronhandedLayman",
    "node_id": "MDQ6VXNlcjk0NTcxNg==",
    "organizations_url": "https://api.github.com/users/IronhandedLayman/orgs",
    "received_events_url": "https://api.github.com/users/IronhandedLayman/received_events",
    "repos_url": "https://api.github.com/users/IronhandedLayman/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/IronhandedLayman/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/IronhandedLayman/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/IronhandedLayman"
  }
}