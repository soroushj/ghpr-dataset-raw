{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
    "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
    "followers_url": "https://api.github.com/users/liggitt/followers",
    "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/liggitt",
    "id": 980082,
    "login": "liggitt",
    "node_id": "MDQ6VXNlcjk4MDA4Mg==",
    "organizations_url": "https://api.github.com/users/liggitt/orgs",
    "received_events_url": "https://api.github.com/users/liggitt/received_events",
    "repos_url": "https://api.github.com/users/liggitt/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/liggitt"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
      "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
      "followers_url": "https://api.github.com/users/liggitt/followers",
      "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/liggitt",
      "id": 980082,
      "login": "liggitt",
      "node_id": "MDQ6VXNlcjk4MDA4Mg==",
      "organizations_url": "https://api.github.com/users/liggitt/orgs",
      "received_events_url": "https://api.github.com/users/liggitt/received_events",
      "repos_url": "https://api.github.com/users/liggitt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/liggitt"
    }
  ],
  "author_association": "MEMBER",
  "body": "**What happened**:\r\n\r\nWe enabled the `BoundServiceAccountTokenVolume` feature gate on `v1.15.6` to start switching from non-expiring to expiring ServiceAccount tokens as [introduced here](https://github.com/kubernetes/kubernetes/issues/70679). It works well.\r\n\r\nWe then wanted to completely get rid of the \"legacy\" non-expiring ServiceAccount token Secrets. To do that we configured `controller-manager` with `--controllers=*,-serviceaccount-token` (so it wouldn't auto-create the Secrets), removed the existing Secrets and removed the reference from the respective ServiceAccount to the Secret. This works as expected: No non-expiring token Secrets are generated.\r\n\r\nHowever, when creating a Pod we now see:\r\n```\r\nEvents:\r\n  Type     Reason        Age               From                   Message\r\n  ----     ------        ----              ----                   -------\r\n  Warning  FailedCreate  5s (x2 over 14s)  replicaset-controller  Error creating: No API token found for service account \"chaoskube\", retry after the token is automatically created and added to the service account\r\n```\r\n\r\nThis happens because the [AdmissionPlugin](https://github.com/kubernetes/kubernetes/blob/v1.15.7/plugin/pkg/admission/serviceaccount/admission.go#L433) rejects the Pod because it cannot find a ServiceAccount token Secret (because it doesn't exist anymore as intended).\r\n\r\n**What you expected to happen**:\r\n\r\nWhen using the `BoundServiceAccountTokenVolume` feature the legacy ServiceAccount token Secrets aren't used anymore, so a Pod should not be rejected if the Secret doesn't exist. The Pod doesn't even use the Secret at all.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n* Enable `BoundServiceAccountTokenVolume=true` feature gate\r\n* Start `controller-manager` with `--controllers=*,-serviceaccount-token`\r\n* Create a new ServiceAccount\r\n* Deploy a dummy app using that ServiceAccount\r\n* Observe no Pod being created with `kubectl get pods`\r\n* Describe the corresponding ReplicaSet to see the above Error event.\r\n\r\n**Anything else we need to know?**:\r\n\r\nLooking at the [relevant code section](https://github.com/kubernetes/kubernetes/blob/v1.15.7/plugin/pkg/admission/serviceaccount/admission.go#L428-L437) it seems that at least one legacy Secret must exist in order for the Pod to get admitted. This is enforced even when `BoundServiceAccountTokenVolume=true` and we're relying on projected token volumes.\r\n\r\nFollowing the code path when `BoundServiceAccountTokenVolume` is enabled reveals that the token [fetched here](https://github.com/kubernetes/kubernetes/blob/v1.15.7/plugin/pkg/admission/serviceaccount/admission.go#L428) is never going to be used later on as there's no SecretVolume to be mounted in [here](https://github.com/kubernetes/kubernetes/blob/v1.15.7/plugin/pkg/admission/serviceaccount/admission.go#L511).\r\n\r\nIn other words: [`len(serviceAccountToken) == 0`](https://github.com/kubernetes/kubernetes/blob/v1.15.7/plugin/pkg/admission/serviceaccount/admission.go#L428) is just fine when `BoundServiceAccountTokenVolume=true`.\r\n\r\nDuring the transition period it's fine to have the legacy Secrets lying around but ultimately it's desirable to get rid of them because as far as I can tell they are still happily accepted by the API server.\r\n\r\n**Environment**:\r\n- Kubernetes version: tested on `v1.15.6` but code seems the same in `v1.16.x` and `v1.17.x`\r\n- Cloud provider or hardware configuration: [AWS](https://github.com/zalando-incubator/kubernetes-on-aws)\r\n- OS (e.g: `cat /etc/os-release`): Ubuntu 18.04.3 LTS\r\n- Kernel (e.g. `uname -a`): 4.15.0-1054-aws\r\n- Install tools: https://github.com/zalando-incubator/kubernetes-on-aws\r\n\r\n/kind bug\r\n/sig auth\r\n\r\n@kubernetes/sig-auth-bugs",
  "closed_at": "2020-01-15T06:21:33Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/87028/comments",
  "created_at": "2020-01-09T17:57:27Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/87028/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/87028",
  "id": 547632038,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Auth.",
      "id": 357119284,
      "name": "sig/auth",
      "node_id": "MDU6TGFiZWwzNTcxMTkyODQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/auth"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/87028/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NDc2MzIwMzg=",
  "number": 87028,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "BoundServiceAccountTokenVolumes: Pod rejected when solely relying on projected token volumes",
  "updated_at": "2020-01-15T23:22:17Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/87028",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/36162?v=4",
    "events_url": "https://api.github.com/users/linki/events{/privacy}",
    "followers_url": "https://api.github.com/users/linki/followers",
    "following_url": "https://api.github.com/users/linki/following{/other_user}",
    "gists_url": "https://api.github.com/users/linki/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/linki",
    "id": 36162,
    "login": "linki",
    "node_id": "MDQ6VXNlcjM2MTYy",
    "organizations_url": "https://api.github.com/users/linki/orgs",
    "received_events_url": "https://api.github.com/users/linki/received_events",
    "repos_url": "https://api.github.com/users/linki/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/linki/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/linki/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/linki"
  }
}