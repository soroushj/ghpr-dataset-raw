{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "<!-- This form is for bug reports and feature requests ONLY!\r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n\r\nIf this may be security issue, please disclose it privately via https://kubernetes.io/security/.\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n/kind feature\r\n/kind enhancement\r\n\r\n**What happened**:\r\nWe recently added #62211 that improves performance of inter-pod affinity/anti-affinity predicate significantly. This improvement applies when a pod with inter-pod affinity/anti-affinity rules is being scheduled. Inter-pod anti-affinity is symmetric meaning that it applies both at the time of scheduling a pod with such rules as well as at the time of scheduling any other pod in a cluster that is running one or more pods with inter-pod anti-affinity rules. The aforementioned PR optimizes the first part of the anti-affinity check, not the second part. However,  [the scheduler code already has a performance optimization](https://github.com/kubernetes/kubernetes/blob/44dd0c243145ae3d7f3724839955bedbbb8dddde/pkg/scheduler/algorithm/predicates/metadata.go#L116) for the second part as well. This optimization finds the terms of all the running pods with inter-pod anti-affinity rules that match the pod being scheduled and stores only those matching terms in `predicate metadata`. The scheduler then evaluates only those terms when checking feasibility of each node in the cluster. We may be able to perform more pre-processing of the existing anti-affinity rules to improve performance further. For example, finding the nodes that the anti-affinity rules apply to them and storing those nodes in `metadata` may help reduce our search space when checking feasibility of the nodes. We can then skip checking anti-affinity rules of existing pods for nodes that do not exist in the stored `metadata`. This is just one of the possible ideas. One may be able to find more or better ways to improve performance of checking anti-affinity rules.\r\n\r\n/sig scheduling\r\n/assign @mohamed-mehany",
  "closed_at": "2018-08-18T02:14:08Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/63937/comments",
  "created_at": "2018-05-16T17:48:46Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/63937/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/63937",
  "id": 323722629,
  "labels": [
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Scheduling.",
      "id": 125550211,
      "name": "sig/scheduling",
      "node_id": "MDU6TGFiZWwxMjU1NTAyMTE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/scheduling"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/63937/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzMjM3MjI2Mjk=",
  "number": 63937,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Improve performance of existing Pod anti-affinity in scheduler",
  "updated_at": "2018-08-18T02:14:08Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/63937",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/14308438?v=4",
    "events_url": "https://api.github.com/users/bsalamat/events{/privacy}",
    "followers_url": "https://api.github.com/users/bsalamat/followers",
    "following_url": "https://api.github.com/users/bsalamat/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsalamat/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bsalamat",
    "id": 14308438,
    "login": "bsalamat",
    "node_id": "MDQ6VXNlcjE0MzA4NDM4",
    "organizations_url": "https://api.github.com/users/bsalamat/orgs",
    "received_events_url": "https://api.github.com/users/bsalamat/received_events",
    "repos_url": "https://api.github.com/users/bsalamat/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bsalamat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsalamat/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bsalamat"
  }
}