{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/5331316?v=4",
    "events_url": "https://api.github.com/users/tnqn/events{/privacy}",
    "followers_url": "https://api.github.com/users/tnqn/followers",
    "following_url": "https://api.github.com/users/tnqn/following{/other_user}",
    "gists_url": "https://api.github.com/users/tnqn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tnqn",
    "id": 5331316,
    "login": "tnqn",
    "node_id": "MDQ6VXNlcjUzMzEzMTY=",
    "organizations_url": "https://api.github.com/users/tnqn/orgs",
    "received_events_url": "https://api.github.com/users/tnqn/received_events",
    "repos_url": "https://api.github.com/users/tnqn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tnqn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tnqn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tnqn"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/5331316?v=4",
      "events_url": "https://api.github.com/users/tnqn/events{/privacy}",
      "followers_url": "https://api.github.com/users/tnqn/followers",
      "following_url": "https://api.github.com/users/tnqn/following{/other_user}",
      "gists_url": "https://api.github.com/users/tnqn/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tnqn",
      "id": 5331316,
      "login": "tnqn",
      "node_id": "MDQ6VXNlcjUzMzEzMTY=",
      "organizations_url": "https://api.github.com/users/tnqn/orgs",
      "received_events_url": "https://api.github.com/users/tnqn/received_events",
      "repos_url": "https://api.github.com/users/tnqn/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tnqn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tnqn/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tnqn"
    }
  ],
  "author_association": "MEMBER",
  "body": "<!-- Please only use this template for submitting reports about flaky tests or jobs (pass or fail with no underlying change in code) in Kubernetes CI -->\r\n\r\n**Which jobs are flaking**:\r\nA NetworkPolicy test in `test/e2e/network/network_policy.go`, not run in Kubernetes CI.\r\n\r\n**Which test(s) are flaking**:\r\n`[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy]`\r\n\r\n**Testgrid link**:\r\n\r\n**Reason for failure**:\r\nIts failure rate is 6.66% according to 30 latest tests in [Antrea](https://github.com/vmware-tanzu/antrea) (a Kubernetes CNI) CI.\r\nThe reason is, the test doesn't wait for the server Pod to be ready before testing traffic via its service, then even the NetworkPolicy allows it, the SYN packets will be rejected by iptables because the service has no endpoints at that moment.\r\n\r\ne2e log:\r\n```\r\n[It] should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy]\r\n  /root/kubernetes/_output/local/go/src/k8s.io/kubernetes/test/e2e/network/network_policy.go:908\r\nSTEP: Creating a server pod ns-b-server-a in namespace network-policy-b-5006\r\nFeb 19 14:35:58.874: INFO: Created pod ns-b-server-a-55nv9\r\nSTEP: Creating a service svc-ns-b-server-a for pod ns-b-server-a in namespace network-policy-b-5006\r\nFeb 19 14:35:58.884: INFO: Created service svc-ns-b-server-a\r\nSTEP: Creating a server pod ns-b-server-b in namespace network-policy-b-5006\r\nFeb 19 14:35:58.888: INFO: Created pod ns-b-server-b-6tgtj\r\nSTEP: Creating a service svc-ns-b-server-b for pod ns-b-server-b in namespace network-policy-b-5006\r\nFeb 19 14:35:58.899: INFO: Created service svc-ns-b-server-b\r\nFeb 19 14:35:58.899: INFO: Waiting for servers to come up.\r\nSTEP: Creating a network policy for the server which allows traffic only to a server in different namespace.\r\nSTEP: Creating client-a, in 'namespace-a', which should be able to contact the server-a in namespace-b.\r\nSTEP: Creating client pod client-a that should successfully connect to svc-ns-b-server-a.\r\nFeb 19 14:36:00.916: INFO: Waiting for client-a-rvm5j to complete.\r\nFeb 19 14:36:10.921: INFO: Waiting for client-a-rvm5j to complete.\r\nFeb 19 14:36:10.921: INFO: Waiting up to 5m0s for pod \"client-a-rvm5j\" in namespace \"network-policy-8736\" to be \"Succeeded or Failed\"\r\nFeb 19 14:36:10.923: INFO: Pod \"client-a-rvm5j\": Phase=\"Failed\", Reason=\"\", readiness=false. Elapsed: 1.690978ms\r\nFeb 19 14:36:10.948: FAIL: Pod client-a-rvm5j should be able to connect to service svc-ns-b-server-a, but was not able to connect.\r\n```\r\n\r\nserver pod `ns-b-server-a-55nv9` status:\r\n```\r\nstatus:\r\n  conditions:\r\n  - lastProbeTime: null\r\n    lastTransitionTime: \"2020-02-19T14:35:58Z\"\r\n    status: \"True\"\r\n    type: Initialized\r\n  - lastProbeTime: null\r\n    lastTransitionTime: \"2020-02-19T14:36:10Z\"\r\n    status: \"True\"\r\n    type: Ready\r\n```\r\n\r\nkube-proxy log:\r\n```\r\nI0219 14:36:10.547211  1 endpoints.go:342] Setting endpoints for \"network-policy-b-5006/svc-ns-b-server-a:ns-b-server-a-80\" to [10.30.1.60:80]\r\n```\r\n\r\nIn short:\r\n14:35:58.874 server Pod `ns-b-server-a-55nv9` was created\r\n14:36:00.916 server Pod `ns-b-server-a-55nv9` became running\r\n14:36:00.916 The traffic test against Service `svc-ns-b-server-a` started, there was no endpoints for it at this moment so it was always rejected\r\n14:36:10.921 The traffic test failed and terminated\r\n14:36:10 server Pod `ns-b-server-a-55nv9` became ready, Endpoints `svc-ns-b-server-a` is updated\r\n14:36:10.547 kube-proxy received Endpoints `svc-ns-b-server-a` update and configured nat table\r\n\r\nThe other tests don't have this problem because they all wait for server Pods to be ready, this test should do it too to avoid flakes.",
  "closed_at": "2020-02-20T00:12:13Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88340/comments",
  "created_at": "2020-02-19T16:46:26Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88340/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/88340",
  "id": 567691132,
  "labels": [
    {
      "color": "f7c6c7",
      "default": false,
      "description": "Categorizes issue or PR as related to a flaky test.",
      "id": 264749912,
      "name": "kind/flake",
      "node_id": "MDU6TGFiZWwyNjQ3NDk5MTI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/flake"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Network.",
      "id": 116712108,
      "name": "sig/network",
      "node_id": "MDU6TGFiZWwxMTY3MTIxMDg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/network"
    },
    {
      "color": "d455d0",
      "default": false,
      "description": "Indicates an issue that can not or will not be resolved.",
      "id": 862108765,
      "name": "triage/unresolved",
      "node_id": "MDU6TGFiZWw4NjIxMDg3NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/triage/unresolved"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88340/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1Njc2OTExMzI=",
  "number": 88340,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "[Flaky test] [sig-network] should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector",
  "updated_at": "2020-02-20T00:12:13Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/88340",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/5331316?v=4",
    "events_url": "https://api.github.com/users/tnqn/events{/privacy}",
    "followers_url": "https://api.github.com/users/tnqn/followers",
    "following_url": "https://api.github.com/users/tnqn/following{/other_user}",
    "gists_url": "https://api.github.com/users/tnqn/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/tnqn",
    "id": 5331316,
    "login": "tnqn",
    "node_id": "MDQ6VXNlcjUzMzEzMTY=",
    "organizations_url": "https://api.github.com/users/tnqn/orgs",
    "received_events_url": "https://api.github.com/users/tnqn/received_events",
    "repos_url": "https://api.github.com/users/tnqn/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/tnqn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tnqn/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/tnqn"
  }
}