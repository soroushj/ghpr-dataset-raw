{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/157083?v=4",
    "events_url": "https://api.github.com/users/krousey/events{/privacy}",
    "followers_url": "https://api.github.com/users/krousey/followers",
    "following_url": "https://api.github.com/users/krousey/following{/other_user}",
    "gists_url": "https://api.github.com/users/krousey/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/krousey",
    "id": 157083,
    "login": "krousey",
    "node_id": "MDQ6VXNlcjE1NzA4Mw==",
    "organizations_url": "https://api.github.com/users/krousey/orgs",
    "received_events_url": "https://api.github.com/users/krousey/received_events",
    "repos_url": "https://api.github.com/users/krousey/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/krousey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krousey/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/krousey"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars2.githubusercontent.com/u/157083?v=4",
      "events_url": "https://api.github.com/users/krousey/events{/privacy}",
      "followers_url": "https://api.github.com/users/krousey/followers",
      "following_url": "https://api.github.com/users/krousey/following{/other_user}",
      "gists_url": "https://api.github.com/users/krousey/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/krousey",
      "id": 157083,
      "login": "krousey",
      "node_id": "MDQ6VXNlcjE1NzA4Mw==",
      "organizations_url": "https://api.github.com/users/krousey/orgs",
      "received_events_url": "https://api.github.com/users/krousey/received_events",
      "repos_url": "https://api.github.com/users/krousey/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/krousey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krousey/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/krousey"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "```\n=== RUN   TestWriteEventError\nE1228 22:00:39.256276    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257527    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257625    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257697    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257761    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257828    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.257930    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258028    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258095    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258159    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258220    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258299    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.258455    7624 event.go:130] Unable to write event '&api.Event{TypeMeta:unversioned.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:api.ObjectMeta{Name:\"foo.14243213bbc18f38\", GenerateName:\"\", Namespace:\"baz\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:unversioned.Time{Time:time.Time{sec:0, nsec:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*unversioned.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil)}, InvolvedObject:api.ObjectReference{Kind:\"Pod\", Namespace:\"baz\", Name:\"foo\", UID:\"bar\", APIVersion:\"version\", ResourceVersion:\"\", FieldPath:\"\"}, Reason:\"Reason\", Message:\"retry2\", Source:api.EventSource{Component:\"eventTest\", Host:\"\"}, FirstTimestamp:unversioned.Time{Time:time.Time{sec:63586936840, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, LastTimestamp:unversioned.Time{Time:time.Time{sec:63586936840, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, Count:1, Type:\"Normal\"}' (retry limit exceeded!)\nE1228 22:00:39.259305    7624 event.go:197] Unable to write event: 'A weird error' (may retry after sleeping)\nE1228 22:00:39.259496    7624 event.go:188] Server rejected event '&api.Event{TypeMeta:unversioned.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:api.ObjectMeta{Name:\"foo.142432146e91ed38\", GenerateName:\"\", Namespace:\"baz\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:unversioned.Time{Time:time.Time{sec:0, nsec:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*unversioned.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil)}, InvolvedObject:api.ObjectReference{Kind:\"Pod\", Namespace:\"baz\", Name:\"foo\", UID:\"bar\", APIVersion:\"version\", ResourceVersion:\"\", FieldPath:\"\"}, Reason:\"Reason\", Message:\"giveUp2\", Source:api.EventSource{Component:\"eventTest\", Host:\"\"}, FirstTimestamp:unversioned.Time{Time:time.Time{sec:63586936843, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, LastTimestamp:unversioned.Time{Time:time.Time{sec:63586936843, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, Count:1, Type:\"Normal\"}': '' (will not retry!)\nE1228 22:00:39.259989    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260083    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260172    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260265    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260348    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260427    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260495    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260570    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260652    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260722    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260796    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260863    7624 event.go:197] Unable to write event: 'unexpected object: <nil>' (may retry after sleeping)\nE1228 22:00:39.260944    7624 event.go:130] Unable to write event '&api.Event{TypeMeta:unversioned.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:api.ObjectMeta{Name:\"foo.14243214aa2cb738\", GenerateName:\"\", Namespace:\"baz\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:unversioned.Time{Time:time.Time{sec:0, nsec:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*unversioned.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil)}, InvolvedObject:api.ObjectReference{Kind:\"Pod\", Namespace:\"baz\", Name:\"foo\", UID:\"bar\", APIVersion:\"version\", ResourceVersion:\"\", FieldPath:\"\"}, Reason:\"Reason\", Message:\"retry1\", Source:api.EventSource{Component:\"eventTest\", Host:\"\"}, FirstTimestamp:unversioned.Time{Time:time.Time{sec:63586936844, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, LastTimestamp:unversioned.Time{Time:time.Time{sec:63586936844, nsec:255934264, loc:(*time.Location)(0x1e116c0)}}, Count:1, Type:\"Normal\"}' (retry limit exceeded!)\n==================\nWARNING: DATA RACE\nRead by goroutine 40:\n  k8s.io/kubernetes/pkg/client/record.TestWriteEventError()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event_test.go:459 +0x12a9\n  testing.tRunner()\n      /tmp/workdir/go/src/testing/testing.go:456 +0xdc\n\nPrevious write by goroutine 42:\n  k8s.io/kubernetes/pkg/client/record.TestWriteEventError.func1()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event_test.go:440 +0x308\n  k8s.io/kubernetes/pkg/client/record.(*testEventSink).Create()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event_test.go:49 +0x6d\n  k8s.io/kubernetes/pkg/client/record.recordEvent()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event.go:169 +0x206\n  k8s.io/kubernetes/pkg/client/record.(*eventBroadcasterImpl).StartRecordingToSink.func1()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event.go:125 +0x223\n  k8s.io/kubernetes/pkg/client/record.(*eventBroadcasterImpl).StartEventWatcher.func1()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event.go:227 +0x14e\n\nGoroutine 40 (running) created at:\n  testing.RunTests()\n      /tmp/workdir/go/src/testing/testing.go:561 +0xaa3\n  testing.(*M).Run()\n      /tmp/workdir/go/src/testing/testing.go:494 +0xe4\n  main.main()\n      k8s.io/kubernetes/pkg/client/record/_test/_testmain.go:70 +0x20f\n\nGoroutine 42 (running) created at:\n  k8s.io/kubernetes/pkg/client/record.(*eventBroadcasterImpl).StartEventWatcher()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event.go:229 +0x8f\n  k8s.io/kubernetes/pkg/client/record.(*eventBroadcasterImpl).StartRecordingToSink()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event.go:141 +0x9bc\n  k8s.io/kubernetes/pkg/client/record.TestWriteEventError()\n      /workspace/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/client/record/event_test.go:447 +0xb4d\n  testing.tRunner()\n      /tmp/workdir/go/src/testing/testing.go:456 +0xdc\n==================\n```\n",
  "closed_at": "2016-01-10T06:42:24Z",
  "closed_by": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/8264113?v=4",
    "events_url": "https://api.github.com/users/davidopp/events{/privacy}",
    "followers_url": "https://api.github.com/users/davidopp/followers",
    "following_url": "https://api.github.com/users/davidopp/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidopp/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/davidopp",
    "id": 8264113,
    "login": "davidopp",
    "node_id": "MDQ6VXNlcjgyNjQxMTM=",
    "organizations_url": "https://api.github.com/users/davidopp/orgs",
    "received_events_url": "https://api.github.com/users/davidopp/received_events",
    "repos_url": "https://api.github.com/users/davidopp/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/davidopp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidopp/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/davidopp"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19151/comments",
  "created_at": "2015-12-28T23:44:45Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19151/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/19151",
  "id": 124142018,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 105152717,
      "name": "area/test",
      "node_id": "MDU6TGFiZWwxMDUxNTI3MTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/test"
    },
    {
      "color": "f7c6c7",
      "default": false,
      "description": "Categorizes issue or PR as related to a flaky test.",
      "id": 264749912,
      "name": "kind/flake",
      "node_id": "MDU6TGFiZWwyNjQ3NDk5MTI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/flake"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Highest priority. Must be actively worked on as someone's top priority right now.",
      "id": 114528068,
      "name": "priority/critical-urgent",
      "node_id": "MDU6TGFiZWwxMTQ1MjgwNjg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/critical-urgent"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19151/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxMjQxNDIwMTg=",
  "number": 19151,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Data race in pkg/client/record/event_test.go",
  "updated_at": "2016-01-10T06:42:24Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/19151",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1163175?v=4",
    "events_url": "https://api.github.com/users/smarterclayton/events{/privacy}",
    "followers_url": "https://api.github.com/users/smarterclayton/followers",
    "following_url": "https://api.github.com/users/smarterclayton/following{/other_user}",
    "gists_url": "https://api.github.com/users/smarterclayton/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/smarterclayton",
    "id": 1163175,
    "login": "smarterclayton",
    "node_id": "MDQ6VXNlcjExNjMxNzU=",
    "organizations_url": "https://api.github.com/users/smarterclayton/orgs",
    "received_events_url": "https://api.github.com/users/smarterclayton/received_events",
    "repos_url": "https://api.github.com/users/smarterclayton/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/smarterclayton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smarterclayton/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/smarterclayton"
  }
}