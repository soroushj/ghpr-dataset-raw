{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/\r\n-->\r\n\r\n\r\n**What happened**:\r\nQuote @gnufied:\r\n\r\nI took goroutine dump of controller-managers that were stuck in volume provisioning and I think we have a deadlock in code:\r\n```\r\ngoroutine 594 [semacquire, 79 minutes]:                                                                                                       \r\nsync.runtime_SemacquireMutex(0xc000e7826c, 0x40d400, 0x0)                                                                                     \r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/runtime/sema.go:71 +0x47                                                                                                                                                                                            \r\nsync.(*RWMutex).RLock(...)                                                                                                                                                                                                                                                                  \r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/sync/rwmutex.go:50                                    \r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*NodeManager).GetNode(0xc000e78240, 0xc000d4a320, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/nodemanager.go:253 +0x158      \r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*NodeManager).RediscoverNode(0xc000e78240, 0xc000d4a320, 0x1a, 0x0, 0xc001e825c0)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/nodemanager.go:244 +0x9c                                                                                                                                              \r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*NodeManager).getRefreshedNodeInfo(0xc000e78240, 0xc000d4a320, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/nodemanager.go:327 +0x458\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*NodeManager).refreshNodes(0xc000e78240, 0x0, 0x0, 0x0)        \r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/nodemanager.go:311 +0x166                                                                          \r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*VSphere).refreshNodesForSecretChange(0xc000b6cb00)                         \r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/vsphere.go:1566 +0x33\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*VSphere).SecretAdded(0xc000b6cb00, 0x457fcc0, 0xc00252a080)                \r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/vsphere.go:1538 +0xe4\r\nk8s.io/kubernetes/vendor/k8s.io/client-go/tools/cache.ResourceEventHandlerFuncs.OnAdd(...)                              \r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/client-go/tools/cache/controller.go:227\r\nk8s.io/kubernetes/vendor/k8s.io/client-go/tools/cache.(*processorListener).run.func1()                                   \r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/client-go/tools/cache/shared_informer.go:777 +0x129\r\nk8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.BackoffUntil.func1(0xc001398f60)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:155 +0x5f\r\nk8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.BackoffUntil(0xc001eabf60, 0x4dc5bc0, 0xc001000750, 0x3c22501, 0xc0000b6d80)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:156 +0xa3\r\nk8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait.JitterUntil(0xc001398f60, 0x3b9aca00, 0x0, 0xc00049c501, 0xc0000b6d80)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/util/wait/wait.go:133 +0x98\r\n--                                  \r\n                                                                                                                                              \r\ngoroutine 14153 [semacquire, 76 minutes]:\r\nsync.runtime_SemacquireMutex(0xc000e78264, 0x0, 0x1)\r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/runtime/sema.go:71 +0x47\r\nsync.(*Mutex).lockSlow(0xc000e78260)\r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/sync/mutex.go:138 +0xfc\r\nsync.(*Mutex).Lock(...)\r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/sync/mutex.go:81\r\nsync.(*RWMutex).Lock(0xc000e78260)\r\n        /opt/rh/go-toolset-1.14/root/usr/lib/go-toolset-1.14-golang/src/sync/rwmutex.go:98 +0x97\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*NodeManager).GetNodeDetails(0xc000e78240, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/nodemanager.go:291 +0x80\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.getSharedDatastoresInK8SCluster(0x4e3eae0, 0xc00b2cacc0, 0xc000e78240, 0x0, 0x45ec3f8, 0x14, 0xc00b4d2e70, 0x1)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/vsphere_util.go:130 +0x43\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*VSphere).CreateVolume.func1(0xc00b2dec80, 0x0, 0x0, 0x0, 0x0)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/vsphere.go:1377 +0x17a1\r\nk8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere.(*VSphere).CreateVolume(0xc000b6cb00, 0xc00b2dec80, 0x74db420, 0x0, 0x1, 0xc00b2a9f50)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/vendor/k8s.io/legacy-cloud-providers/vsphere/vsphere.go:1453 +0xe4\r\nk8s.io/kubernetes/pkg/volume/vsphere_volume.(*VsphereDiskUtil).CreateVolume(0x74d9b38, 0xc00b28be30, 0x0, 0x74d9b38, 0x0, 0x0, 0xc00b417740, 0x2, 0x2)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/volume/vsphere_volume/vsphere_volume_util.go:142 +0xbf2\r\nk8s.io/kubernetes/pkg/volume/vsphere_volume.(*vsphereVolumeProvisioner).Provision(0xc00b28be30, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc00b2a9f50, 0x28)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/volume/vsphere_volume/vsphere_volume.go:382 +0x295\r\nk8s.io/kubernetes/pkg/controller/volume/persistentvolume.(*PersistentVolumeController).provisionClaimOperation(0xc0008e21c0, 0xc00b3476c0, 0x7fdc57537c20, 0xc004b99f40, 0xc007ede600, 0x45c78b5, 0x9, 0x0, 0x0)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/volume/persistentvolume/pv_controller.go:1555 +0xfec\r\nk8s.io/kubernetes/pkg/controller/volume/persistentvolume.(*PersistentVolumeController).provisionClaim.func1(0x99e752, 0xc008590180)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/controller/volume/persistentvolume/pv_controller.go:1447 +0x204\r\nk8s.io/kubernetes/pkg/util/goroutinemap.(*goRoutineMap).Run.func1(0xc000e694d0, 0xc00b372740, 0x40, 0xc00b37ca50, 0x0, 0x0)\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/goroutinemap/goroutinemap.go:115 +0xe5\r\ncreated by k8s.io/kubernetes/pkg/util/goroutinemap.(*goRoutineMap).Run\r\n        /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/util/goroutinemap/goroutinemap.go:108 +0x2e7\r\n```\r\n\r\nI think we have a problem introduced when we merged - https://github.com/kubernetes/kubernetes/pull/90836 and what is happening is, when `GetNodeDetails` in `nodemanager.go` is called it acquires a lock on `registeredNodesLock`, but same function ends up calling `GetNode` which acquires another lock on `registeredNodesLock` object . Now the problem is, `GetNode` function gets called in a loop and it will try to acquire lock for each node it processes and hence two operations could result in deadlock.\r\n\r\nThis results into inability to provision a `PVC` with a default `thin` StorageClass. The volume does not get to call the API endpoint, just hangs after `CreateVolume` call, which is clear in the goroutine dump.\r\n\r\n**What you expected to happen**:\r\n\r\n1) Provision a `PVC` from `thin` `SC` successfully.\r\n2) Don't be blocked by credentials secret change.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n1) Provision a vSphere cluster with credentials secret set\r\n2) Create volume\r\n3) Wait...\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): v1.19.0-rc.2+5241b27-dirty\r\n- Cloud provider or hardware configuration: vSphere\r\n- OS (e.g: `cat /etc/os-release`): Linux\r\n- Kernel (e.g. `uname -a`): GNU/Linux\r\n- Install tools: openshift-install (kubeadm)\r\n- Network plugin and version (if this is a network-related bug):\r\n- Others:\r\n",
  "closed_at": "2020-08-20T11:55:24Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/93973/comments",
  "created_at": "2020-08-13T19:37:02Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/93973/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/93973",
  "id": 678687589,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to vmware provider",
      "id": 874113778,
      "name": "area/provider/vmware",
      "node_id": "MDU6TGFiZWw4NzQxMTM3Nzg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/provider/vmware"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Highest priority. Must be actively worked on as someone's top priority right now.",
      "id": 114528068,
      "name": "priority/critical-urgent",
      "node_id": "MDU6TGFiZWwxMTQ1MjgwNjg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/critical-urgent"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cloud Provider.",
      "id": 958178286,
      "name": "sig/cloud-provider",
      "node_id": "MDU6TGFiZWw5NTgxNzgyODY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cloud-provider"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/93973/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": null,
    "closed_issues": 1942,
    "created_at": "2019-08-26T17:08:39Z",
    "creator": {
      "avatar_url": "https://avatars3.githubusercontent.com/u/567897?v=4",
      "events_url": "https://api.github.com/users/justaugustus/events{/privacy}",
      "followers_url": "https://api.github.com/users/justaugustus/followers",
      "following_url": "https://api.github.com/users/justaugustus/following{/other_user}",
      "gists_url": "https://api.github.com/users/justaugustus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/justaugustus",
      "id": 567897,
      "login": "justaugustus",
      "node_id": "MDQ6VXNlcjU2Nzg5Nw==",
      "organizations_url": "https://api.github.com/users/justaugustus/orgs",
      "received_events_url": "https://api.github.com/users/justaugustus/received_events",
      "repos_url": "https://api.github.com/users/justaugustus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/justaugustus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justaugustus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/justaugustus"
    },
    "description": "",
    "due_on": null,
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/46",
    "id": 4604497,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/46/labels",
    "node_id": "MDk6TWlsZXN0b25lNDYwNDQ5Nw==",
    "number": 46,
    "open_issues": 12,
    "state": "open",
    "title": "v1.19",
    "updated_at": "2020-10-28T15:21:59Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/46"
  },
  "node_id": "MDU6SXNzdWU2Nzg2ODc1ODk=",
  "number": 93973,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "vSphere create volume hangs forever on resource lock",
  "updated_at": "2020-08-20T11:55:24Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/93973",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/32226600?v=4",
    "events_url": "https://api.github.com/users/Danil-Grigorev/events{/privacy}",
    "followers_url": "https://api.github.com/users/Danil-Grigorev/followers",
    "following_url": "https://api.github.com/users/Danil-Grigorev/following{/other_user}",
    "gists_url": "https://api.github.com/users/Danil-Grigorev/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Danil-Grigorev",
    "id": 32226600,
    "login": "Danil-Grigorev",
    "node_id": "MDQ6VXNlcjMyMjI2NjAw",
    "organizations_url": "https://api.github.com/users/Danil-Grigorev/orgs",
    "received_events_url": "https://api.github.com/users/Danil-Grigorev/received_events",
    "repos_url": "https://api.github.com/users/Danil-Grigorev/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Danil-Grigorev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Danil-Grigorev/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Danil-Grigorev"
  }
}