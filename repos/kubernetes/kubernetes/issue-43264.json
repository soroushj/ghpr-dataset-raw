{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Thanks for filing an issue! Before hitting the button, please answer these questions.-->\r\n\r\n**Is this a request for help?** (If yes, you should use our troubleshooting guide and community support channels, see http://kubernetes.io/docs/troubleshooting/.):\r\nNo.\r\n\r\n**What keywords did you search in Kubernetes issues before filing this one?** (If you have found any duplicates, you should instead reply there.):\r\n Unable to read wheezy_tcp@kubernetes.default from pod\r\n---\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?** (choose one):\r\nBUG REPORT\r\n\r\n**Kubernetes version** (use `kubectl version`):\r\n\r\nClient Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.1\", GitCommit:\"82450d03cb057bab0950214ef122b67c83fb11df\", GitTreeState:\"clean\", BuildDate:\"2016-12-14T00:57:05Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.1\", GitCommit:\"fa5b52858c06a963ed43bb8837f38cec5540b54d\", GitTreeState:\"clean\", BuildDate:\"2017-02-20T22:04:37Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**:\r\nK8s cluster is deployed via Kargo on OpenStack.\r\n- **OS** (e.g. from /etc/os-release):\r\nPhoton\r\n- **Kernel** (e.g. `uname -a`):\r\nLinux k8s-node-0-0a0b0b1e394386e6 4.4.26-esx #1-photon SMP Mon Oct 24 20:09:22 UTC 2016 x86_64 GNU/Linux\r\n\r\n- **Install tools**:\r\n- **Others**:\r\n\r\n\r\n**What happened**:\r\nI'm running the Conformance part of the end2end test. Two DNS test cases are failed:\r\n1) 07:47:23 [Fail] [k8s.io] DNS [It] should provide DNS for the cluster [Conformance]\r\n2) 07:47:23 [Fail] [k8s.io] DNS [It] should provide DNS for services [Conformance] \r\n\r\n**What you expected to happen**:\r\nThey should pass.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\nFollowed the steps to kick off the test as https://github.com/kubernetes/community/blob/master/contributors/devel/e2e-tests.md#conformance-tests\r\n\r\n**Anything else we need to know**:\r\n\r\n07:27:45 Mar 13 07:37:23.127: INFO: >>> kubeConfig: /app/data/kubeconfig\r\n07:27:45 \r\n07:27:45 STEP: Building a namespace api object\r\n07:27:45 STEP: Waiting for a default service account to be provisioned in namespace\r\n07:27:45 [It] should provide DNS for the cluster [Conformance]\r\n07:27:45   /go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/test/e2e/dns.go:352\r\n07:27:45 STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n \"$$(dig +notcp +noall +answer +search kubernetes.default A)\" && echo OK > /results/wheezy_udp@kubernetes.default;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default A)\" && echo OK > /results/wheezy_tcp@kubernetes.default;test -n \"$$(dig +notcp +noall +answer +search kubernetes.default.svc A)\" && echo OK > /results/wheezy_udp@kubernetes.default.svc;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default.svc A)\" && echo OK > /results/wheezy_tcp@kubernetes.default.svc;test -n \"$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)\" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)\" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;test -n \"$$(dig +notcp +noall +answer +search google.com A)\" && echo OK > /results/wheezy_udp@google.com;test -n \"$$(dig +tcp +noall +answer +search google.com A)\" && echo OK > /results/wheezy_tcp@google.com;test -n \"$$(getent hosts dns-querier-1.dns-test-service.e2e-tests-dns-pq6wt.svc.cluster.local)\" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.e2e-tests-dns-pq6wt.svc.cluster.local;test -n \"$$(getent hosts dns-querier-1)\" && echo OK > /results/wheezy_hosts@dns-querier-1;podARec=$$(hostname -i| awk -F. '{print $$1\"-\"$$2\"-\"$$3\"-\"$$4\".e2e-tests-dns-pq6wt.pod.cluster.local\"}');test -n \"$$(dig +notcp +noall +answer +search $${podARec} A)\" && echo OK > /results/wheezy_udp@PodARecord;test -n \"$$(dig +tcp +noall +answer +search $${podARec} A)\" && echo OK > /results/wheezy_tcp@PodARecord;sleep 1; done\r\n07:27:45 \r\n07:27:45 STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n \"$$(dig +notcp +noall +answer +search kubernetes.default A)\" && echo OK > /results/jessie_udp@kubernetes.default;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default A)\" && echo OK > /results/jessie_tcp@kubernetes.default;test -n \"$$(dig +notcp +noall +answer +search kubernetes.default.svc A)\" && echo OK > /results/jessie_udp@kubernetes.default.svc;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default.svc A)\" && echo OK > /results/jessie_tcp@kubernetes.default.svc;test -n \"$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)\" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;test -n \"$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)\" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;test -n \"$$(dig +notcp +noall +answer +search google.com A)\" && echo OK > /results/jessie_udp@google.com;test -n \"$$(dig +tcp +noall +answer +search google.com A)\" && echo OK > /results/jessie_tcp@google.com;test -n \"$$(getent hosts dns-querier-1.dns-test-service.e2e-tests-dns-pq6wt.svc.cluster.local)\" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.e2e-tests-dns-pq6wt.svc.cluster.local;test -n \"$$(getent hosts dns-querier-1)\" && echo OK > /results/jessie_hosts@dns-querier-1;podARec=$$(hostname -i| awk -F. '{print $$1\"-\"$$2\"-\"$$3\"-\"$$4\".e2e-tests-dns-pq6wt.pod.cluster.local\"}');test -n \"$$(dig +notcp +noall +answer +search $${podARec} A)\" && echo OK > /results/jessie_udp@PodARecord;test -n \"$$(dig +tcp +noall +answer +search $${podARec} A)\" && echo OK > /results/jessie_tcp@PodARecord;sleep 1; done\r\n07:27:45 \r\n07:27:45 STEP: creating a pod to probe DNS\r\n07:27:45 STEP: submitting the pod to kubernetes\r\n07:27:45 STEP: retrieving the pod\r\n07:27:45 STEP: looking for the results for each expected name from probers\r\n07:27:45 Mar 13 07:38:13.638: INFO: Unable to read wheezy_tcp@kubernetes.default from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:15.520: INFO: Unable to read wheezy_udp@kubernetes.default.svc from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:17.514: INFO: Unable to read wheezy_tcp@kubernetes.default.svc from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:20.376: INFO: Unable to read wheezy_udp@kubernetes.default.svc.cluster.local from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:22.834: INFO: Unable to read wheezy_tcp@kubernetes.default.svc.cluster.local from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:25.153: INFO: Unable to read wheezy_udp@google.com from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n07:27:45 Mar 13 07:38:26.956: INFO: Unable to read wheezy_tcp@google.com from pod dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002: the server could not find the requested resource (get pods dns-test-e9b967f1-07bf-11e7-bed3-0242ac110002)\r\n\r\nAs my investigation, these files are actually generated successfully. But the client can not get the file(pod) at following code in: https://github.com/kubernetes/kubernetes/blob/release-1.5/test/e2e/dns.go\r\n\r\nfunc assertFilesContain(fileNames []string, fileDir string, pod *api.Pod, client clientset.Interface, check bool, expected string){\r\n...\r\nif subResourceProxyAvailable {\r\n\t\t\t\tcontents, err = client.Core().RESTClient().Get().\r\n\t\t\t\t\tNamespace(pod.Namespace).\r\n\t\t\t\t\tResource(\"pods\").\r\n\t\t\t\t\tSubResource(\"proxy\").\r\n\t\t\t\t\tName(pod.Name).\r\n\t\t\t\t\tSuffix(fileDir, fileName).\r\n                                        Do().Raw()\r\n\r\nAnything shall I check further?\r\nYour suggestions are very appreciated.\r\n\r\n",
  "closed_at": "2017-03-26T05:24:29Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43264/comments",
  "created_at": "2017-03-17T02:30:47Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43264/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/43264",
  "id": 214891328,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43264/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMTQ4OTEzMjg=",
  "number": 43264,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "test [k8s.io] DNS [It] should provide DNS for the cluster [Conformance] failed against a local cluster due to failed to get pod",
  "updated_at": "2017-03-26T05:24:29Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/43264",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/1912361?v=4",
    "events_url": "https://api.github.com/users/bizhao/events{/privacy}",
    "followers_url": "https://api.github.com/users/bizhao/followers",
    "following_url": "https://api.github.com/users/bizhao/following{/other_user}",
    "gists_url": "https://api.github.com/users/bizhao/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bizhao",
    "id": 1912361,
    "login": "bizhao",
    "node_id": "MDQ6VXNlcjE5MTIzNjE=",
    "organizations_url": "https://api.github.com/users/bizhao/orgs",
    "received_events_url": "https://api.github.com/users/bizhao/received_events",
    "repos_url": "https://api.github.com/users/bizhao/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bizhao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bizhao/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bizhao"
  }
}