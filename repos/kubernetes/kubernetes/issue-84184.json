{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "/sig api-machinery\r\n/kind bug\r\n\r\n/cc @sttts @liggitt \r\n\r\nthis makes any updates on a \"Local\" apiservice failing by kubectl (unless you disable the client-side validation). a quick repro:\r\n\r\n1.  `kubectl edit apiservice v1.batch ` (edit whatever a local apiservice)\r\n2. adds a label \"foo: bar\"\r\n3. kubectl will fail on the schema validation\r\n\r\n>\\# apiservices.apiregistration.k8s.io \"v1.batch\" was not valid:\r\n>\\# * : Invalid value: \"The edited file failed validation\": ValidationError(APIService.spec): missing required field \"service\" in io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec. \r\n\r\nclient-side v1.15.0 server-side v1.15.2\r\n\r\nreferencing the published openapi v2 for apiservice#spec below:\r\n```json\r\n\"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec\": {\r\n      \"description\": \"APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.\",\r\n      \"type\": \"object\",\r\n      \"required\": [\r\n        \"service\",\r\n        \"groupPriorityMinimum\",\r\n        \"versionPriority\"\r\n      ],\r\n      \"properties\": {\r\n        \"caBundle\": {\r\n          \"description\": \"CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.\",\r\n          \"type\": \"string\",\r\n          \"format\": \"byte\"\r\n        },\r\n        \"group\": {\r\n          \"description\": \"Group is the API group name this server hosts\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"groupPriorityMinimum\": {\r\n          \"description\": \"GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versi\r\nons of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowes\r\nt (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and Paa\r\nSes (OpenShift, Deis) are recommended to be in the 2000s\",\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"insecureSkipTLSVerify\": {\r\n          \"description\": \"InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.\",\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"service\": {\r\n          \"description\": \"Service is a reference to the service for this API server.  It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled loc\r\nally on this server. The call will simply delegate to the normal handler chain to be fulfilled.\",\r\n          \"$ref\": \"#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference\"\r\n        },\r\n        \"version\": {\r\n          \"description\": \"Version is the API version this server hosts.  For example, \\\"v1\\\"\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"versionPriority\": {\r\n          \"description\": \"VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest\r\n (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If th\r\ne version string is \\\"kube-like\\\", it will sort above non \\\"kube-like\\\" version strings, which are ordered lexicographically. \\\"Kube-like\\\" versions start with a \\\"v\\\", then are followed by a number (the \r\nmajor version), then optionally the string \\\"alpha\\\" or \\\"beta\\\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or a\r\nlpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.\",\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        }\r\n      }\r\n    },\r\n```",
  "closed_at": "2019-12-04T07:08:58Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84184/comments",
  "created_at": "2019-10-22T12:38:57Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84184/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/84184",
  "id": 510627919,
  "labels": [
    {
      "color": "006b75",
      "default": true,
      "description": "Denotes an issue that needs help from a contributor. Must meet \"help wanted\" guidelines.",
      "id": 433686790,
      "name": "help wanted",
      "node_id": "MDU6TGFiZWw0MzM2ODY3OTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/help%20wanted"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84184/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTA2Mjc5MTk=",
  "number": 84184,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "APIService.spec.service should not be marked required in the openapi v2 spec",
  "updated_at": "2019-12-04T07:08:58Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84184",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/12049380?v=4",
    "events_url": "https://api.github.com/users/yue9944882/events{/privacy}",
    "followers_url": "https://api.github.com/users/yue9944882/followers",
    "following_url": "https://api.github.com/users/yue9944882/following{/other_user}",
    "gists_url": "https://api.github.com/users/yue9944882/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yue9944882",
    "id": 12049380,
    "login": "yue9944882",
    "node_id": "MDQ6VXNlcjEyMDQ5Mzgw",
    "organizations_url": "https://api.github.com/users/yue9944882/orgs",
    "received_events_url": "https://api.github.com/users/yue9944882/received_events",
    "repos_url": "https://api.github.com/users/yue9944882/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yue9944882/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yue9944882/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yue9944882"
  }
}