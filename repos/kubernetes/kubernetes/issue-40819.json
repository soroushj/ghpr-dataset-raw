{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "\r\n**What keywords did you search in Kubernetes issues before filing this one?**: VMware, vSphere, IP, UUID\r\n\r\n---\r\n\r\nBUG REPORT. \r\n\r\n**Kubernetes version**:\r\n\r\n```\r\nClient Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.1+coreos.0\", GitCommit:\"cc65f5321f9230bf9a3fa171155c1213d6e3480e\", GitTreeState:\"clean\", BuildDate:\"2016-12-14T04:08:28Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"5\", GitVersion:\"v1.5.1+coreos.0\", GitCommit:\"cc65f5321f9230bf9a3fa171155c1213d6e3480e\", GitTreeState:\"clean\", BuildDate:\"2016-12-14T04:08:28Z\", GoVersion:\"go1.7.4\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**: VMware vSphere 6.5.0\r\n- **OS** : Debian GNU/Linux 8.7 (jessie)\r\n- **Kernel** :` Linux 3.16.0-4-amd64 #1 SMP Debian 3.16.39-1 (2016-12-30) x86_64 GNU/Linux`\r\n- **Install tools**: Kargo\r\n\r\n\r\n**What happened**:\r\n\r\nSome containers were launched on a node with a name containing the hostname of a different node and the `kubelet_node_status.go` does not retrieve the right node name :\r\n\r\n```\r\nFeb  1 18:11:16 k8s.minionpp-01.adm kubelet[1009]: I0201 18:11:16.953239    1060 kubelet_node_status.go:74] Attempting to register node k8s.minionpp-02\r\nFeb  1 18:11:16 k8s.minionpp-01.adm kubelet[1009]: I0201 18:11:16.972697    1060 kubelet_node_status.go:113] Node k8s.minionpp-02 was previously registered\r\nFeb  1 18:11:16 k8s.minionpp-01.adm kubelet[1009]: I0201 18:11:16.972783    1060 kubelet_node_status.go:77] Successfully registered node k8s.minionpp-02\r\n```\r\n\r\nHere `k8s.minionpp-02` is retrieved instead of `k8s.minionpp-01`.\r\n\r\nWhen using the VSphere Cloud provider, the node name is retrieved from the `getVMName` function in https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/vsphere/vsphere.go#L204. \r\n\r\nSince this PR (https://github.com/kubernetes/kubernetes/pull/27331/files), the node data are retrieved based on the IP address instead of the UUID. The function gets all the IP address and check if one of the IP on any interface matches a VM on vSphere. The problem is that the docker0 interface has the same IP on all the nodes (usually 172.17.0.1) and this IP is referenced into VMware. As this IP may be the first to appear in the [addr list](https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/vsphere/vsphere.go#L205) it will match the first VM that vSphere gives with the [FindByIp](https://github.com/vmware/govmomi/blob/f9184c1d704efa615d419dd8d1dae1ade94701d1/object/search_index.go#L100) function and this can be any VM running Docker on vSphere. Thus, the provider has a big chance to not get the informations for the VM it is running on, leading to an inconsistent state in the cluster (wrong pod name for example). \r\n\r\n**Anything else we need to know**:\r\n\r\nAn idea would be to first retrieve the VM name with the [FindByDnsName](https://github.com/vmware/govmomi/blob/f9184c1d704efa615d419dd8d1dae1ade94701d1/object/search_index.go#L59) function and if no results use the IP address (and add an exclusion to not use the `docker0` interface).  What do you think ? If you think this might be the right way to do, we can try to propose the PR.\r\n\r\nThanks for your feedback.",
  "closed_at": "2017-02-10T21:35:42Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 5,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/40819/comments",
  "created_at": "2017-02-01T20:29:48Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/40819/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/40819",
  "id": 204696085,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/40819/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyMDQ2OTYwODU=",
  "number": 40819,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Wrong VM name is retrieved by the vSphere Cloud Provider",
  "updated_at": "2017-02-10T21:35:42Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/40819",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1718005?v=4",
    "events_url": "https://api.github.com/users/cvauvarin/events{/privacy}",
    "followers_url": "https://api.github.com/users/cvauvarin/followers",
    "following_url": "https://api.github.com/users/cvauvarin/following{/other_user}",
    "gists_url": "https://api.github.com/users/cvauvarin/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/cvauvarin",
    "id": 1718005,
    "login": "cvauvarin",
    "node_id": "MDQ6VXNlcjE3MTgwMDU=",
    "organizations_url": "https://api.github.com/users/cvauvarin/orgs",
    "received_events_url": "https://api.github.com/users/cvauvarin/received_events",
    "repos_url": "https://api.github.com/users/cvauvarin/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/cvauvarin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cvauvarin/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/cvauvarin"
  }
}