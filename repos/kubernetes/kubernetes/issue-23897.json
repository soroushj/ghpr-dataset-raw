{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "I met a problem today when trying to get component statues.\n\n```\nNAME                 STATUS      MESSAGE                                                                                    ERROR\netcd-0               Unhealthy   Get http://10.65.244.200:4001/health: malformed HTTP response \"\\x15\\x03\\x01\\x00\\x02\\x02\"\ncontroller-manager   Healthy     ok\nscheduler            Healthy     ok\n```\n\nIt is a little bit strange, since the `http://10.65.244.200:4001/health` should be `https://10.65.244.200:4001/health` actually (notice the scheme change). \n\nThen I found the related code here: https://github.com/kubernetes/kubernetes/blob/master/pkg/master/master.go#L495-L516\n\n``` go\nfor ix, machine := range c.StorageDestinations.Backends() {\n    glog.V(2).Infof(\"etcd debug: check the backend: %d: %s\", ix, machine)\n    etcdUrl, err := url.Parse(machine)\n    if err != nil {\n        glog.Errorf(\"Failed to parse etcd url for validation: %v\", err)\n        continue\n    }\n    var port int\n    var addr string\n    if strings.Contains(etcdUrl.Host, \":\") {\n        var portString string\n        addr, portString, err = net.SplitHostPort(etcdUrl.Host)\n        if err != nil {\n            glog.Errorf(\"Failed to split host/port: %s (%v)\", etcdUrl.Host, err)\n            continue\n        }\n        port, _ = strconv.Atoi(portString)\n        glog.V(2).Infof(\"etcd debug: addr: %s, port: %d\", addr, port)\n    } else {\n        addr = etcdUrl.Host\n        port = 4001\n    }\n    // TODO: etcd health checking should be abstracted in the storage tier\n    serversToValidate[fmt.Sprintf(\"etcd-%d\", ix)] = apiserver.Server{Addr: addr, Port: port, Path: \"/health\", Validate: etcdutil.EtcdHealthCheck}\n}\n```\n\nAnd the check code is here: https://github.com/kubernetes/kubernetes/blob/master/pkg/apiserver/validator.go#L55-L76\n\n``` go\nfunc (server *Server) DoServerCheck(prober httpprober.HTTPProber) (probe.Result, string, error) {\n    scheme := \"http\"\n    if server.EnableHTTPS {\n        scheme = \"https\"\n    }\n    url := utilnet.FormatURL(scheme, server.Addr, server.Port, server.Path)\n\n    result, data, err := prober.Probe(url, nil, probeTimeOut)\n\n    if err != nil {\n        return probe.Unknown, \"\", err\n    }\n    if result == probe.Failure {\n        return probe.Failure, string(data), err\n    }\n    if server.Validate != nil {\n        if err := server.Validate([]byte(data)); err != nil {\n            return probe.Failure, string(data), err\n        }\n    }\n    return result, string(data), nil\n}\n```\n\nIt looks like there is an option to setup the `EnableHTTPS` attribute, but we do not set up it correctly.\n",
  "closed_at": "2016-04-17T03:22:57Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 2,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23897/comments",
  "created_at": "2016-04-06T02:41:46Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23897/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/23897",
  "id": 146169611,
  "labels": [],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23897/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNDYxNjk2MTE=",
  "number": 23897,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "getServersToValidate does not respect the scheme",
  "updated_at": "2016-04-17T03:22:57Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/23897",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/4516999?v=4",
    "events_url": "https://api.github.com/users/zhouhaibing089/events{/privacy}",
    "followers_url": "https://api.github.com/users/zhouhaibing089/followers",
    "following_url": "https://api.github.com/users/zhouhaibing089/following{/other_user}",
    "gists_url": "https://api.github.com/users/zhouhaibing089/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/zhouhaibing089",
    "id": 4516999,
    "login": "zhouhaibing089",
    "node_id": "MDQ6VXNlcjQ1MTY5OTk=",
    "organizations_url": "https://api.github.com/users/zhouhaibing089/orgs",
    "received_events_url": "https://api.github.com/users/zhouhaibing089/received_events",
    "repos_url": "https://api.github.com/users/zhouhaibing089/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/zhouhaibing089/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zhouhaibing089/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/zhouhaibing089"
  }
}