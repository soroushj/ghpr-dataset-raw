{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/10524058?v=4",
    "events_url": "https://api.github.com/users/yujuhong/events{/privacy}",
    "followers_url": "https://api.github.com/users/yujuhong/followers",
    "following_url": "https://api.github.com/users/yujuhong/following{/other_user}",
    "gists_url": "https://api.github.com/users/yujuhong/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/yujuhong",
    "id": 10524058,
    "login": "yujuhong",
    "node_id": "MDQ6VXNlcjEwNTI0MDU4",
    "organizations_url": "https://api.github.com/users/yujuhong/orgs",
    "received_events_url": "https://api.github.com/users/yujuhong/received_events",
    "repos_url": "https://api.github.com/users/yujuhong/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/yujuhong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/yujuhong/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/yujuhong"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/10524058?v=4",
      "events_url": "https://api.github.com/users/yujuhong/events{/privacy}",
      "followers_url": "https://api.github.com/users/yujuhong/followers",
      "following_url": "https://api.github.com/users/yujuhong/following{/other_user}",
      "gists_url": "https://api.github.com/users/yujuhong/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yujuhong",
      "id": 10524058,
      "login": "yujuhong",
      "node_id": "MDQ6VXNlcjEwNTI0MDU4",
      "organizations_url": "https://api.github.com/users/yujuhong/orgs",
      "received_events_url": "https://api.github.com/users/yujuhong/received_events",
      "repos_url": "https://api.github.com/users/yujuhong/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yujuhong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yujuhong/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yujuhong"
    }
  ],
  "author_association": "NONE",
  "body": "I've noticed a issue where if you have multiple replicated slave pods that don't have a HOST assigned and you reduce the number of replicas in the replicationController definition for those pods, sometimes the currently assigned (and running) pods get killed and the unassigned pod will get assigned to run in the killed pods place.\nThe issue can be reproduced using the guestbook example provided in the repo.\n\n**Steps to reproduce**: (Note this is not always deterministic and may need multiple attempts)\n1. Create the master pod \n   \n   ```\n   #create the pods\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh create -f examples/guestbook/redis-master.json\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl create -f examples/guestbook/redis-master.json\n   redis-master\n   \n   #query for pods\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get pods\n   ./cluster/../_output/local/bin/linux/amd64/kubectl \n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get pods\n   POD                 CONTAINER(S)        IMAGE(S)            HOST                LABELS              STATUS\n   redis-master        master              dockerfile/redis    127.0.0.1/          name=redis-master   Running\n   ```\n2. Create the master service\n   \n   ```\n   #create the service\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh create -f examples/guestbook/redis-master-service.json\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl create -f examples/guestbook/redis-master-service.json\n   redis-master\n   \n   # query for services\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get services\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get services\n   NAME                LABELS                                    SELECTOR            IP                  PORT\n   kubernetes          component=apiserver,provider=kubernetes   <none>              10.0.0.82           443\n   kubernetes-ro       component=apiserver,provider=kubernetes   <none>              10.0.0.204          80\n   redis-master        name=redis-master                         name=redis-master   10.0.0.90           6379\n   ```\n3. Create the replicated slaves\n   \n   ```\n   #create the slaves\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh create -f examples/guestbook/redis-slave-controller.json\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl create -f examples/guestbook/redis-slave-controller.json\n   redisSlaveController\n   \n   #query for number of replication controllers. Note we have 2 replicas for this controller\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get replicationControllers\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get replicationControllers\n   CONTROLLER             CONTAINER(S)        IMAGE(S)                   SELECTOR            REPLICAS\n   redisSlaveController   slave               brendanburns/redis-slave   name=redisslave     2\n   \n   #query the pods. Note that POD: 51149bbc-a7fb-11e4-a34c-0800279696e1 is unassigned and has pending STATUS\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get pods\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get pods\n   POD                                    CONTAINER(S)        IMAGE(S)                   HOST                LABELS                              STATUS\n   51149bbc-a7fb-11e4-a34c-0800279696e1   slave               brendanburns/redis-slave   <unassigned>        name=redisslave,uses=redis-master   Pending\n   redis-master                           master              dockerfile/redis           127.0.0.1/          name=redis-master                   Running\n   34fc5e81-a7fb-11e4-a34c-0800279696e1   slave               brendanburns/redis-slave   127.0.0.1/          name=redisslave,uses=redis-master   Running\n   ```\n4. Edit the Slave Controller definition to only have 1 replicas\n5. Update the Slave Controller with new definition\n   \n   ```\n   #update with new definition\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh update -f examples/guestbook/redis-slave-controller.json\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl update -f examples/guestbook/redis-slave-controller.json\n   redisSlaveController\n   \n   #query for number of replication controllers. Note we have 1 replicas for this controller now after update\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get replicationControllers\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get replicationControllers\n   CONTROLLER             CONTAINER(S)        IMAGE(S)                   SELECTOR            REPLICAS\n   redisSlaveController   slave               brendanburns/redis-slave   name=redisslave     1\n   \n   #query for pods. Note that POD 51149bbc-a7fb-11e4-a34c-0800279696e1 which was previously PENDING with no associated host is now running and the previously running pod has been killed\n   [vagrant@k8s-env kubernetes]$ ./cluster/kubectl.sh get pods\n   ./cluster/../_output/local/bin/linux/amd64/kubectl\n   Running: ./cluster/../_output/local/bin/linux/amd64/kubectl get pods\n   POD                                    CONTAINER(S)        IMAGE(S)                   HOST                LABELS                              STATUS\n   redis-master                           master              dockerfile/redis           127.0.0.1/          name=redis-master                   Running\n   51149bbc-a7fb-11e4-a34c-0800279696e1   slave               brendanburns/redis-slave   <unassigned>        name=redisslave,uses=redis-master   Pending\n   ```\n\nThe expected behavior should be that the scheduler is able to determine that unassigned pods are more viable candidates when reducing number of replicas. It seems to be more likely that since this issue is not deterministic, the ordering in which the `./cluster/kubectl.sh get pods` command returns result is not always deterministically in the same order\n",
  "closed_at": "2015-04-21T19:58:21Z",
  "closed_by": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/7725777?v=4",
    "events_url": "https://api.github.com/users/bgrant0607/events{/privacy}",
    "followers_url": "https://api.github.com/users/bgrant0607/followers",
    "following_url": "https://api.github.com/users/bgrant0607/following{/other_user}",
    "gists_url": "https://api.github.com/users/bgrant0607/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/bgrant0607",
    "id": 7725777,
    "login": "bgrant0607",
    "node_id": "MDQ6VXNlcjc3MjU3Nzc=",
    "organizations_url": "https://api.github.com/users/bgrant0607/orgs",
    "received_events_url": "https://api.github.com/users/bgrant0607/received_events",
    "repos_url": "https://api.github.com/users/bgrant0607/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/bgrant0607/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bgrant0607/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/bgrant0607"
  },
  "comments": 4,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3948/comments",
  "created_at": "2015-01-29T21:40:35Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3948/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/3948",
  "id": 55961174,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 136601472,
      "name": "area/controller-manager",
      "node_id": "MDU6TGFiZWwxMzY2MDE0NzI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/controller-manager"
    },
    {
      "color": "fef2c0",
      "default": false,
      "description": "Lowest priority. Possibly useful, but not yet enough support to actually get it done.",
      "id": 149621825,
      "name": "priority/awaiting-more-evidence",
      "node_id": "MDU6TGFiZWwxNDk2MjE4MjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/awaiting-more-evidence"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3948/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1NTk2MTE3NA==",
  "number": 3948,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Kubernetes killing running pods instead of unassigned when reducing replicas",
  "updated_at": "2015-04-21T19:58:21Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3948",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/1851365?v=4",
    "events_url": "https://api.github.com/users/jseaidou/events{/privacy}",
    "followers_url": "https://api.github.com/users/jseaidou/followers",
    "following_url": "https://api.github.com/users/jseaidou/following{/other_user}",
    "gists_url": "https://api.github.com/users/jseaidou/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jseaidou",
    "id": 1851365,
    "login": "jseaidou",
    "node_id": "MDQ6VXNlcjE4NTEzNjU=",
    "organizations_url": "https://api.github.com/users/jseaidou/orgs",
    "received_events_url": "https://api.github.com/users/jseaidou/received_events",
    "repos_url": "https://api.github.com/users/jseaidou/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jseaidou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jseaidou/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jseaidou"
  }
}