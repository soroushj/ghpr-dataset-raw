{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
    "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
    "followers_url": "https://api.github.com/users/liggitt/followers",
    "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/liggitt",
    "id": 980082,
    "login": "liggitt",
    "node_id": "MDQ6VXNlcjk4MDA4Mg==",
    "organizations_url": "https://api.github.com/users/liggitt/orgs",
    "received_events_url": "https://api.github.com/users/liggitt/received_events",
    "repos_url": "https://api.github.com/users/liggitt/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/liggitt"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
      "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
      "followers_url": "https://api.github.com/users/liggitt/followers",
      "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
      "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/liggitt",
      "id": 980082,
      "login": "liggitt",
      "node_id": "MDQ6VXNlcjk4MDA4Mg==",
      "organizations_url": "https://api.github.com/users/liggitt/orgs",
      "received_events_url": "https://api.github.com/users/liggitt/received_events",
      "repos_url": "https://api.github.com/users/liggitt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/liggitt"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/2342749?v=4",
      "events_url": "https://api.github.com/users/ericchiang/events{/privacy}",
      "followers_url": "https://api.github.com/users/ericchiang/followers",
      "following_url": "https://api.github.com/users/ericchiang/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericchiang/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ericchiang",
      "id": 2342749,
      "login": "ericchiang",
      "node_id": "MDQ6VXNlcjIzNDI3NDk=",
      "organizations_url": "https://api.github.com/users/ericchiang/orgs",
      "received_events_url": "https://api.github.com/users/ericchiang/received_events",
      "repos_url": "https://api.github.com/users/ericchiang/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ericchiang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericchiang/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ericchiang"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/13621088?v=4",
      "events_url": "https://api.github.com/users/wanghaoran1988/events{/privacy}",
      "followers_url": "https://api.github.com/users/wanghaoran1988/followers",
      "following_url": "https://api.github.com/users/wanghaoran1988/following{/other_user}",
      "gists_url": "https://api.github.com/users/wanghaoran1988/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/wanghaoran1988",
      "id": 13621088,
      "login": "wanghaoran1988",
      "node_id": "MDQ6VXNlcjEzNjIxMDg4",
      "organizations_url": "https://api.github.com/users/wanghaoran1988/orgs",
      "received_events_url": "https://api.github.com/users/wanghaoran1988/received_events",
      "repos_url": "https://api.github.com/users/wanghaoran1988/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/wanghaoran1988/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wanghaoran1988/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/wanghaoran1988"
    }
  ],
  "author_association": "MEMBER",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?** (choose one):\r\n\r\nTESTING REQUEST\r\n\r\nSpawned from: https://github.com/kubernetes/kubernetes/pull/46879\r\nIt would be nice with some e2e tests for the Node Authorizer so consumers of it (kubeadm, GCE, GKE, etc.) could easily make sure it's enabled and working, just by editing `ginkgo.focus` when running e2e's.\r\n\r\nI wrote a quick bash script of what it could do:\r\n\r\n```bash\r\nif [[ $(kubectl version 2>&1 | grep \"Client\" | grep 'Minor:\"7') == \"\" ]]; then\r\n\techo \"kubectl v1.7.0-beta.0 or higher is required\"\r\n\texit 1\r\nfi\r\n\r\nexport KUBECONFIG=/etc/kubernetes/admin.conf\r\nIMPERSONATE=\"--as system:node:thegopher --as-group system:nodes\"\r\n\r\nprintf \"TESTING: Getting a non-existent secret should exit with the Forbidden error, not a NotFound error] \"\r\n([[ $(kubectl ${IMPERSONATE} get secret foo 2>&1 | grep \"Forbidden\") != \"\" ]] && printf \"PASSED!\\n\") || printf \"FAILED!\\n\"\r\n\r\nprintf \"TESTING: Getting an existent secret should exit with the Forbidden error] \"\r\n([[ $(kubectl ${IMPERSONATE} get secret $(kubectl get secret | grep token | awk '{print $1}') 2>&1 | grep \"Forbidden\") != \"\" ]] && printf \"PASSED!\\n\") || printf \"FAILED!\\n\"\r\n\r\nprintf \"TESTING: Getting a secret for a workload the node has access to should succeed]\u00a0\"\r\nkubectl ${IMPERSONATE} -n kube-system get secrets $(kubectl -n kube-system get secret | grep kube-proxy | awk '{print $1}') 1>/dev/null 2>/dev/null\r\n([[ $? == 0 ]] && printf \"PASSED!\\n\") || printf \"FAILED!\\n\"\r\n\r\nprintf \"TESTING: A node shouldn't be able to create an other node]\u00a0\"\r\necho '{\"apiVersion\":\"v1\",\"kind\":\"Node\",\"metadata\":{\"name\":\"foo\"}}' | kubectl delete -f - 1>/dev/null 2>/dev/null\r\necho '{\"apiVersion\":\"v1\",\"kind\":\"Node\",\"metadata\":{\"name\":\"foo\"}}' | kubectl ${IMPERSONATE} --validate=false create -f - 1>/dev/null 2>/dev/null\r\n([[ $? == 1 ]] && printf \"PASSED!\\n\") || printf \"FAILED!\\n\"\r\n```\r\n\r\nThe bash script above is in no way comprehensive enough, but on the other hand it took  ~5mins to write :)\r\n\r\nFor now (1.7), we might use something like this bash script in our kubeadm e2e CI job to make sure the Node Authorizer/Admission plugin is enabled correctly.\r\n\r\ncc @kubernetes/sig-cluster-lifecycle-feature-requests @kubernetes/sig-auth-feature-requests ",
  "closed_at": "2017-08-17T07:58:46Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47174/comments",
  "created_at": "2017-06-08T11:21:57Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47174/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/47174",
  "id": 234494786,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 105152717,
      "name": "area/test",
      "node_id": "MDU6TGFiZWwxMDUxNTI3MTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/test"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Auth.",
      "id": 357119284,
      "name": "sig/auth",
      "node_id": "MDU6TGFiZWwzNTcxMTkyODQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/auth"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.",
      "id": 173494222,
      "name": "sig/cluster-lifecycle",
      "node_id": "MDU6TGFiZWwxNzM0OTQyMjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cluster-lifecycle"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47174/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": null,
    "closed_issues": 587,
    "created_at": "2016-01-16T17:58:20Z",
    "creator": {
      "avatar_url": "https://avatars1.githubusercontent.com/u/7725777?v=4",
      "events_url": "https://api.github.com/users/bgrant0607/events{/privacy}",
      "followers_url": "https://api.github.com/users/bgrant0607/followers",
      "following_url": "https://api.github.com/users/bgrant0607/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgrant0607/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bgrant0607",
      "id": 7725777,
      "login": "bgrant0607",
      "node_id": "MDQ6VXNlcjc3MjU3Nzc=",
      "organizations_url": "https://api.github.com/users/bgrant0607/orgs",
      "received_events_url": "https://api.github.com/users/bgrant0607/received_events",
      "repos_url": "https://api.github.com/users/bgrant0607/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bgrant0607/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgrant0607/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bgrant0607"
    },
    "description": "Candidates for the next milestone",
    "due_on": null,
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/17",
    "id": 1510379,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/17/labels",
    "node_id": "MDk6TWlsZXN0b25lMTUxMDM3OQ==",
    "number": 17,
    "open_issues": 34,
    "state": "open",
    "title": "next-candidate",
    "updated_at": "2020-08-28T02:07:27Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/17"
  },
  "node_id": "MDU6SXNzdWUyMzQ0OTQ3ODY=",
  "number": 47174,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "e2e test the Node Authorizer",
  "updated_at": "2017-08-17T07:58:46Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/47174",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/5442475?v=4",
    "events_url": "https://api.github.com/users/luxas/events{/privacy}",
    "followers_url": "https://api.github.com/users/luxas/followers",
    "following_url": "https://api.github.com/users/luxas/following{/other_user}",
    "gists_url": "https://api.github.com/users/luxas/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/luxas",
    "id": 5442475,
    "login": "luxas",
    "node_id": "MDQ6VXNlcjU0NDI0NzU=",
    "organizations_url": "https://api.github.com/users/luxas/orgs",
    "received_events_url": "https://api.github.com/users/luxas/received_events",
    "repos_url": "https://api.github.com/users/luxas/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/luxas/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luxas/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/luxas"
  }
}