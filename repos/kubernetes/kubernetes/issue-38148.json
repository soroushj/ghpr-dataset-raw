{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "MEMBER",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?** (choose one): BUG\r\n\r\n<!--\r\nIf this is a BUG REPORT, please:\r\n  - Fill in as much of the template below as you can.  If you leave out\r\n    information, we can't help you as well.\r\n\r\nIf this is a FEATURE REQUEST, please:\r\n  - Describe *in detail* the feature/behavior/change you'd like to see.\r\n\r\nIn both cases, be ready for followup questions, and please respond in a timely\r\nmanner.  If we can't reproduce a bug or think a feature already exists, we\r\nmight close your issue.  If we're wrong, PLEASE feel free to reopen it and\r\nexplain why.\r\n-->\r\n\r\n**Kubernetes version** (use `kubectl version`): Client Version: version.Info{Major:\"1\", Minor:\"4\", GitVersion:\"v1.4.5\", GitCommit:\"5a0a696437ad35c133c0c8493f7e9d22b0f9b81b\", GitTreeState:\"clean\", BuildDate:\"2016-10-29T01:38:40Z\", GoVersion:\"go1.6.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"4\", GitVersion:\"v1.4.5\", GitCommit:\"5a0a696437ad35c133c0c8493f7e9d22b0f9b81b\", GitTreeState:\"clean\", BuildDate:\"2016-10-29T01:32:42Z\", GoVersion:\"go1.6.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n\r\n\r\n**Environment**:\r\n- **Cloud provider or hardware configuration**: vSphere\r\n- **OS** (e.g. from /etc/os-release):\r\n\r\n> RETTY_NAME=\"Debian GNU/Linux 8 (jessie)\"\r\n> NAME=\"Debian GNU/Linux\"\r\n> VERSION_ID=\"8\"\r\n> VERSION=\"8 (jessie)\"\r\n> ID=debian\r\n> HOME_URL=\"http://www.debian.org/\"\r\n> SUPPORT_URL=\"http://www.debian.org/support/\"\r\n> BUG_REPORT_URL=\"https://bugs.debian.org/\"\r\n\r\n- **Kernel** (e.g. `uname -a`):\r\n\r\n> Linux kubernetes-master 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt20-1+deb8u2 (2016-01-02) x86_64 GNU/Linux\r\n\r\n- **Install tools**: None\r\n- **Others**: None\r\n\r\n\r\n**What happened**:\r\nWhen I create a deployment with vSphere cloud provider dynamic provisioning, it creates a volume spec with volume path - **[datastore] kubevols/volume** which contains a white space in it. In this case the cloud provider queries the getDeviceNameFromMount() to return the path of the volume mounted. Since getDeviceNameFromMount() queries the filesystem to get the mount references, it returns a volume path \"[datastore]\\\\040kubevols/volume\". Later the kubelet searches for this volume path in both the actual and desired states. Th actual and desired states contains volume with path \"[datastore] kubevols/volume\". So, it couldn't find such volume path and therefore kubernetes stalls unable to make any progress further similar to one described in #37022.\r\n\r\nAlso similar issue described in #37712\r\n\r\n**What you expected to happen**:\r\nAll the pods in the recreated deployment comes up.\r\n\r\n**How to reproduce it** (as minimally and precisely as possible):\r\nSee above.\r\n\r\n**Anything else do we need to know**: None\r\n\r\n@abrarshivani @kerneltime @pdhamdhere\r\n\r\n",
  "closed_at": "2016-12-08T21:44:59Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/38148/comments",
  "created_at": "2016-12-05T23:26:43Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/38148/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/38148",
  "id": 193640500,
  "labels": [
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/38148/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxOTM2NDA1MDA=",
  "number": 38148,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "vSphere cloud provider Dynamic provisioning should not use white space",
  "updated_at": "2016-12-08T21:44:59Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/38148",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/22899615?v=4",
    "events_url": "https://api.github.com/users/BaluDontu/events{/privacy}",
    "followers_url": "https://api.github.com/users/BaluDontu/followers",
    "following_url": "https://api.github.com/users/BaluDontu/following{/other_user}",
    "gists_url": "https://api.github.com/users/BaluDontu/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/BaluDontu",
    "id": 22899615,
    "login": "BaluDontu",
    "node_id": "MDQ6VXNlcjIyODk5NjE1",
    "organizations_url": "https://api.github.com/users/BaluDontu/orgs",
    "received_events_url": "https://api.github.com/users/BaluDontu/received_events",
    "repos_url": "https://api.github.com/users/BaluDontu/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/BaluDontu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BaluDontu/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/BaluDontu"
  }
}