{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "test-cmd.sh on fast machines can race, where `kubectl get minions 127.0.0.1` fails because the minion controller loop hasn't run.  I'm adding a guard at the top of the test-cmd (in #2878) which will prevent the race:\n\n```\nkube::util::wait_for_url \"http://127.0.0.1:${API_PORT}/api/v1beta1/minions/127.0.0.1\" \"apiserver(minions): \"\n```\n\nHowever, about 10% of the time `kubectl get minions 127.0.0.1` fails even with the guard, which means that for some brief period the minion is added and removed by something in the system, or there is a cached value that is hanging around (maybe it's marked as unhealthy for some reason, but that shouldn't prevent get)\n\nIt seems reasonable that once a minion shows up, it should only be updated, and any caches we have should reflect that (in case we're caching negative replies).\n\nProof from my branch - `apiserver(minions)` is the result of the minions call:\n\n```\n+++ Starting kube-apiserver\n+++ apiserver:\n    ok\nI1222 15:18:54.915940   57895 plugins.go:70] No cloud provider specified.\n+++ apiserver(minions):\n    {\n    \"kind\":\n    \"Minion\",\n    \"id\":\n    \"127.0.0.1\",\n    \"uid\":\n    \"a5f47e46-8a15-11e4-b37e-080027ce4245\",\n    \"creationTimestamp\":\n    \"2014-12-22T15:03:51-05:00\",\n    \"selfLink\":\n    \"/api/v1beta1/minions/127.0.0.1\",\n    \"resourceVersion\":\n    10,\n    \"apiVersion\":\n    \"v1beta1\",\n    \"resources\":\n    {\n    \"capacity\":\n    {\n    \"cpu\":\n    1000,\n    \"memory\":\n    3221225472\n    }\n    }\n    }\n+++ Starting CONTROLLER-MANAGER\nI1222 15:18:54.927749   57895 logs.go:39] [restful/swagger] listing is available at /swaggerapi/\nI1222 15:18:54.931965   57902 plugins.go:70] No cloud provider specified.\nI1222 15:18:54.934578   57895 logs.go:39] [restful/swagger] /swaggerui/ is mapped to folder /static/swagger-ui/\nI1222 15:18:54.934613   57895 apiserver.go:215] Serving read-only insecurely on 127.0.0.1:7080\nI1222 15:18:54.934622   57895 apiserver.go:261] Serving insecurely on 127.0.0.1:8080\nI1222 15:18:54.938363   57902 endpoints_controller.go:59] About to update endpoints for service kubernetes\nI1222 15:18:54.964589   57902 endpoints_controller.go:59] About to update endpoints for service kubernetes-ro\n+++ controller-manager:\n    ok\n+++ Testing kubectl(v1beta1:pods)\nPOD                 CONTAINER(S)        IMAGE(S)            HOST                LABELS              STATUS\nredis-master\nPOD                 CONTAINER(S)        IMAGE(S)            HOST                LABELS              STATUS\nredis-master        master              dockerfile/redis    <unassigned>        name=redis-master   Pending\nPOD                 CONTAINER(S)        IMAGE(S)            HOST                LABELS              STATUS\nredis-master        master              dockerfile/redis    <unassigned>        name=redis-master   Pending\nredis-master\nredis-master\nE1222 15:18:55.249018   57921 cmd.go:134] Must provide resource or a resource and name as command line params\nE1222 15:18:55.249104   57921 cmd.go:135] See 'kubectl get -h' for help.\nredis-master\n+++ Testing kubectl(v1beta1:services)\nNAME                LABELS                                    SELECTOR            IP                  PORT\nkubernetes          component=apiserver,provider=kubernetes   <none>              10.0.0.230          443\nkubernetes-ro       component=apiserver,provider=kubernetes   <none>              10.0.0.115          80\nfrontend\nNAME                LABELS                                    SELECTOR            IP                  PORT\nkubernetes          component=apiserver,provider=kubernetes   <none>              10.0.0.230          443\nkubernetes-ro       component=apiserver,provider=kubernetes   <none>              10.0.0.115          80\nfrontend            name=frontend                             name=frontend       10.0.0.114          80\nfrontend\n+++ Testing kubectl(v1beta1:replicationcontrollers)\nCONTROLLER          CONTAINER(S)        IMAGE(S)            SELECTOR            REPLICAS\nfrontendController\nCONTROLLER           CONTAINER(S)        IMAGE(S)                                 SELECTOR            REPLICAS\nfrontendController   php-redis           kubernetes/example-guestbook-php-redis   name=frontend       3\nfrontendController\n+++ Testing kubectl(v1beta1:nodes)\nNAME                LABELS\nF1222 15:18:55.410200   57938 describe.go:41] minion \"127.0.0.1\" not found\n!!! Error in hack/test-cmd.sh:99\n  '\"${kube_cmd[@]}\" describe nodes 127.0.0.1 \"${kube_flags[@]}\"' exited with status 255\nCall stack:\n  1: hack/test-cmd.sh:99 main(...)\nExiting with status 1\n+++ Clean up complete\n```\n",
  "closed_at": "2015-01-08T15:34:56Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1163175?v=4",
    "events_url": "https://api.github.com/users/smarterclayton/events{/privacy}",
    "followers_url": "https://api.github.com/users/smarterclayton/followers",
    "following_url": "https://api.github.com/users/smarterclayton/following{/other_user}",
    "gists_url": "https://api.github.com/users/smarterclayton/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/smarterclayton",
    "id": 1163175,
    "login": "smarterclayton",
    "node_id": "MDQ6VXNlcjExNjMxNzU=",
    "organizations_url": "https://api.github.com/users/smarterclayton/orgs",
    "received_events_url": "https://api.github.com/users/smarterclayton/received_events",
    "repos_url": "https://api.github.com/users/smarterclayton/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/smarterclayton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smarterclayton/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/smarterclayton"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3098/comments",
  "created_at": "2014-12-22T20:24:45Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3098/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/3098",
  "id": 52685159,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3098/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MjY4NTE1OQ==",
  "number": 3098,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Racy behavior in apiserver /minions call on startup in test-cmd.sh",
  "updated_at": "2015-01-08T15:34:56Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/3098",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/1163175?v=4",
    "events_url": "https://api.github.com/users/smarterclayton/events{/privacy}",
    "followers_url": "https://api.github.com/users/smarterclayton/followers",
    "following_url": "https://api.github.com/users/smarterclayton/following{/other_user}",
    "gists_url": "https://api.github.com/users/smarterclayton/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/smarterclayton",
    "id": 1163175,
    "login": "smarterclayton",
    "node_id": "MDQ6VXNlcjExNjMxNzU=",
    "organizations_url": "https://api.github.com/users/smarterclayton/orgs",
    "received_events_url": "https://api.github.com/users/smarterclayton/received_events",
    "repos_url": "https://api.github.com/users/smarterclayton/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/smarterclayton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/smarterclayton/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/smarterclayton"
  }
}