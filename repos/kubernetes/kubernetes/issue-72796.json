{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/523590?v=4",
    "events_url": "https://api.github.com/users/jpbetz/events{/privacy}",
    "followers_url": "https://api.github.com/users/jpbetz/followers",
    "following_url": "https://api.github.com/users/jpbetz/following{/other_user}",
    "gists_url": "https://api.github.com/users/jpbetz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/jpbetz",
    "id": 523590,
    "login": "jpbetz",
    "node_id": "MDQ6VXNlcjUyMzU5MA==",
    "organizations_url": "https://api.github.com/users/jpbetz/orgs",
    "received_events_url": "https://api.github.com/users/jpbetz/received_events",
    "repos_url": "https://api.github.com/users/jpbetz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/jpbetz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jpbetz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/jpbetz"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/523590?v=4",
      "events_url": "https://api.github.com/users/jpbetz/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpbetz/followers",
      "following_url": "https://api.github.com/users/jpbetz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpbetz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpbetz",
      "id": 523590,
      "login": "jpbetz",
      "node_id": "MDQ6VXNlcjUyMzU5MA==",
      "organizations_url": "https://api.github.com/users/jpbetz/orgs",
      "received_events_url": "https://api.github.com/users/jpbetz/received_events",
      "repos_url": "https://api.github.com/users/jpbetz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpbetz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpbetz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpbetz"
    },
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/704877?v=4",
      "events_url": "https://api.github.com/users/logicalhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/logicalhan/followers",
      "following_url": "https://api.github.com/users/logicalhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/logicalhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/logicalhan",
      "id": 704877,
      "login": "logicalhan",
      "node_id": "MDQ6VXNlcjcwNDg3Nw==",
      "organizations_url": "https://api.github.com/users/logicalhan/orgs",
      "received_events_url": "https://api.github.com/users/logicalhan/received_events",
      "repos_url": "https://api.github.com/users/logicalhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/logicalhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/logicalhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/logicalhan"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/33743058?v=4",
      "events_url": "https://api.github.com/users/wenjiaswe/events{/privacy}",
      "followers_url": "https://api.github.com/users/wenjiaswe/followers",
      "following_url": "https://api.github.com/users/wenjiaswe/following{/other_user}",
      "gists_url": "https://api.github.com/users/wenjiaswe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/wenjiaswe",
      "id": 33743058,
      "login": "wenjiaswe",
      "node_id": "MDQ6VXNlcjMzNzQzMDU4",
      "organizations_url": "https://api.github.com/users/wenjiaswe/orgs",
      "received_events_url": "https://api.github.com/users/wenjiaswe/received_events",
      "repos_url": "https://api.github.com/users/wenjiaswe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/wenjiaswe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wenjiaswe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/wenjiaswe"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!-->\r\n\r\n\r\n**What happened**:\r\nI'm running a K8s 1.13 cluster and a partial netsplit happened due to a defective linecard dropping only \r\nTCP packets above a certain sizes between two masters, but the third could still communicate with both (so the fault made the network non-transitive). etcd was run on the physical network, but Kubernetes traffic runs on a Wireguard overlay for security and routing is provided by OSPF (so internal communication was not affected since it was tunelled over UDP). Etcd experienced some temporary issues due to the connections dropping only certain packets (above ~1000 bytes), but quickly dropped one host out of the quorum, at which point it was degraded but all the remaining hosts could communicate freely. Each master node has an etcd instance and an apiserver. All apiservers are anycasted inside the overlay to balance the load and provide redundancy and the announcement is coupled to the health check, so in case any apiserver fails no traffic will be routed to it. The problem was that the apiserver did not fail its healthcheck even though all etcd write requests timed out. The non-working apiserver was still accessible and got routed its share of the anycast traffic since that was routed over the UDP overlay. Thus ~1/3 of all workloads and nodes were stuck on a non-working apiserver until I nuked the non-working apiserver.\r\n\r\nTLDR: One etcd server started timing out all writes due to a non-transitive netsplit and the Kubernetes apiserver healthcheck did not fail, causing 1/3 of K8s clients to not have a working control plane until manual intervention.\r\n**What you expected to happen**:\r\nThe health check should've failed (in my opinion, I'm happy to discuss if you think otherwise).\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nSet up 3 etcds with corresponding apiservers, introduce a split between two (shouldn't have to be a packet size limit, a full disconnect should reproduce cleanly), observe that all three report healthy even though at least one of them no longer works.\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`): v1.13.0\r\n- Cloud provider or hardware configuration: Physical x86_64 servers\r\n- OS (e.g. from /etc/os-release): Custom\r\n- Kernel (e.g. `uname -a`): Custom, based on 4.19. No patches affect this functionality.\r\n- Install tools: Custom\r\n- Others:\r\n",
  "closed_at": "2019-01-25T23:27:47Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 6,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/72796/comments",
  "created_at": "2019-01-10T23:57:57Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/72796/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/72796",
  "id": 398069591,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/72796/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUzOTgwNjk1OTE=",
  "number": 72796,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Kubernetes API Server healthcheck not failing if etcd is partitioned",
  "updated_at": "2019-01-25T23:27:47Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/72796",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5228892?v=4",
    "events_url": "https://api.github.com/users/lorenz/events{/privacy}",
    "followers_url": "https://api.github.com/users/lorenz/followers",
    "following_url": "https://api.github.com/users/lorenz/following{/other_user}",
    "gists_url": "https://api.github.com/users/lorenz/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/lorenz",
    "id": 5228892,
    "login": "lorenz",
    "node_id": "MDQ6VXNlcjUyMjg4OTI=",
    "organizations_url": "https://api.github.com/users/lorenz/orgs",
    "received_events_url": "https://api.github.com/users/lorenz/received_events",
    "repos_url": "https://api.github.com/users/lorenz/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/lorenz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lorenz/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/lorenz"
  }
}