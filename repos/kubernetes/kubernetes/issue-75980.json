{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/15641246?v=4",
    "events_url": "https://api.github.com/users/matte21/events{/privacy}",
    "followers_url": "https://api.github.com/users/matte21/followers",
    "following_url": "https://api.github.com/users/matte21/following{/other_user}",
    "gists_url": "https://api.github.com/users/matte21/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/matte21",
    "id": 15641246,
    "login": "matte21",
    "node_id": "MDQ6VXNlcjE1NjQxMjQ2",
    "organizations_url": "https://api.github.com/users/matte21/orgs",
    "received_events_url": "https://api.github.com/users/matte21/received_events",
    "repos_url": "https://api.github.com/users/matte21/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/matte21/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/matte21/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/matte21"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/15641246?v=4",
      "events_url": "https://api.github.com/users/matte21/events{/privacy}",
      "followers_url": "https://api.github.com/users/matte21/followers",
      "following_url": "https://api.github.com/users/matte21/following{/other_user}",
      "gists_url": "https://api.github.com/users/matte21/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/matte21",
      "id": 15641246,
      "login": "matte21",
      "node_id": "MDQ6VXNlcjE1NjQxMjQ2",
      "organizations_url": "https://api.github.com/users/matte21/orgs",
      "received_events_url": "https://api.github.com/users/matte21/received_events",
      "repos_url": "https://api.github.com/users/matte21/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/matte21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matte21/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/matte21"
    }
  ],
  "author_association": "MEMBER",
  "body": "<!-- Please use this template while reporting a bug and provide as much info as possible. Not doing so may result in your bug not being addressed in a timely manner. Thanks!\r\n\r\nIf the matter is security related, please disclose it privately via https://kubernetes.io/security/\r\n-->\r\n\r\n\r\n**What happened**:\r\nAfter studying https://github.com/kubernetes/community/blob/master/contributors/design-proposals/storage/postpone-pvc-deletion-if-used-in-a-pod.md I thought of an optimization and checked the current implementation to see if it is there.  Instead I found that the current implementation makes a critical mistake: it only checks the local cache and never the live apiserver(s) (see https://github.com/kubernetes/kubernetes/blob/255a73ffc64d1c4e0f9a378ebf8d0005edfe6962/pkg/controller/volume/pvcprotection/pvc_protection_controller.go#L212).  Following is a scenario in which the current implememtation allows the removal of a PVC while it is in use by a Pod.  Start in a state where the PVC exists, has the finalizer, and is bound.  Next a Pod API object is created.  Then the Pod is scheduled and the relevant kubelet is notified and begins work on that Pod.  That kubelet queries an apiserver, which queries the etcd cluster holding PVC objects (which may or may not be the same as the etcd cluster holding Pod objects), and finds out that the PVC exists and is not being deleted.  The kubelet finishes creating and starting the Pod.  Then some client requests deletion of the PVC.  Its DeletionTimestamp is set.  Then the pvc_protection_controller is notified about this change to the PVC.  Note that I did _not_ say that the pvc_protection_controller has by now been notified about the creation or scheduling of the Pod.  This is possible, because we have no guarantee about ordering of notifications about different Kinds of objects.  The pvc_protection_controller queries its Pod informer's local cache of Pod information and does not find the new Pod.  The pvc_protection_controller then removes the Finalizer from the PVC, and soon the PVC API object is removed.\r\n\r\n**What you expected to happen**:\r\nI expected to see that https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/pvcprotection/pvc_protection_controller.go follows the community design doc or includes an optimization to avoid the apiserver check if the local cache shows usage of the PVC.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g: `cat /etc/os-release`):\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Others:\r\n",
  "closed_at": "2019-08-16T12:06:45Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 9,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/75980/comments",
  "created_at": "2019-04-01T19:25:59Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/75980/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/75980",
  "id": 427872014,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d3e2f0",
      "default": false,
      "description": "Indicates that an issue or PR should not be auto-closed due to staleness.",
      "id": 778118403,
      "name": "lifecycle/frozen",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/frozen"
    },
    {
      "color": "eb6420",
      "default": false,
      "description": "Must be staffed and worked on either currently, or very soon, ideally in time for the next release.",
      "id": 114528223,
      "name": "priority/important-soon",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyMjM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/important-soon"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/75980/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0Mjc4NzIwMTQ=",
  "number": 75980,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "pvc_protection_controller queries local cache instead of apiserver(s)",
  "updated_at": "2019-08-16T12:06:45Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/75980",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/14296719?v=4",
    "events_url": "https://api.github.com/users/MikeSpreitzer/events{/privacy}",
    "followers_url": "https://api.github.com/users/MikeSpreitzer/followers",
    "following_url": "https://api.github.com/users/MikeSpreitzer/following{/other_user}",
    "gists_url": "https://api.github.com/users/MikeSpreitzer/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/MikeSpreitzer",
    "id": 14296719,
    "login": "MikeSpreitzer",
    "node_id": "MDQ6VXNlcjE0Mjk2NzE5",
    "organizations_url": "https://api.github.com/users/MikeSpreitzer/orgs",
    "received_events_url": "https://api.github.com/users/MikeSpreitzer/received_events",
    "repos_url": "https://api.github.com/users/MikeSpreitzer/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/MikeSpreitzer/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MikeSpreitzer/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/MikeSpreitzer"
  }
}