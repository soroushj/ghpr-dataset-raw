{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/903617?v=4",
    "events_url": "https://api.github.com/users/mtaufen/events{/privacy}",
    "followers_url": "https://api.github.com/users/mtaufen/followers",
    "following_url": "https://api.github.com/users/mtaufen/following{/other_user}",
    "gists_url": "https://api.github.com/users/mtaufen/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/mtaufen",
    "id": 903617,
    "login": "mtaufen",
    "node_id": "MDQ6VXNlcjkwMzYxNw==",
    "organizations_url": "https://api.github.com/users/mtaufen/orgs",
    "received_events_url": "https://api.github.com/users/mtaufen/received_events",
    "repos_url": "https://api.github.com/users/mtaufen/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/mtaufen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mtaufen/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/mtaufen"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/903617?v=4",
      "events_url": "https://api.github.com/users/mtaufen/events{/privacy}",
      "followers_url": "https://api.github.com/users/mtaufen/followers",
      "following_url": "https://api.github.com/users/mtaufen/following{/other_user}",
      "gists_url": "https://api.github.com/users/mtaufen/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mtaufen",
      "id": 903617,
      "login": "mtaufen",
      "node_id": "MDQ6VXNlcjkwMzYxNw==",
      "organizations_url": "https://api.github.com/users/mtaufen/orgs",
      "received_events_url": "https://api.github.com/users/mtaufen/received_events",
      "repos_url": "https://api.github.com/users/mtaufen/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mtaufen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mtaufen/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mtaufen"
    }
  ],
  "author_association": "MEMBER",
  "body": "<!-- This form is for bug reports and feature requests ONLY! \r\n\r\nIf you're looking for help check [Stack Overflow](https://stackoverflow.com/questions/tagged/kubernetes) and the [troubleshooting guide](https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/).\r\n-->\r\n\r\n**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n**What happened**:\r\n\r\nRun e2e node test with `tempSetCurrentKubeletConfig()`, and wait for new configuration take effect.\r\nBut it will return `before` new configuration has taken effect.\r\n\r\n**What you expected to happen**:\r\n\r\n`setKubeletConfiguration()` will return with new configuration has taken effect.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\nRun any e2e node test with `DynamicKubeletConfig`.\r\n\r\n**Anything else we need to know?**:\r\n\r\nThis is because we use period = 10 * time.Second and jitterFactor = 0.2 in [cc.syncConfigSource(client, nodeName)](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubeletconfig/controller.go#L220-L222).\r\nIn extreme scenarios, it will take at least 12 seconds for Kubelet to catch this new config.\r\n\r\nWe use this [logic](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/util.go#L175-L186) to check whether kubelet is restarted:\r\n```go\r\n// poll for new config, for a maximum wait of restartGap\r\nEventually(func() error {\r\n\tnewKubeCfg, err := getCurrentKubeletConfig()\r\n\tif err != nil {\r\n\t\treturn fmt.Errorf(\"failed trying to get current Kubelet config, will retry, error: %v\", err)\r\n\t}\r\n\tif !reflect.DeepEqual(*kubeCfg, *newKubeCfg) {\r\n\t\treturn fmt.Errorf(\"still waiting for new configuration to take effect, will continue to watch /configz\")\r\n\t}\r\n\tglog.Infof(\"new configuration has taken effect\")\r\n\treturn nil\r\n}, restartGap, pollInterval).Should(BeNil())\r\n```\r\nThis `Eventually()` will return OK immediately as `newKubeCfg` has been set to etcd, but kubelet don't restart with this `newKubeCfg`.\r\nThis function `setKubeletConfiguration` will return before new configuration has taken effect.\r\n\r\nI will send a PR to fix this.\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g. from /etc/os-release):\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Others:\r\n\r\n/area kubelet\r\n/sig node\r\n/assign @mtaufen \r\n/cc @vishh @jiayingz @derekwaynecarr @dchen1107 @liggitt \r\nPTAL, Thanks!",
  "closed_at": "2018-01-12T08:00:38Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 6,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57701/comments",
  "created_at": "2017-12-29T08:35:24Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57701/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/57701",
  "id": 285054715,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 116719829,
      "name": "area/kubelet",
      "node_id": "MDU6TGFiZWwxMTY3MTk4Mjk=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubelet"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57701/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyODUwNTQ3MTU=",
  "number": 57701,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "[E2E Node] [Alpha: DynamicKubeletConfig] setKubeletConfiguration will return before new configuration has taken effect",
  "updated_at": "2018-01-12T08:00:38Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/57701",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/5319646?v=4",
    "events_url": "https://api.github.com/users/ScorpioCPH/events{/privacy}",
    "followers_url": "https://api.github.com/users/ScorpioCPH/followers",
    "following_url": "https://api.github.com/users/ScorpioCPH/following{/other_user}",
    "gists_url": "https://api.github.com/users/ScorpioCPH/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ScorpioCPH",
    "id": 5319646,
    "login": "ScorpioCPH",
    "node_id": "MDQ6VXNlcjUzMTk2NDY=",
    "organizations_url": "https://api.github.com/users/ScorpioCPH/orgs",
    "received_events_url": "https://api.github.com/users/ScorpioCPH/received_events",
    "repos_url": "https://api.github.com/users/ScorpioCPH/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ScorpioCPH/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ScorpioCPH/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ScorpioCPH"
  }
}