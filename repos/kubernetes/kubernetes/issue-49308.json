{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Is this a BUG REPORT or FEATURE REQUEST?**:\r\n\r\n/kind bug\r\n\r\n**What happened**:\r\n\r\nI'm currently part of a team working on implementing an out-of-tree cloud controller manager (CCM) for [Oracle Bare Metal Cloud][4].\r\n\r\nFor in-tree cloud-providers the [`cloudprovider.GetZone()`][1] method is [called from `kubelet`][2]. This allows in-tree cloud providers to implement [`GetZone()`][1] by querying local metadata services (as `kubelet` is of course running on the node itself).\r\n\r\nFor out-of-tree cloud-providers [`GetZone()`][1] is called in [`AddCloudNode()`][3] in the context of the cloud-controller-manager binary. Thus, local metadata services return the failure zone and region for the node on which the CCM is running rather than the node itself.\r\n\r\n**What you expected to happen**:\r\n\r\nOut-of-tree cloud providers should have access to the same functionality as in-tree cloud-providers.\r\n\r\nI propose extending the [`cloudprovider.Zones()`][5] interface to include a `GetZoneByProviderID(providerId string)` method and utilising this method in [`AddCloudNode()`][3].\r\n\r\nAlternatively (or additionally) the signature of [`GetZone()`][1] could be modified to take a `types.NodeName` parameter and the existing cloud-providers updated. This would be consistent with the other interfaces in the `cloudprovider` package.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n - Deploy an out-of-tree cloud controller manager as a daemon set running on the master nodes.\r\n - Add node to cluster in a different failure zone to the node on which the leader CCM is running.\r\n - Note that the node is labeled as being in the failure zone and region of the node the CCM is running on.\r\n\r\n**Anything else we need to know?**:\r\n\r\nI am very happy to implement this as an initial contribution to k8s if there is consensus on the issue.\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n   ```\r\n   Client Version: version.Info{Major:\"1\", Minor:\"7\", GitVersion:\"v1.7.1\", GitCommit:\"1dc5c66f5dd61da08412a74221ecc79208c2165b\", GitTreeState:\"clean\", BuildDate:\"2017-07-14T02:00:46Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n   Server Version: version.Info{Major:\"1\", Minor:\"7\", GitVersion:\"v1.7.0\", GitCommit:\"d3ada0119e776222f11ec7945e6d860061339aad\", GitTreeState:\"clean\", BuildDate:\"2017-06-29T22:55:19Z\", GoVersion:\"go1.8.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n   ```\r\n- Cloud provider or hardware configuration: [Oracle Bare Metal Cloud][4]\r\n- OS (e.g. from /etc/os-release):  Oracle Linux 7.3\r\n- Kernel (e.g. `uname -a`): `4.1.12-94.3.6.el7uek.x86_64 x86_64 GNU/Linux`\r\n- Install tools: `kubeadm`\r\n\r\n/cc @luxas @thockin @wlan0 @rrati @roberthbailey @tjfontaine\r\n\r\n[1]: https://github.com/kubernetes/kubernetes/blob/5529d01a22299728c59e7e3db92ccbf908ebae4f/pkg/cloudprovider/cloud.go#L185\r\n[2]: https://github.com/kubernetes/kubernetes/blob/c35bf2aa7b476c2523687b923f9e485df333f1d2/pkg/kubelet/kubelet_node_status.go#L310\r\n[3]: https://github.com/kubernetes/kubernetes/blob/c35bf2aa7b476c2523687b923f9e485df333f1d2/pkg/controller/cloud/nodecontroller.go#L267\r\n[4]: https://cloud.oracle.com/en_US/bare-metal\r\n[5]: https://github.com/kubernetes/kubernetes/blob/c35bf2aa7b476c2523687b923f9e485df333f1d2/pkg/cloudprovider/cloud.go#L183",
  "closed_at": "2017-08-25T04:51:08Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 11,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49308/comments",
  "created_at": "2017-07-20T15:58:18Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49308/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/49308",
  "id": 244414527,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 154660912,
      "name": "area/cloudprovider",
      "node_id": "MDU6TGFiZWwxNTQ2NjA5MTI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/cloudprovider"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to design.",
      "id": 114509261,
      "name": "kind/design",
      "node_id": "MDU6TGFiZWwxMTQ1MDkyNjE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/design"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.",
      "id": 173494222,
      "name": "sig/cluster-lifecycle",
      "node_id": "MDU6TGFiZWwxNzM0OTQyMjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/cluster-lifecycle"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49308/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNDQ0MTQ1Mjc=",
  "number": 49308,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Extend cloudprovider Zones API to support out-of-tree CCMs",
  "updated_at": "2017-08-25T04:51:08Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/49308",
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/244160?v=4",
    "events_url": "https://api.github.com/users/prydie/events{/privacy}",
    "followers_url": "https://api.github.com/users/prydie/followers",
    "following_url": "https://api.github.com/users/prydie/following{/other_user}",
    "gists_url": "https://api.github.com/users/prydie/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/prydie",
    "id": 244160,
    "login": "prydie",
    "node_id": "MDQ6VXNlcjI0NDE2MA==",
    "organizations_url": "https://api.github.com/users/prydie/orgs",
    "received_events_url": "https://api.github.com/users/prydie/received_events",
    "repos_url": "https://api.github.com/users/prydie/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/prydie/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/prydie/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/prydie"
  }
}