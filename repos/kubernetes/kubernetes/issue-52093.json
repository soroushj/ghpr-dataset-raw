{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "The pod evaluator used by the resource quota controller made direct calls to an unsafe pod conversion function which mutates the pod argument. With multiple resource quota controller workers, concurrent processing of the same pod from a shared informer can result in a panic when the conversion code attempts to write to a map field in the pod.\r\n\r\nObserved in this [OpenShift bug](https://bugzilla.redhat.com/show_bug.cgi?id=1486416) and discovered through analyzing core dumps from the controller manager.\r\n\r\n**The bug is only present in <=1.7: the conversion code in 1.8 no longer mutates the input.** \r\n\r\nIn my branch, I added a small unit test to `pkg/controller/resourcequota/resource_quota_controller_test.go` which reliably reproduces the panic:\r\n\r\n```go\r\nfunc TestSyncConcurrency(t *testing.T) {\r\n\tpodList := v1.PodList{\r\n\t\tItems: []v1.Pod{\r\n\t\t\t{\r\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\r\n\t\t\t\t\tName:        \"pod-running\",\r\n\t\t\t\t\tNamespace:   \"testing\",\r\n\t\t\t\t\tAnnotations: map[string]string{v1.PodInitContainerStatusesBetaAnnotationKey: \"[]\"},\r\n\t\t\t\t},\r\n\t\t\t\tStatus: v1.PodStatus{Phase: v1.PodRunning},\r\n\t\t\t\tSpec:   v1.PodSpec{},\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\tresourceQuota := v1.ResourceQuota{\r\n\t\tObjectMeta: metav1.ObjectMeta{Name: \"quota\", Namespace: \"testing\"},\r\n\t\tSpec: v1.ResourceQuotaSpec{\r\n\t\t\tHard: v1.ResourceList{\r\n\t\t\t\tv1.ResourcePods: resource.MustParse(\"5\"),\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n\tkubeClient := fake.NewSimpleClientset(&podList, &resourceQuota)\r\n\tinformerFactory := informers.NewSharedInformerFactory(kubeClient, controller.NoResyncPeriodFunc())\r\n\tresourceQuotaControllerOptions := &ResourceQuotaControllerOptions{\r\n\t\tKubeClient:            kubeClient,\r\n\t\tResourceQuotaInformer: informerFactory.Core().V1().ResourceQuotas(),\r\n\t\tResyncPeriod:          controller.NoResyncPeriodFunc,\r\n\t\tRegistry:              install.NewRegistry(kubeClient, informerFactory),\r\n\t\tGroupKindsToReplenish: []schema.GroupKind{\r\n\t\t\tapi.Kind(\"Pod\"),\r\n\t\t},\r\n\t\tControllerFactory:         NewReplenishmentControllerFactory(informerFactory),\r\n\t\tReplenishmentResyncPeriod: controller.NoResyncPeriodFunc,\r\n\t}\r\n\r\n\tcontrollerCh := make(chan struct{})\r\n\tdefer close(controllerCh)\r\n\r\n\tpodInformer := informerFactory.Core().V1().Pods().Informer()\r\n\tinformerFactory.Start(controllerCh)\r\n\tif !controller.WaitForCacheSync(\"pods\", make(chan struct{}), podInformer.HasSynced) {\r\n\t\tt.Fatal(\"timed out waiting for pod informer to sync\")\r\n\t}\r\n\r\n\tquotaController := NewResourceQuotaController(resourceQuotaControllerOptions)\r\n\r\n\tfor i := 0; i < 5; i++ {\r\n\t\tgo wait.Until(func() {\r\n\t\t\terr := quotaController.syncResourceQuota(&resourceQuota)\r\n\t\t\tif err != nil {\r\n\t\t\t\tt.Fatal(err)\r\n\t\t\t}\r\n\t\t}, 0, wait.NeverStop)\r\n\t}\r\n\tselect {\r\n\tcase <-time.After(2 * time.Second):\r\n\t\tt.Fatalf(\"didn't hit the race\")\r\n\t}\r\n}\r\n```\r\n\r\n/kind bug\r\n@kubernetes/sig-api-machinery-bugs \r\n",
  "closed_at": "2017-09-08T14:22:11Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/298299?v=4",
    "events_url": "https://api.github.com/users/ironcladlou/events{/privacy}",
    "followers_url": "https://api.github.com/users/ironcladlou/followers",
    "following_url": "https://api.github.com/users/ironcladlou/following{/other_user}",
    "gists_url": "https://api.github.com/users/ironcladlou/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ironcladlou",
    "id": 298299,
    "login": "ironcladlou",
    "node_id": "MDQ6VXNlcjI5ODI5OQ==",
    "organizations_url": "https://api.github.com/users/ironcladlou/orgs",
    "received_events_url": "https://api.github.com/users/ironcladlou/received_events",
    "repos_url": "https://api.github.com/users/ironcladlou/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ironcladlou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ironcladlou/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ironcladlou"
  },
  "comments": 1,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/52093/comments",
  "created_at": "2017-09-07T14:17:50Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/52093/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/52093",
  "id": 255953050,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/52093/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyNTU5NTMwNTA=",
  "number": 52093,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "[release-1.7] Panic in kube-controller-manager from concurrent map write race in resource quota controller",
  "updated_at": "2017-09-08T14:22:11Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/52093",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/298299?v=4",
    "events_url": "https://api.github.com/users/ironcladlou/events{/privacy}",
    "followers_url": "https://api.github.com/users/ironcladlou/followers",
    "following_url": "https://api.github.com/users/ironcladlou/following{/other_user}",
    "gists_url": "https://api.github.com/users/ironcladlou/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/ironcladlou",
    "id": 298299,
    "login": "ironcladlou",
    "node_id": "MDQ6VXNlcjI5ODI5OQ==",
    "organizations_url": "https://api.github.com/users/ironcladlou/orgs",
    "received_events_url": "https://api.github.com/users/ironcladlou/received_events",
    "repos_url": "https://api.github.com/users/ironcladlou/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/ironcladlou/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ironcladlou/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/ironcladlou"
  }
}