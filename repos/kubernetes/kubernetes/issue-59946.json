{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "> /kind bug\r\n\r\n**What happened**:\r\n\r\nI am not an iSCSI expert, but it looks like there is data corruption  possible on iSCSI LUN reuse.\r\n\r\nIn the following sequence of events on a given node:\r\n\r\n1. Provision iSCSI volume , map to host, LUN X will be assigned to it\r\n2. let node discover that LUN (lets say mount another iSCSI PV, which would trigger iSCSI rescan)\r\n3. delete iSCSI volume (LUN X will be unmapped from host)\r\n4. Create new iSCSI volume, map to host, same LUN X will be assigned to it, following warning will be printed on a console:\r\n```\r\nWarning! Received an indication that the LUN assignments on this target have changed. \r\nThe Linux SCSI layer does not automatically remap LUN assignments.\r\n```\r\n5. create PV for that iSCSI volume\r\n6. run pod with that PV on this node\r\n\r\nWhat is going to happen, is that even though `iscsi` volume plugin rescans scsi bus, rescan doesn't delete previously existing SCSI devices, so it can (will?) use OLD LUN X scsi device and then attempt to mount it with unknown consequences. On our systems we definitely saw how freshly formatted dynamically  provisioned volume couldn't be mounted due to ext4 errors , with  LUN warnings reported just before. I'll try to prepare reproducer for this case, but this \"analytical proof\" looks pretty scary already :-/\r\n\r\n\r\nSteps 1, 3 can be done by dynamic provisioner such as netapp Trident, these volumes can be mounted on another node and never be mouted on a node in  question, what important is that they are created and node discovers them.\r\n\r\nExtra information on LUN reuse, where solid advice on device deletion is given by kernel devs:\r\n\r\nhttps://www.redhat.com/archives/dm-devel/2018-January/msg00493.html\r\nhttps://www.redhat.com/archives/dm-devel/2016-October/msg00409.html\r\n\r\n/sig storage\r\n/cc @mtanino",
  "closed_at": "2018-07-25T23:19:01Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 11,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/59946/comments",
  "created_at": "2018-02-15T21:20:22Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/59946/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/59946",
  "id": 297600337,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Storage.",
      "id": 169428334,
      "name": "sig/storage",
      "node_id": "MDU6TGFiZWwxNjk0MjgzMzQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/storage"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/59946/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUyOTc2MDAzMzc=",
  "number": 59946,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "iSCSI should be deleting scsi devices on PV unmount to prevent data corruption",
  "updated_at": "2018-07-25T23:19:01Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/59946",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/16624?v=4",
    "events_url": "https://api.github.com/users/redbaron/events{/privacy}",
    "followers_url": "https://api.github.com/users/redbaron/followers",
    "following_url": "https://api.github.com/users/redbaron/following{/other_user}",
    "gists_url": "https://api.github.com/users/redbaron/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/redbaron",
    "id": 16624,
    "login": "redbaron",
    "node_id": "MDQ6VXNlcjE2NjI0",
    "organizations_url": "https://api.github.com/users/redbaron/orgs",
    "received_events_url": "https://api.github.com/users/redbaron/received_events",
    "repos_url": "https://api.github.com/users/redbaron/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/redbaron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/redbaron/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/redbaron"
  }
}