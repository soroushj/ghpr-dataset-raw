{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "CONTRIBUTOR",
  "body": "**Kubernetes version** (use `kubectl version`):\n\n```\nClient Version: version.Info{Major:\"1\", Minor:\"4\", GitVersion:\"v1.4.4+3b417cc\", GitCommit:\"3b417cc4ccd1b8f38ff9ec96bb50a81ca0ea9d56\", GitTreeState:\"not a git tree\", BuildDate:\"2016-10-21T22:34:07Z\", GoVersion:\"go1.7.3\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\nServer Version: version.Info{Major:\"1\", Minor:\"4\", GitVersion:\"v1.4.3\", GitCommit:\"4957b090e9a4f6a68b4a40375408fdc74a212260\", GitTreeState:\"clean\", BuildDate:\"2016-10-16T06:20:04Z\", GoVersion:\"go1.6.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n```\n\n**Environment**:\n- **Cloud provider or hardware configuration**: GCE\n\n**What happened**:\nCreating a PetSet with multiple PVC allocates volumes in different zones, then pod scheduling fails. (volume a is in zone a, volume b in zone b, no node in both zones at the same time)\n\n**What you expected to happen**:\nAllocate volumes in the same zone.\n\n**How to reproduce it** (as minimally and precisely as possible):\n\n``` yaml\napiVersion: apps/v1alpha1\nkind: PetSet\nmetadata:\n  name: monitoring-influxdb-grafana-v4\n  namespace: kube-system\n  labels: \n    k8s-app: influxGrafana\n    version: v4\n    kubernetes.io/cluster-service: \"true\"\nspec: \n  serviceName: monitoring-influxdb\n  replicas: 1\n  template: \n    metadata: \n      labels: \n        k8s-app: influxGrafana\n        version: v4\n        kubernetes.io/cluster-service: \"true\"\n    spec: \n      containers: \n        - image: gcr.io/google_containers/heapster_influxdb:v0.7\n          name: influxdb\n          resources:\n            # keep request = limit to keep this container in guaranteed class\n            limits:\n              cpu: 100m\n              memory: 500Mi\n            requests:\n              cpu: 100m\n              memory: 500Mi\n          ports: \n            - containerPort: 8083\n            - containerPort: 8086\n          volumeMounts:\n          - name: influxdb-ps\n            mountPath: /data\n        - image: gcr.io/kuende-staging1/heapster_grafana:v3.1.1\n          name: grafana\n          env:\n          resources:\n            # keep request = limit to keep this container in guaranteed class\n            limits:\n              cpu: 100m\n              memory: 100Mi\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            # This variable is required to setup templates in Grafana.\n            - name: INFLUXDB_SERVICE_URL\n              value: http://monitoring-influxdb:8086\n              # The following env variables are required to make Grafana accessible via\n              # the kubernetes api-server proxy. On production clusters, we recommend\n              # removing these env variables, setup auth for grafana, and expose the grafana\n              # service using a LoadBalancer or a public IP.\n            - name: GF_AUTH_BASIC_ENABLED\n              value: \"false\"\n            - name: GF_AUTH_ANONYMOUS_ENABLED\n              value: \"true\"\n            - name: GF_AUTH_ANONYMOUS_ORG_ROLE\n              value: Admin\n            - name: GF_SERVER_ROOT_URL\n              value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/\n          volumeMounts:\n          - name: grafana-ps\n            mountPath: /var\n  volumeClaimTemplates:\n    - metadata:\n        name: influxdb-ps\n        annotations:\n          volume.beta.kubernetes.io/storage-class: ssd\n      spec:\n        accessModes:\n          - \"ReadWriteOnce\"\n        resources:\n          requests:\n            storage: 10Gi\n    - metadata:\n        name: grafana-ps\n        annotations:\n          volume.beta.kubernetes.io/storage-class: standard\n      spec:\n        accessModes:\n          - \"ReadWriteOnce\"\n        resources:\n          requests:\n            storage: 1Gi\n```\n\n**Anything else do we need to know**:\n",
  "closed_at": "2017-02-24T04:57:29Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 19,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/35695/comments",
  "created_at": "2016-10-27T13:24:48Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/35695/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/35695",
  "id": 185667528,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 353400216,
      "name": "area/stateful-apps",
      "node_id": "MDU6TGFiZWwzNTM0MDAyMTY=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/stateful-apps"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Apps.",
      "id": 404091735,
      "name": "sig/apps",
      "node_id": "MDU6TGFiZWw0MDQwOTE3MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/apps"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/35695/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxODU2Njc1Mjg=",
  "number": 35695,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "PetSet with multiple PVC",
  "updated_at": "2017-02-24T04:57:29Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/35695",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/543193?v=4",
    "events_url": "https://api.github.com/users/nvartolomei/events{/privacy}",
    "followers_url": "https://api.github.com/users/nvartolomei/followers",
    "following_url": "https://api.github.com/users/nvartolomei/following{/other_user}",
    "gists_url": "https://api.github.com/users/nvartolomei/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/nvartolomei",
    "id": 543193,
    "login": "nvartolomei",
    "node_id": "MDQ6VXNlcjU0MzE5Mw==",
    "organizations_url": "https://api.github.com/users/nvartolomei/orgs",
    "received_events_url": "https://api.github.com/users/nvartolomei/received_events",
    "repos_url": "https://api.github.com/users/nvartolomei/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/nvartolomei/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nvartolomei/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/nvartolomei"
  }
}