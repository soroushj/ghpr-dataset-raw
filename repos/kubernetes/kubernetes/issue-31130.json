{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**Kubernetes version** (use `kubectl version`):\n\n```\nClient Version: version.Info{Major:\"1\", Minor:\"3\", GitVersion:\"v1.3.5\", GitCommit:\"b0deb2eb8f4037421077f77cb163dbb4c0a2a9f5\", GitTreeState:\"clean\", BuildDate:\"2016-08-11T20:29:08Z\", GoVersion:\"go1.6.2\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\nServer Version: version.Info{Major:\"1\", Minor:\"3\", GitVersion:\"v1.3.4\", GitCommit:\"dd6b458ef8dbf24aff55795baa68f83383c9b3a9\", GitTreeState:\"clean\", BuildDate:\"2016-08-01T16:38:31Z\", GoVersion:\"go1.6.2\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n```\n\n**Environment**:\n- **Cloud provider or hardware configuration**: aws ec2\n\n**What happened**:\nI only need one replica for my application, but I also want to have zero downtime deployment. I have written following spec:\n\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: xxx\nspec:\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 0\n      maxSurge: 1\n```\n\nDeployment works as expected:\n1. there is always 1 pod available\n2. when deploy is triggered, then the second pod is created\n3. first pod is available, second is booting (ready=false) \n4. when the second pod is ready, then the first pod is terminated\n\nWhenever I execute `kubectl rollout status deployment/xxx` it always prints `deployment xxxx successfully rolled out`. I've even executed this command in loop, triggered deployment and saw that value never changed.\n\n**What you expected to happen**:\n`kubectl rollout status deployment/xxx` should work as documentation states: print changes and wait until rollout is completed.\n\n**How to reproduce it** (as minimally and precisely as possible):\n\nCreate deployment with spec like above.\n\n**Anything else do we need to know**:\n\nMaybe I don't understand this well. When is rollout considered successful in my case? I would think that the moment new pod changes into ready status.\n\nI've also followed docs about [deployment status](http://kubernetes.io/docs/user-guide/deployments/#the-status-of-a-deployment) and printed in loop all variables checked by `rollout status` with command:\n\n```\nwatch ku --namespace uxpin-kubernetes-probes get deployment/uxpin-apps -o jsonpath=\"'{.status.observedGeneration}>={.metadata.generation} && {.status.updatedReplicas}=={.spec.replicas}'\"\n```\n\nAnd indeed conditions are true during whole rollout.\n\nThe reason I need `rollout status` is because I want to send notification about completed deployment. If there is better way to do this please correct me.\n",
  "closed_at": "2016-09-08T12:01:26Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/13653959?v=4",
    "events_url": "https://api.github.com/users/k8s-github-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-github-robot/followers",
    "following_url": "https://api.github.com/users/k8s-github-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-github-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-github-robot",
    "id": 13653959,
    "login": "k8s-github-robot",
    "node_id": "MDQ6VXNlcjEzNjUzOTU5",
    "organizations_url": "https://api.github.com/users/k8s-github-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-github-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-github-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-github-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-github-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-github-robot"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/31130/comments",
  "created_at": "2016-08-22T16:35:51Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/31130/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/31130",
  "id": 172497996,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 138247961,
      "name": "area/kubectl",
      "node_id": "MDU6TGFiZWwxMzgyNDc5NjE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/kubectl"
    },
    {
      "color": "fbca04",
      "default": false,
      "description": "Higher priority than priority/awaiting-more-evidence.",
      "id": 114528273,
      "name": "priority/backlog",
      "node_id": "MDU6TGFiZWwxMTQ1MjgyNzM=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/backlog"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/31130/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWUxNzI0OTc5OTY=",
  "number": 31130,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "`kubectl rollout status` does not print actual deployment status",
  "updated_at": "2016-09-08T12:01:26Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/31130",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/270388?v=4",
    "events_url": "https://api.github.com/users/Eyjafjallajokull/events{/privacy}",
    "followers_url": "https://api.github.com/users/Eyjafjallajokull/followers",
    "following_url": "https://api.github.com/users/Eyjafjallajokull/following{/other_user}",
    "gists_url": "https://api.github.com/users/Eyjafjallajokull/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/Eyjafjallajokull",
    "id": 270388,
    "login": "Eyjafjallajokull",
    "node_id": "MDQ6VXNlcjI3MDM4OA==",
    "organizations_url": "https://api.github.com/users/Eyjafjallajokull/orgs",
    "received_events_url": "https://api.github.com/users/Eyjafjallajokull/received_events",
    "repos_url": "https://api.github.com/users/Eyjafjallajokull/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/Eyjafjallajokull/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Eyjafjallajokull/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/Eyjafjallajokull"
  }
}