{
  "active_lock_reason": null,
  "assignee": null,
  "assignees": [],
  "author_association": "NONE",
  "body": "**What happened**:\r\nI created a service where the `nodePort` was the same as the `port`, and having done so, then the `nodePort` was *not* accessible externally on the Windows node where the pod was running (it was, however, accessible on the Linux master).  When I changed either the `port` or the `nodePort` so that they were different then the service was accessible on the Windows node.\r\n\r\n**What you expected to happen**:\r\nI expect `NodePort` services to work when the `nodePort` and the `port` are the same value.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\nHere's the `.yaml` file that I used:\r\n```\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  namespace: default\r\n  name: hello\r\nspec:\r\n  selector:\r\n    matchLabels:\r\n      app.kubernetes.io/component: hello\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app.kubernetes.io/component: hello\r\n    spec:\r\n      nodeSelector:\r\n        kubernetes.io/os: windows\r\n      containers:\r\n        - name: hello-container\r\n          image: mcr.microsoft.com/windows:10.0.17763.437\r\n          command:\r\n            - powershell.exe\r\n            - -Command\r\n            - \"<#code used from https://gist.github.com/wagnerandrade/5424431#> ; $$listener = New-Object System.Net.HttpListener ; $$listener.Prefixes.Add('http://*:80/') ; $$listener.Start() ; $$callerCounts = @{} ; Write-Host('Listening at http://*:80/') ; while ($$listener.IsListening) { ;$$context = $$listener.GetContext() ;$$requestUrl = $$context.Request.Url ;$$clientIP = $$context.Request.RemoteEndPoint.Address ;$$response = $$context.Response ;Write-Host '' ;Write-Host('> {0}' -f $$requestUrl) ;  ;$$count = 1 ;$$k=$$callerCounts.Get_Item($$clientIP) ;if ($$k -ne $$null) { $$count += $$k } ;$$callerCounts.Set_Item($$clientIP, $$count) ;$$ip=(Get-NetAdapter | Get-NetIpAddress); $$header='<html><body><H1>Windows Container Web Server</H1>' ;$$callerCountsString='' ;$$callerCounts.Keys | % { $$callerCountsString+='<p>IP {0} callerCount {1} ' -f $$ip[1].IPAddress,$$callerCounts.Item($$_) } ;$$footer='</body></html>' ;$$content='{0}{1}{2}' -f $$header,$$callerCountsString,$$footer ;Write-Output $$content ;$$buffer = [System.Text.Encoding]::UTF8.GetBytes($$content) ;$$response.ContentLength64 = $$buffer.Length ;$$response.OutputStream.Write($$buffer, 0, $$buffer.Length) ;$$response.Close() ;$$responseStatus = $$response.StatusCode ;Write-Host('< {0}' -f $$responseStatus)  } ; \"\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  namespace: default\r\n  name: hello-service\r\nspec:\r\n  selector:\r\n    app.kubernetes.io/component: hello\r\n  type: NodePort\r\n  ports:\r\n    - nodePort: 31234\r\n      port: 31234\r\n      targetPort: 80\r\n```\r\nThen, in a web browser on my desktop machine, I visited the `nodePort` on both the Linux master's IP address, and then in a different tab, using the `nodePort` again, the IP address of the Windows worker node where that pod was scheduled.  It only worked using the IP address of the Linux master.  The tab using the Windows worker node's IP address did not load.\r\n\r\nThen, I changed either the `port` or the `nodePort` so that they were different values, and when they were different, it worked using the `nodePort` of both the Linux master's IP address and the IP address of the Windows worker node where that pod was scheduled.\r\n\r\n**Anything else we need to know?**:\r\n- On-premise install of k8s\r\n- The Windows nodes all have the following feature gates enabled:\r\n  - WinOverlay\r\n  - WindowsGMSA\r\n\r\n**Linux master**:\r\n- OS (e.g. `cat /etc/os-release`): `Ubuntu 18.10 (Cosmic Cuttlefish)`\r\n```\r\n Kernel Version:             4.18.0-18-generic   #19-Ubuntu   Tue Apr 2 18:13:16 UTC 2019\r\n OS Image:                   Ubuntu 18.10\r\n Operating System:           linux\r\n Architecture:               amd64\r\n Container Runtime Version:  docker://18.9.5\r\n Kubelet Version:            v1.14.1\r\n Kube-Proxy Version:         v1.14.1\r\n```\r\n\r\n**Windows worker**:\r\n```\r\n Kernel Version:             10.0.17763.437\r\n OS Image:                   Windows Server 2019 Standard\r\n Operating System:           windows\r\n Architecture:               amd64\r\n Container Runtime Version:  docker://18.9.5\r\n Kubelet Version:            v1.14.1\r\n Kube-Proxy Version:         v1.14.1\r\n```\r\n```\r\nNetworkMode: overlay\r\n```\r\n```\r\n.\\flanneld.exe -version\r\nv0.11.0\r\n```\r\n\r\nIf you need any more information then please let me know.",
  "closed_at": "2019-06-21T19:16:15Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 3,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78574/comments",
  "created_at": "2019-05-31T10:04:00Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78574/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/78574",
  "id": 450719524,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Windows.",
      "id": 422106010,
      "name": "sig/windows",
      "node_id": "MDU6TGFiZWw0MjIxMDYwMTA=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/windows"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78574/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NTA3MTk1MjQ=",
  "number": 78574,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Windows nodePort doesn't work when it's the same as the service port",
  "updated_at": "2019-06-21T19:16:15Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78574",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/2973219?v=4",
    "events_url": "https://api.github.com/users/DavidSimner/events{/privacy}",
    "followers_url": "https://api.github.com/users/DavidSimner/followers",
    "following_url": "https://api.github.com/users/DavidSimner/following{/other_user}",
    "gists_url": "https://api.github.com/users/DavidSimner/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/DavidSimner",
    "id": 2973219,
    "login": "DavidSimner",
    "node_id": "MDQ6VXNlcjI5NzMyMTk=",
    "organizations_url": "https://api.github.com/users/DavidSimner/orgs",
    "received_events_url": "https://api.github.com/users/DavidSimner/received_events",
    "repos_url": "https://api.github.com/users/DavidSimner/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/DavidSimner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/DavidSimner/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/DavidSimner"
  }
}