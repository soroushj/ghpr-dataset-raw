{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/730123?v=4",
    "events_url": "https://api.github.com/users/sttts/events{/privacy}",
    "followers_url": "https://api.github.com/users/sttts/followers",
    "following_url": "https://api.github.com/users/sttts/following{/other_user}",
    "gists_url": "https://api.github.com/users/sttts/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/sttts",
    "id": 730123,
    "login": "sttts",
    "node_id": "MDQ6VXNlcjczMDEyMw==",
    "organizations_url": "https://api.github.com/users/sttts/orgs",
    "received_events_url": "https://api.github.com/users/sttts/received_events",
    "repos_url": "https://api.github.com/users/sttts/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/sttts/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sttts/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/sttts"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars0.githubusercontent.com/u/730123?v=4",
      "events_url": "https://api.github.com/users/sttts/events{/privacy}",
      "followers_url": "https://api.github.com/users/sttts/followers",
      "following_url": "https://api.github.com/users/sttts/following{/other_user}",
      "gists_url": "https://api.github.com/users/sttts/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sttts",
      "id": 730123,
      "login": "sttts",
      "node_id": "MDQ6VXNlcjczMDEyMw==",
      "organizations_url": "https://api.github.com/users/sttts/orgs",
      "received_events_url": "https://api.github.com/users/sttts/received_events",
      "repos_url": "https://api.github.com/users/sttts/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sttts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sttts/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sttts"
    }
  ],
  "author_association": "MEMBER",
  "body": "**What happened**:\r\n\r\nCreated a CRD using the new `x-kubernetes-embedded-resource` extension:\r\n```yaml\r\napiVersion: apiextensions.k8s.io/v1beta1\r\nkind: CustomResourceDefinition\r\nmetadata:\r\n  name: foos.example.com\r\nspec:\r\n  group: example.com\r\n  version: v1\r\n  scope: Namespaced\r\n  names:\r\n    plural: foos\r\n    singular: foo\r\n    kind: Foo\r\n    listKind: FooList\r\n  preserveUnknownFields: false\r\n  validation:\r\n    openAPIV3Schema:\r\n      type: object\r\n      properties:\r\n        spec:\r\n          type: object\r\n          properties:\r\n            template:\r\n              type: object\r\n              x-kubernetes-embedded-resource: true\r\n              x-kubernetes-preserve-unknown-fields: true\r\n              properties:\r\n                spec:\r\n                  type: object\r\n        metadata:\r\n          type: object\r\n          properties:\r\n            name:\r\n              type: string\r\n```\r\n\r\nChecked the published OpenAPI spec:\r\n```\r\n$ kubectl get --raw /openapi/v2 | jq '.definitions[\"com.example.v1.Foo\"]'\r\n```\r\n```json\r\n{\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"apiVersion\": {\r\n      \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"kind\": {\r\n      \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\",\r\n      \"type\": \"string\"\r\n    },\r\n    \"metadata\": {\r\n      \"description\": \"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\",\r\n      \"$ref\": \"#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\r\n    },\r\n    \"spec\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"template\": {\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"spec\": {\r\n              \"type\": \"object\"\r\n            }\r\n          },\r\n          \"x-kubernetes-embedded-resource\": true,\r\n          \"x-kubernetes-preserve-unknown-fields\": true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"x-kubernetes-group-version-kind\": [\r\n    {\r\n      \"group\": \"example.com\",\r\n      \"kind\": \"Foo\",\r\n      \"version\": \"v1\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nCreated an instance of the resource:\r\nfoo.yaml:\r\n```yaml\r\nkind: Foo\r\napiVersion: example.com/v1\r\nmetadata:\r\n  name: myfoo\r\n  labels:\r\n    a: b\r\nspec:\r\n  template:\r\n    #apiVersion: foo/v1\r\n    #kind: Sub\r\n    metadata:\r\n      name: subobject\r\n      bogus: fields\r\n      labels:\r\n        a: b\r\n        b: [true,false]\r\n        c: \"a value\"\r\n    spec:\r\n      readonly: true\r\n```\r\n```\r\nkubectl create -f foo.yaml\r\nkubectl get foo/myfoo -o yaml\r\n```\r\n```yaml\r\napiVersion: example.com/v1\r\nkind: Foo\r\nmetadata:\r\n  annotations:\r\n  creationTimestamp: \"2019-06-07T03:16:48Z\"\r\n  generation: 6\r\n  labels:\r\n    a: b\r\n  name: myfoo\r\n  namespace: default\r\n  resourceVersion: \"493\"\r\n  selfLink: /apis/example.com/v1/namespaces/default/foos/myfoo\r\n  uid: fd5a311d-b318-490d-a127-82b916dde188\r\nspec:\r\n  template:\r\n    metadata:\r\n      bogus: fields\r\n      labels:\r\n        a: b\r\n        b:\r\n        - true\r\n        - false\r\n        c: \"a value\"\r\n      name: subobject\r\n    spec: {}\r\n```\r\n\r\n**What you expected to happen**:\r\n\r\n1. kind, apiVersion, and metadata to be added to the schema for the `x-kubernetes-embedded-resource` object\r\n2. `kind` and `apiVersion` to be required to be present, non-empty, and apiVersion to pass `ParseGroupVersion`\r\n3. `metadata` to be schema-checked (fail on the array value under labels), pruned (dropped the `bogus` field), and validated (fail on the invalid label value for \"c\")\r\n4. If kind, apiVersion, or metadata properties were defined in the schema, they would further restrict the allowed values, but the built-in validation would still occur as well\r\n5. if pruning is enabled on the CRD, the kind/apiVersion/metadata fields should be preserved (and metadata should be pruned according to the fields supported by objectmeta)\r\n6. if pruning is not enabled on the CRD, metadata should be pruned according to the fields supported by objectmeta\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n\r\n**Anything else we need to know?**:\r\n\r\nFrom the API doc:\r\n```\r\n\t// x-kubernetes-embedded-resource defines that the value is an\r\n\t// embedded Kubernetes runtime.Object, with TypeMeta and\r\n\t// ObjectMeta. The type must be object. It is allowed to further\r\n\t// restrict the embedded object. kind, apiVersion and metadata\r\n\t// are validated automatically. x-kubernetes-preserve-unknown-fields\r\n\t// is allowed to be true, but does not have to be if the object\r\n\t// is fully specified (up to kind, apiVersion, metadata).\r\n```\r\n\r\n/milestone v1.15\r\n/sig api-machinery\r\n/area custom-resources\r\n/priority critical-urgent\r\n/assign @sttts",
  "closed_at": "2019-06-10T16:01:12Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 0,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78784/comments",
  "created_at": "2019-06-07T03:55:51Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78784/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/78784",
  "id": 453327699,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": null,
      "id": 556590057,
      "name": "area/custom-resources",
      "node_id": "MDU6TGFiZWw1NTY1OTAwNTc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/custom-resources"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "e11d21",
      "default": false,
      "description": "Highest priority. Must be actively worked on as someone's top priority right now.",
      "id": 114528068,
      "name": "priority/critical-urgent",
      "node_id": "MDU6TGFiZWwxMTQ1MjgwNjg=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/priority/critical-urgent"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG API Machinery.",
      "id": 173493835,
      "name": "sig/api-machinery",
      "node_id": "MDU6TGFiZWwxNzM0OTM4MzU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/api-machinery"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78784/labels{/name}",
  "locked": false,
  "milestone": {
    "closed_at": "2020-08-23T05:01:19Z",
    "closed_issues": 462,
    "created_at": "2018-12-19T15:58:01Z",
    "creator": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/23304?v=4",
      "events_url": "https://api.github.com/users/dims/events{/privacy}",
      "followers_url": "https://api.github.com/users/dims/followers",
      "following_url": "https://api.github.com/users/dims/following{/other_user}",
      "gists_url": "https://api.github.com/users/dims/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dims",
      "id": 23304,
      "login": "dims",
      "node_id": "MDQ6VXNlcjIzMzA0",
      "organizations_url": "https://api.github.com/users/dims/orgs",
      "received_events_url": "https://api.github.com/users/dims/received_events",
      "repos_url": "https://api.github.com/users/dims/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dims/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dims/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dims"
    },
    "description": null,
    "due_on": null,
    "html_url": "https://github.com/kubernetes/kubernetes/milestone/42",
    "id": 3913281,
    "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/42/labels",
    "node_id": "MDk6TWlsZXN0b25lMzkxMzI4MQ==",
    "number": 42,
    "open_issues": 0,
    "state": "closed",
    "title": "v1.15",
    "updated_at": "2020-08-23T05:01:19Z",
    "url": "https://api.github.com/repos/kubernetes/kubernetes/milestones/42"
  },
  "node_id": "MDU6SXNzdWU0NTMzMjc2OTk=",
  "number": 78784,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "x-kubernetes-embedded-resource behavior is not working as specified",
  "updated_at": "2019-06-10T16:01:12Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/78784",
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/980082?v=4",
    "events_url": "https://api.github.com/users/liggitt/events{/privacy}",
    "followers_url": "https://api.github.com/users/liggitt/followers",
    "following_url": "https://api.github.com/users/liggitt/following{/other_user}",
    "gists_url": "https://api.github.com/users/liggitt/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/liggitt",
    "id": 980082,
    "login": "liggitt",
    "node_id": "MDQ6VXNlcjk4MDA4Mg==",
    "organizations_url": "https://api.github.com/users/liggitt/orgs",
    "received_events_url": "https://api.github.com/users/liggitt/received_events",
    "repos_url": "https://api.github.com/users/liggitt/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/liggitt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/liggitt/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/liggitt"
  }
}