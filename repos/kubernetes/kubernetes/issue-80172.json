{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/11574918?v=4",
    "events_url": "https://api.github.com/users/gaorong/events{/privacy}",
    "followers_url": "https://api.github.com/users/gaorong/followers",
    "following_url": "https://api.github.com/users/gaorong/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaorong/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/gaorong",
    "id": 11574918,
    "login": "gaorong",
    "node_id": "MDQ6VXNlcjExNTc0OTE4",
    "organizations_url": "https://api.github.com/users/gaorong/orgs",
    "received_events_url": "https://api.github.com/users/gaorong/received_events",
    "repos_url": "https://api.github.com/users/gaorong/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/gaorong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaorong/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/gaorong"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars3.githubusercontent.com/u/11574918?v=4",
      "events_url": "https://api.github.com/users/gaorong/events{/privacy}",
      "followers_url": "https://api.github.com/users/gaorong/followers",
      "following_url": "https://api.github.com/users/gaorong/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaorong/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gaorong",
      "id": 11574918,
      "login": "gaorong",
      "node_id": "MDQ6VXNlcjExNTc0OTE4",
      "organizations_url": "https://api.github.com/users/gaorong/orgs",
      "received_events_url": "https://api.github.com/users/gaorong/received_events",
      "repos_url": "https://api.github.com/users/gaorong/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gaorong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaorong/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gaorong"
    }
  ],
  "author_association": "CONTRIBUTOR",
  "body": "**What happened**:\r\nThe node lease feature becomes beta and enables by default in v1.14. After upgrading our cluster to v1.14, we found some nodes become not ready occasionally and later become ready again after a few seconds. \r\nIn order to have a quick failure detection and recovery, our kubelet has a flag setting `--node-status-update-frequency=5s` and controller-manager has another flag setting `--node-monitor-grace-period=10s`. \r\n\r\nIf we use node lease feature, the kubelet doesn't report it's status as frequently as specified by flag `--node-status-update-frequency`, and use node lease mechanism to report that node is alive.\r\nthe default interval at which node lease renew is hardcoded 10s,  but it can't be exactly 10s and may be a little bit more than 10s because of some network latency.  when controller-manager doesn't receive messages from kubelet in every 10s in our case, it will mark this node as unreachable and not ready state, but in the next reconcile cycle, it receives the lease update message and mark this node as reachable again,  so the node status is flapping between ready and not ready state.\r\n\r\nThis seems a breaking change that setting kubelet's lease renewing interval to a hardcoded 10s,  even though our node status update frequency has a little bit small value, node lease should align kubelet's previous behavior and renew as frequently as  `--node-status-update-frequency` to reporting alive message, otherwise controller-manager will mark this node as unreachable.\r\n\r\n**What you expected to happen**:\r\nSo we should not merely set node lease renewing interval to 10s, maybe depending on the `--node-status-update-frequency` has a more heuristic value.\r\n\r\n**How to reproduce it (as minimally and precisely as possible)**:\r\n1. setup a v1.14 kubernetes cluster\r\n2. then set flag `--node-status-update-frequency=5s` to kubelet and `--node-monitor-grace-period=10s` to controller-manager. \r\n3. then wait a few minute, \r\n4. you'll find some log regarding `node unreachable` in controller-manager's log.\r\n\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n- Kubernetes version (use `kubectl version`):\r\n- Cloud provider or hardware configuration:\r\n- OS (e.g: `cat /etc/os-release`):\r\n- Kernel (e.g. `uname -a`):\r\n- Install tools:\r\n- Network plugin and version (if this is a network-related bug):\r\n- Others:\r\n\r\n/sig node\r\n/kind bug\r\n/assign\r\n",
  "closed_at": "2019-07-18T14:08:12Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 7,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/80172/comments",
  "created_at": "2019-07-15T13:44:50Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/80172/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/80172",
  "id": 468136419,
  "labels": [
    {
      "color": "e11d21",
      "default": false,
      "description": "Categorizes issue or PR as related to a bug.",
      "id": 105146071,
      "name": "kind/bug",
      "node_id": "MDU6TGFiZWwxMDUxNDYwNzE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/bug"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Node.",
      "id": 173493665,
      "name": "sig/node",
      "node_id": "MDU6TGFiZWwxNzM0OTM2NjU=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/node"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/80172/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU0NjgxMzY0MTk=",
  "number": 80172,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "node status is flapping between ready and not ready state because of long interval at which node lease renew",
  "updated_at": "2019-07-18T14:08:12Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/80172",
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/11574918?v=4",
    "events_url": "https://api.github.com/users/gaorong/events{/privacy}",
    "followers_url": "https://api.github.com/users/gaorong/followers",
    "following_url": "https://api.github.com/users/gaorong/following{/other_user}",
    "gists_url": "https://api.github.com/users/gaorong/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/gaorong",
    "id": 11574918,
    "login": "gaorong",
    "node_id": "MDQ6VXNlcjExNTc0OTE4",
    "organizations_url": "https://api.github.com/users/gaorong/orgs",
    "received_events_url": "https://api.github.com/users/gaorong/received_events",
    "repos_url": "https://api.github.com/users/gaorong/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/gaorong/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gaorong/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/gaorong"
  }
}