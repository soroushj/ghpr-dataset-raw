{
  "active_lock_reason": null,
  "assignee": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/1690251?v=4",
    "events_url": "https://api.github.com/users/rajibmitra/events{/privacy}",
    "followers_url": "https://api.github.com/users/rajibmitra/followers",
    "following_url": "https://api.github.com/users/rajibmitra/following{/other_user}",
    "gists_url": "https://api.github.com/users/rajibmitra/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/rajibmitra",
    "id": 1690251,
    "login": "rajibmitra",
    "node_id": "MDQ6VXNlcjE2OTAyNTE=",
    "organizations_url": "https://api.github.com/users/rajibmitra/orgs",
    "received_events_url": "https://api.github.com/users/rajibmitra/received_events",
    "repos_url": "https://api.github.com/users/rajibmitra/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/rajibmitra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rajibmitra/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/rajibmitra"
  },
  "assignees": [
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/1690251?v=4",
      "events_url": "https://api.github.com/users/rajibmitra/events{/privacy}",
      "followers_url": "https://api.github.com/users/rajibmitra/followers",
      "following_url": "https://api.github.com/users/rajibmitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajibmitra/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rajibmitra",
      "id": 1690251,
      "login": "rajibmitra",
      "node_id": "MDQ6VXNlcjE2OTAyNTE=",
      "organizations_url": "https://api.github.com/users/rajibmitra/orgs",
      "received_events_url": "https://api.github.com/users/rajibmitra/received_events",
      "repos_url": "https://api.github.com/users/rajibmitra/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rajibmitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajibmitra/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rajibmitra"
    },
    {
      "avatar_url": "https://avatars1.githubusercontent.com/u/10273533?v=4",
      "events_url": "https://api.github.com/users/johnSchnake/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnSchnake/followers",
      "following_url": "https://api.github.com/users/johnSchnake/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnSchnake/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnSchnake",
      "id": 10273533,
      "login": "johnSchnake",
      "node_id": "MDQ6VXNlcjEwMjczNTMz",
      "organizations_url": "https://api.github.com/users/johnSchnake/orgs",
      "received_events_url": "https://api.github.com/users/johnSchnake/received_events",
      "repos_url": "https://api.github.com/users/johnSchnake/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnSchnake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnSchnake/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnSchnake"
    }
  ],
  "author_association": "MEMBER",
  "body": "We want to utilize / generate https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/conformance-tests.md#conformance-test-comment-metadata\r\nto generate a comprehensive list of tests, with all available metadata.\r\n\r\nWe manually add a src path and last string in the test to identify tests as conformance tests within https://github.com/kubernetes/kubernetes/tree/master/test/conformance\r\nbut this doesn't give us the metadata necessary to automate some of the metrics necessary for Conformance.\r\n\r\nThe existing conformance walking that is useful as as starting point:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/conformance/walk.go#L40\r\n\r\nArguments, ala `--url`, `--conformance`, and `--version`:\r\n\r\n```go\r\nvar (\r\n\tbaseURL = flag.String(\"url\",\r\n                              \"https://github.com/kubernetes/kubernetes/tree/master/\",\r\n                              \"location of the current source\")\r\n\tconfDoc =   flag.Bool(\"conformance\",\r\n                               false,\r\n                              \"write a conformance document\")\r\n\tversion = flag.String(\"version\",\r\n                              \"v1.9\",\r\n                              \"version of this conformance document\")\r\n\ttotalConfTests, totalLegacyTests, missingComments int\r\n\r\n\t// If a test name contains any of these tags, it is ineligble for promotion to conformance\r\n        // *** Note that v1.12 and earlier have Flaky Conformance tests \r\n\tregexIneligibleTags = regexp.MustCompile(\r\n                              `\\[(Alpha|Disruptive|Feature:[^\\]]+|Flaky)\\]`)\r\n)\r\n```\r\n\r\nWithout any arguments it generates the conformance.txt on stdout, noting the [documentation update that @heyste did](https://github.com/kubernetes/community/pull/3948/files?short_path=95da553#diff-95da5537a24410366e75b8e34e2b8e6a):\r\n\r\n> `go run test/conformance/walk.go test/e2e > test/conformance/testdata/conformance.txt` adds the test name to the conformance.txt file\r\n\r\nWith ``--conformance`` is uses a header of https://github.com/kubernetes/kubernetes/blob/master/test/conformance/cf_header.md and iterates through generating markdown documentation for each Conformance Test ala this PR:\r\n\r\nhttps://github.com/cncf/k8s-conformance/pull/622 (note the [need to fix the paths](https://gitlab.ii.coop/ii/k8s/conformance-testing/issues/33#note_10700)) \r\n\r\n```shell\r\ngo run k8s.io/kubernetes/test/conformance\r\n   --conformance\r\n   --version v1.15\r\n   --url https://github.com/kubernetes/kubernetes/tree/v1.15\r\n   \\~/ii/kubernetes-for-conformance/ > docs/KubeConformance-1.15.md\r\n```\r\n\r\nFor this to work, we'd want to generate for all tests, and include any metadata that's available\r\n\r\n- [ ] Don't skip any tests (get everything, even non-conformant and flakey\r\n- [ ] Generate a json or CSV for now, but include all possible metadata (from comments or otherwise) for each test\r\n- [ ] Include Line Numbers, and if possible the surrounding Context etc function tree that creates the full test name that we see in our audit logs and test-grid",
  "closed_at": "2020-02-26T19:53:37Z",
  "closed_by": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/20407524?v=4",
    "events_url": "https://api.github.com/users/k8s-ci-robot/events{/privacy}",
    "followers_url": "https://api.github.com/users/k8s-ci-robot/followers",
    "following_url": "https://api.github.com/users/k8s-ci-robot/following{/other_user}",
    "gists_url": "https://api.github.com/users/k8s-ci-robot/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/k8s-ci-robot",
    "id": 20407524,
    "login": "k8s-ci-robot",
    "node_id": "MDQ6VXNlcjIwNDA3NTI0",
    "organizations_url": "https://api.github.com/users/k8s-ci-robot/orgs",
    "received_events_url": "https://api.github.com/users/k8s-ci-robot/received_events",
    "repos_url": "https://api.github.com/users/k8s-ci-robot/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/k8s-ci-robot/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k8s-ci-robot/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/k8s-ci-robot"
  },
  "comments": 8,
  "comments_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84330/comments",
  "created_at": "2019-10-25T04:10:19Z",
  "events_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84330/events",
  "html_url": "https://github.com/kubernetes/kubernetes/issues/84330",
  "id": 512292379,
  "labels": [
    {
      "color": "0052cc",
      "default": false,
      "description": "Issues or PRs related to kubernetes conformance tests",
      "id": 717986501,
      "name": "area/conformance",
      "node_id": "MDU6TGFiZWw3MTc5ODY1MDE=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/area/conformance"
    },
    {
      "color": "c7def8",
      "default": false,
      "description": "Categorizes issue or PR as related to a new feature.",
      "id": 267761362,
      "name": "kind/feature",
      "node_id": "MDU6TGFiZWwyNjc3NjEzNjI=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/kind/feature"
    },
    {
      "color": "795548",
      "default": false,
      "description": "Denotes an issue or PR has remained open with no activity and has become stale.",
      "id": 778118404,
      "name": "lifecycle/stale",
      "node_id": "MDU6TGFiZWw3NzgxMTg0MDQ=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/lifecycle/stale"
    },
    {
      "color": "d2b48c",
      "default": false,
      "description": "Categorizes an issue or PR as relevant to SIG Architecture.",
      "id": 636152047,
      "name": "sig/architecture",
      "node_id": "MDU6TGFiZWw2MzYxNTIwNDc=",
      "url": "https://api.github.com/repos/kubernetes/kubernetes/labels/sig/architecture"
    }
  ],
  "labels_url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84330/labels{/name}",
  "locked": false,
  "milestone": null,
  "node_id": "MDU6SXNzdWU1MTIyOTIzNzk=",
  "number": 84330,
  "performed_via_github_app": null,
  "repository_url": "https://api.github.com/repos/kubernetes/kubernetes",
  "state": "closed",
  "title": "Generate Definitive List of all tests from source code w/ metadata in CSV / JSON format",
  "updated_at": "2020-02-26T19:53:37Z",
  "url": "https://api.github.com/repos/kubernetes/kubernetes/issues/84330",
  "user": {
    "avatar_url": "https://avatars2.githubusercontent.com/u/31331?v=4",
    "events_url": "https://api.github.com/users/hh/events{/privacy}",
    "followers_url": "https://api.github.com/users/hh/followers",
    "following_url": "https://api.github.com/users/hh/following{/other_user}",
    "gists_url": "https://api.github.com/users/hh/gists{/gist_id}",
    "gravatar_id": "",
    "html_url": "https://github.com/hh",
    "id": 31331,
    "login": "hh",
    "node_id": "MDQ6VXNlcjMxMzMx",
    "organizations_url": "https://api.github.com/users/hh/orgs",
    "received_events_url": "https://api.github.com/users/hh/received_events",
    "repos_url": "https://api.github.com/users/hh/repos",
    "site_admin": false,
    "starred_url": "https://api.github.com/users/hh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hh/subscriptions",
    "type": "User",
    "url": "https://api.github.com/users/hh"
  }
}